2020-12-06 09:17:11,894 maskrcnn_benchmark INFO: Using 1 GPUs
2020-12-06 09:17:11,894 maskrcnn_benchmark INFO: Namespace(config_file='d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml', custom_dict='custom_dict.txt', distributed=False, local_rank=0, opts=[], skip_test=False, weights='visdrone_model_0360000.pth')
2020-12-06 09:17:11,894 maskrcnn_benchmark INFO: Collecting env info (might take some time)
2020-12-06 09:17:19,523 maskrcnn_benchmark INFO: 
PyTorch version: 1.1.0
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: Ubuntu 16.04.7 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
CMake version: version 3.5.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: GPU 0: GeForce GTX 950M
Nvidia driver version: 450.80.02
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.4

Versions of relevant libraries:
[pip3] numpy==1.19.4
[pip3] torch==1.1.0
[pip3] torchvision==0.3.0
[conda] blas                      1.0                         mkl  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py36he904b0f_0  
[conda] mkl_fft                   1.2.0            py36h23d657b_0  
[conda] mkl_random                1.1.1            py36h0573a6f_0  
[conda] pytorch                   1.1.0           py3.6_cuda9.0.176_cudnn7.5.1_0    pytorch
[conda] pytorch-nightly           1.0.0.dev20190328 py3.6_cuda9.0.176_cudnn7.4.2_0    pytorch
[conda] torchvision               0.3.0           py36_cu9.0.176_1    pytorch
        Pillow (8.0.1)
2020-12-06 09:17:19,524 maskrcnn_benchmark INFO: Loaded configuration file d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml
2020-12-06 09:17:19,525 maskrcnn_benchmark INFO: 
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "e2e_faster_rcnn_X_101_32x8d_FPN_1x.pth"
  BACKBONE:
    CONV_BODY: "R-101-FPN"
    FREEZE_CONV_BODY_AT: 5
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 1000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    STRIDE_IN_1X1: False
    NUM_GROUPS: 32
    WIDTH_PER_GROUP: 8
DATASETS:
  TRAIN: ("giro1_train", )
  TEST: ("giro1_test",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
  NUM_WORKERS: 0
SOLVER:
  BASE_LR: 0.00005
  WEIGHT_DECAY: 0.0001
  STEPS: (480000, 640000,)
  MAX_ITER: 5000
  IMS_PER_BATCH: 2
TEST:
  IMS_PER_BATCH: 1

2020-12-06 09:17:19,527 maskrcnn_benchmark INFO: Running with config:
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  NUM_WORKERS: 0
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('giro1_test',)
  TRAIN: ('giro1_train',)
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MODEL:
  BACKBONE:
    CONV_BODY: R-101-FPN
    FREEZE_CONV_BODY_AT: 5
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FBNET:
    ARCH: default
    ARCH_DEF: 
    BN_TYPE: bn
    DET_HEAD_BLOCKS: []
    DET_HEAD_LAST_SCALE: 1.0
    DET_HEAD_STRIDE: 0
    DW_CONV_SKIP_BN: True
    DW_CONV_SKIP_RELU: True
    KPTS_HEAD_BLOCKS: []
    KPTS_HEAD_LAST_SCALE: 0.0
    KPTS_HEAD_STRIDE: 0
    MASK_HEAD_BLOCKS: []
    MASK_HEAD_LAST_SCALE: 0.0
    MASK_HEAD_STRIDE: 0
    RPN_BN_TYPE: 
    RPN_HEAD_BLOCKS: 0
    SCALE_FACTOR: 1.0
    WIDTH_DIVISOR: 1
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    NUM_GROUPS: 32
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 8
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: ResNet50Conv5ROIFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 2000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 1000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: visdrone_model_0360000.pth
OUTPUT_DIR: .
PATHS_CATALOG: /zold137/maskrcnn_benchmark/config/paths_catalog.py
SOLVER:
  BASE_LR: 5e-05
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  MAX_ITER: 5000
  MOMENTUM: 0.9
  STEPS: (480000, 640000)
  WARMUP_FACTOR: 0.3333333333333333
  WARMUP_ITERS: 500
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 1
2020-12-06 09:17:30,902 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
2020-12-06 09:18:44,966 maskrcnn_benchmark.trainer INFO: Start training
2020-12-06 09:20:01,292 maskrcnn_benchmark.trainer INFO: eta: 5:16:39  iter: 20  loss: 31.8941 (50.7633)  loss_classifier: 17.3145 (28.2616)  loss_box_reg: 1.5622 (2.4631)  loss_objectness: 8.7583 (8.4949)  loss_rpn_box_reg: 1.0750 (11.5437)  time: 3.7038 (3.8152)  data: 0.1324 (0.1508)  lr: 0.000018  max mem: 1313
2020-12-06 09:21:15,032 maskrcnn_benchmark.trainer INFO: eta: 5:10:07  iter: 40  loss: 32.7077 (49.2132)  loss_classifier: 14.7027 (24.0772)  loss_box_reg: 1.5443 (2.1001)  loss_objectness: 8.6256 (8.5992)  loss_rpn_box_reg: 1.3268 (14.4367)  time: 3.6843 (3.7515)  data: 0.1312 (0.1420)  lr: 0.000019  max mem: 1313
2020-12-06 09:22:29,099 maskrcnn_benchmark.trainer INFO: eta: 5:07:32  iter: 60  loss: 19.2685 (42.1428)  loss_classifier: 7.4750 (20.4430)  loss_box_reg: 1.2671 (1.8384)  loss_objectness: 8.0646 (8.5305)  loss_rpn_box_reg: 1.4588 (11.3309)  time: 3.7004 (3.7354)  data: 0.1317 (0.1388)  lr: 0.000021  max mem: 1313
2020-12-06 09:23:43,046 maskrcnn_benchmark.trainer INFO: eta: 5:05:31  iter: 80  loss: 23.0250 (39.3521)  loss_classifier: 5.2149 (17.7313)  loss_box_reg: 0.8442 (1.6598)  loss_objectness: 8.2172 (8.5682)  loss_rpn_box_reg: 0.4842 (11.3928)  time: 3.6999 (3.7259)  data: 0.1333 (0.1377)  lr: 0.000022  max mem: 1313
2020-12-06 09:24:56,854 maskrcnn_benchmark.trainer INFO: eta: 5:03:42  iter: 100  loss: 51.3638 (43.9269)  loss_classifier: 6.6023 (17.0329)  loss_box_reg: 1.3108 (1.9928)  loss_objectness: 7.8639 (8.4560)  loss_rpn_box_reg: 33.4351 (16.4452)  time: 3.6941 (3.7188)  data: 0.1308 (0.1365)  lr: 0.000023  max mem: 1313
2020-12-06 09:26:10,979 maskrcnn_benchmark.trainer INFO: eta: 5:02:17  iter: 120  loss: 29.2824 (42.8828)  loss_classifier: 9.3803 (15.8522)  loss_box_reg: 1.7545 (1.9744)  loss_objectness: 7.7242 (8.4099)  loss_rpn_box_reg: 8.3719 (16.6463)  time: 3.7120 (3.7167)  data: 0.1305 (0.1358)  lr: 0.000025  max mem: 1313
2020-12-06 09:27:25,784 maskrcnn_benchmark.trainer INFO: eta: 5:01:19  iter: 140  loss: 26.5300 (41.3480)  loss_classifier: 5.3758 (15.0777)  loss_box_reg: 1.0532 (1.8838)  loss_objectness: 8.4988 (8.4426)  loss_rpn_box_reg: 4.6060 (15.9439)  time: 3.7071 (3.7201)  data: 0.1316 (0.1365)  lr: 0.000026  max mem: 1313
2020-12-06 09:28:40,871 maskrcnn_benchmark.trainer INFO: eta: 5:00:25  iter: 160  loss: 15.2344 (39.5032)  loss_classifier: 3.5305 (13.9450)  loss_box_reg: 1.1009 (1.8083)  loss_objectness: 8.4597 (8.4607)  loss_rpn_box_reg: 0.9321 (15.2891)  time: 3.7146 (3.7244)  data: 0.1338 (0.1361)  lr: 0.000027  max mem: 1313
2020-12-06 09:29:55,430 maskrcnn_benchmark.trainer INFO: eta: 4:59:13  iter: 180  loss: 21.8256 (39.6646)  loss_classifier: 4.8247 (13.1695)  loss_box_reg: 1.1930 (1.9064)  loss_objectness: 7.8745 (8.4111)  loss_rpn_box_reg: 2.9406 (16.1775)  time: 3.6878 (3.7248)  data: 0.1310 (0.1359)  lr: 0.000029  max mem: 1313
2020-12-06 09:31:10,520 maskrcnn_benchmark.trainer INFO: eta: 4:58:13  iter: 200  loss: 26.5626 (42.1479)  loss_classifier: 5.1136 (13.1582)  loss_box_reg: 2.0934 (2.3923)  loss_objectness: 7.9804 (8.3718)  loss_rpn_box_reg: 6.0815 (18.2256)  time: 3.7124 (3.7277)  data: 0.1383 (0.1364)  lr: 0.000030  max mem: 1313
2020-12-06 09:32:26,140 maskrcnn_benchmark.trainer INFO: eta: 4:57:21  iter: 220  loss: 45.9261 (43.6169)  loss_classifier: 9.4313 (13.8618)  loss_box_reg: 2.5290 (2.9694)  loss_objectness: 8.6945 (8.4147)  loss_rpn_box_reg: 6.5311 (18.3709)  time: 3.7424 (3.7326)  data: 0.1367 (0.1367)  lr: 0.000031  max mem: 1313
2020-12-06 09:33:41,602 maskrcnn_benchmark.trainer INFO: eta: 4:56:23  iter: 240  loss: 21.1950 (44.0742)  loss_classifier: 3.7199 (13.8992)  loss_box_reg: 1.3124 (3.0885)  loss_objectness: 8.7668 (8.4211)  loss_rpn_box_reg: 1.8732 (18.6653)  time: 3.7716 (3.7360)  data: 0.1340 (0.1366)  lr: 0.000033  max mem: 1313
2020-12-06 09:34:56,747 maskrcnn_benchmark.trainer INFO: eta: 4:55:16  iter: 260  loss: 18.6437 (43.9475)  loss_classifier: 3.1794 (13.4622)  loss_box_reg: 2.9129 (3.1694)  loss_objectness: 8.1333 (8.4247)  loss_rpn_box_reg: 1.2300 (18.8912)  time: 3.7236 (3.7376)  data: 0.1404 (0.1367)  lr: 0.000034  max mem: 1313
2020-12-06 09:36:11,405 maskrcnn_benchmark.trainer INFO: eta: 4:53:59  iter: 280  loss: 15.3909 (43.8122)  loss_classifier: 2.9611 (12.8248)  loss_box_reg: 1.7081 (3.0911)  loss_objectness: 8.6346 (8.4338)  loss_rpn_box_reg: 1.2428 (19.4625)  time: 3.7138 (3.7373)  data: 0.1325 (0.1366)  lr: 0.000035  max mem: 1313
2020-12-06 09:37:25,767 maskrcnn_benchmark.trainer INFO: eta: 4:52:39  iter: 300  loss: 32.1417 (44.5321)  loss_classifier: 3.5117 (12.3998)  loss_box_reg: 2.0056 (3.0739)  loss_objectness: 8.4252 (8.4098)  loss_rpn_box_reg: 7.2603 (20.6487)  time: 3.7135 (3.7360)  data: 0.1316 (0.1363)  lr: 0.000037  max mem: 1313
2020-12-06 09:38:39,794 maskrcnn_benchmark.trainer INFO: eta: 4:51:14  iter: 320  loss: 18.6801 (44.5397)  loss_classifier: 2.6357 (12.0935)  loss_box_reg: 0.9051 (2.9958)  loss_objectness: 8.1784 (8.3981)  loss_rpn_box_reg: 1.6583 (21.0524)  time: 3.6881 (3.7338)  data: 0.1361 (0.1363)  lr: 0.000038  max mem: 1313
2020-12-06 09:39:53,190 maskrcnn_benchmark.trainer INFO: eta: 4:49:42  iter: 340  loss: 36.1409 (48.8572)  loss_classifier: 6.5699 (12.0815)  loss_box_reg: 3.8225 (4.1875)  loss_objectness: 8.3752 (8.3854)  loss_rpn_box_reg: 2.6423 (24.2028)  time: 3.6642 (3.7300)  data: 0.1373 (0.1365)  lr: 0.000039  max mem: 1313
2020-12-06 09:41:07,864 maskrcnn_benchmark.trainer INFO: eta: 4:48:28  iter: 360  loss: 52.5216 (50.7235)  loss_classifier: 3.0745 (11.9166)  loss_box_reg: 7.8191 (5.4662)  loss_objectness: 8.1055 (8.3756)  loss_rpn_box_reg: 4.2380 (24.9651)  time: 3.7213 (3.7303)  data: 0.1364 (0.1365)  lr: 0.000041  max mem: 1313
2020-12-06 09:42:22,059 maskrcnn_benchmark.trainer INFO: eta: 4:47:08  iter: 380  loss: 55.7085 (52.6837)  loss_classifier: 1.8427 (11.5410)  loss_box_reg: 5.8288 (6.0085)  loss_objectness: 9.0165 (8.3694)  loss_rpn_box_reg: 6.7649 (26.7648)  time: 3.6966 (3.7292)  data: 0.1298 (0.1363)  lr: 0.000042  max mem: 1313
2020-12-06 09:43:36,157 maskrcnn_benchmark.trainer INFO: eta: 4:45:48  iter: 400  loss: 42.1920 (53.9295)  loss_classifier: 5.3666 (11.7142)  loss_box_reg: 3.2758 (6.0671)  loss_objectness: 8.6637 (8.3730)  loss_rpn_box_reg: 5.8113 (27.7752)  time: 3.6909 (3.7280)  data: 0.1320 (0.1362)  lr: 0.000043  max mem: 1313
2020-12-06 09:44:53,408 maskrcnn_benchmark.trainer INFO: eta: 4:45:03  iter: 420  loss: 24.5228 (53.5092)  loss_classifier: 6.6085 (11.6527)  loss_box_reg: 2.8227 (5.9578)  loss_objectness: 8.8107 (8.3861)  loss_rpn_box_reg: 3.3395 (27.5126)  time: 3.8256 (3.7344)  data: 0.1404 (0.1365)  lr: 0.000045  max mem: 1313
2020-12-06 09:46:12,369 maskrcnn_benchmark.trainer INFO: eta: 4:44:33  iter: 440  loss: 15.4833 (52.9416)  loss_classifier: 2.0116 (11.2460)  loss_box_reg: 2.2931 (5.7865)  loss_objectness: 8.1002 (8.3714)  loss_rpn_box_reg: 3.5578 (27.5377)  time: 3.9267 (3.7441)  data: 0.1448 (0.1372)  lr: 0.000046  max mem: 1313
2020-12-06 09:47:29,796 maskrcnn_benchmark.trainer INFO: eta: 4:43:43  iter: 460  loss: 16.9224 (53.2737)  loss_classifier: 0.4188 (10.7885)  loss_box_reg: 1.0171 (5.5855)  loss_objectness: 8.3938 (8.3604)  loss_rpn_box_reg: 5.0369 (28.5393)  time: 3.8298 (3.7496)  data: 0.1410 (0.1375)  lr: 0.000047  max mem: 1313
2020-12-06 09:48:46,930 maskrcnn_benchmark.trainer INFO: eta: 4:42:48  iter: 480  loss: 28.2254 (54.4198)  loss_classifier: 0.3782 (10.5400)  loss_box_reg: 1.2899 (5.4363)  loss_objectness: 9.0214 (8.3735)  loss_rpn_box_reg: 2.5731 (30.0700)  time: 3.8185 (3.7541)  data: 0.1464 (0.1379)  lr: 0.000049  max mem: 1313
2020-12-06 09:50:04,585 maskrcnn_benchmark.trainer INFO: eta: 4:41:56  iter: 500  loss: 50.2193 (55.4178)  loss_classifier: 14.1137 (11.0939)  loss_box_reg: 2.6473 (5.4988)  loss_objectness: 7.9737 (8.3758)  loss_rpn_box_reg: 11.4220 (30.4492)  time: 3.8752 (3.7592)  data: 0.1461 (0.1383)  lr: 0.000050  max mem: 1313
2020-12-06 09:50:04,587 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 09:50:04,832 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 09:50:46,011 maskrcnn_benchmark.inference INFO: Total run time: 0:00:41.178742 (1.4199566265632366 s / img per device, on 1 devices)
2020-12-06 09:50:46,011 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:39.167333 (1.350597702223679 s / img per device, on 1 devices)
2020-12-06 09:50:46,011 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 09:50:47,776 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 09:50:47,776 maskrcnn_benchmark.inference INFO: {'ar': 0, 'recalls': 0, 'thresholds': 0, 'gt_overlaps': 0, 'gt_labels': tensor([]), 'best match labels': tensor([]), 'best match scores': tensor([]), 'num_pos': 0}
2020-12-06 09:50:47,777 maskrcnn_benchmark.trainer INFO: validation accuracy: -1.000000
2020-12-06 09:50:47,780 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./best_acc_r1.pth
2020-12-06 09:50:48,359 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: best_acc_r1
2020-12-06 09:52:03,759 maskrcnn_benchmark.trainer INFO: eta: 4:47:00  iter: 520  loss: 37.2580 (55.6150)  loss_classifier: 10.6965 (11.2037)  loss_box_reg: 3.1886 (5.6882)  loss_objectness: 8.4673 (8.3594)  loss_rpn_box_reg: 3.6318 (30.3637)  time: 3.7306 (3.8438)  data: 0.1388 (0.2245)  lr: 0.000050  max mem: 1313
2020-12-06 09:53:20,116 maskrcnn_benchmark.trainer INFO: eta: 4:45:39  iter: 540  loss: 33.6279 (55.8464)  loss_classifier: 8.9919 (11.3556)  loss_box_reg: 4.7960 (5.6864)  loss_objectness: 8.4009 (8.3480)  loss_rpn_box_reg: 8.0606 (30.4565)  time: 3.8087 (3.8429)  data: 0.1407 (0.2214)  lr: 0.000050  max mem: 1313
2020-12-06 09:54:34,954 maskrcnn_benchmark.trainer INFO: eta: 4:44:06  iter: 560  loss: 144.9052 (60.7916)  loss_classifier: 8.3577 (12.2762)  loss_box_reg: 11.4328 (6.8946)  loss_objectness: 8.1717 (8.3390)  loss_rpn_box_reg: 10.6581 (33.2818)  time: 3.7502 (3.8393)  data: 0.1371 (0.2184)  lr: 0.000050  max mem: 1313
2020-12-06 09:55:50,272 maskrcnn_benchmark.trainer INFO: eta: 4:42:38  iter: 580  loss: 189.5252 (68.4481)  loss_classifier: 7.0867 (12.8644)  loss_box_reg: 11.9952 (8.1022)  loss_objectness: 8.1557 (8.3329)  loss_rpn_box_reg: 52.2044 (39.1486)  time: 3.7500 (3.8367)  data: 0.1354 (0.2156)  lr: 0.000050  max mem: 1313
2020-12-06 09:57:06,128 maskrcnn_benchmark.trainer INFO: eta: 4:41:15  iter: 600  loss: 54.9329 (74.3180)  loss_classifier: 14.9783 (14.5641)  loss_box_reg: 13.6245 (10.0528)  loss_objectness: 9.0775 (8.3300)  loss_rpn_box_reg: 14.6481 (41.3711)  time: 3.8168 (3.8353)  data: 0.1371 (0.2130)  lr: 0.000050  max mem: 1313
2020-12-06 09:58:22,541 maskrcnn_benchmark.trainer INFO: eta: 4:39:56  iter: 620  loss: 53.7521 (75.8536)  loss_classifier: 4.0710 (14.7307)  loss_box_reg: 21.1060 (11.6094)  loss_objectness: 8.3499 (8.3467)  loss_rpn_box_reg: 6.7318 (41.1669)  time: 3.8006 (3.8348)  data: 0.1502 (0.2111)  lr: 0.000050  max mem: 1313
2020-12-06 09:59:39,302 maskrcnn_benchmark.trainer INFO: eta: 4:38:40  iter: 640  loss: 40.8260 (77.1478)  loss_classifier: 3.6969 (14.6217)  loss_box_reg: 7.9648 (12.3744)  loss_objectness: 8.8691 (8.3538)  loss_rpn_box_reg: 4.2794 (41.7978)  time: 3.8647 (3.8349)  data: 0.1412 (0.2090)  lr: 0.000050  max mem: 1313
2020-12-06 10:00:56,958 maskrcnn_benchmark.trainer INFO: eta: 4:37:29  iter: 660  loss: 66.9168 (78.0703)  loss_classifier: 17.2206 (15.1263)  loss_box_reg: 12.2045 (12.6301)  loss_objectness: 8.6071 (8.3524)  loss_rpn_box_reg: 11.4741 (41.9615)  time: 3.8999 (3.8363)  data: 0.1412 (0.2070)  lr: 0.000050  max mem: 1313
2020-12-06 10:02:14,458 maskrcnn_benchmark.trainer INFO: eta: 4:36:17  iter: 680  loss: 30.0341 (78.3839)  loss_classifier: 15.6880 (16.1480)  loss_box_reg: 3.7255 (12.6412)  loss_objectness: 8.6943 (8.3667)  loss_rpn_box_reg: 1.2376 (41.2281)  time: 3.8658 (3.8375)  data: 0.1431 (0.2052)  lr: 0.000050  max mem: 1313
2020-12-06 10:03:31,182 maskrcnn_benchmark.trainer INFO: eta: 4:35:00  iter: 700  loss: 23.1714 (77.1958)  loss_classifier: 5.6157 (16.1076)  loss_box_reg: 1.9292 (12.4170)  loss_objectness: 8.4274 (8.3725)  loss_rpn_box_reg: 1.6681 (40.2987)  time: 3.8317 (3.8374)  data: 0.1383 (0.2033)  lr: 0.000050  max mem: 1313
2020-12-06 10:04:50,407 maskrcnn_benchmark.trainer INFO: eta: 4:33:58  iter: 720  loss: 21.7497 (76.9705)  loss_classifier: 3.6821 (16.3042)  loss_box_reg: 1.8699 (12.4096)  loss_objectness: 7.9966 (8.3634)  loss_rpn_box_reg: 1.3037 (39.8933)  time: 3.9797 (3.8409)  data: 0.1428 (0.2016)  lr: 0.000050  max mem: 1313
2020-12-06 10:06:07,334 maskrcnn_benchmark.trainer INFO: eta: 4:32:42  iter: 740  loss: 18.3956 (75.9357)  loss_classifier: 2.7457 (15.9802)  loss_box_reg: 1.3431 (12.1680)  loss_objectness: 8.1599 (8.3641)  loss_rpn_box_reg: 1.4231 (39.4234)  time: 3.8217 (3.8410)  data: 0.1394 (0.2000)  lr: 0.000050  max mem: 1313
2020-12-06 10:07:24,213 maskrcnn_benchmark.trainer INFO: eta: 4:31:26  iter: 760  loss: 16.5911 (75.2215)  loss_classifier: 4.6045 (15.8193)  loss_box_reg: 1.7792 (11.9396)  loss_objectness: 8.0773 (8.3573)  loss_rpn_box_reg: 2.0790 (39.1054)  time: 3.8122 (3.8411)  data: 0.1385 (0.1984)  lr: 0.000050  max mem: 1313
2020-12-06 10:08:38,347 maskrcnn_benchmark.trainer INFO: eta: 4:29:54  iter: 780  loss: 15.7796 (74.9094)  loss_classifier: 0.8813 (15.8549)  loss_box_reg: 2.4646 (11.7850)  loss_objectness: 8.4454 (8.3620)  loss_rpn_box_reg: 2.5913 (38.9075)  time: 3.7032 (3.8377)  data: 0.1329 (0.1968)  lr: 0.000050  max mem: 1313
2020-12-06 10:09:52,610 maskrcnn_benchmark.trainer INFO: eta: 4:28:25  iter: 800  loss: 24.4459 (74.0781)  loss_classifier: 3.5341 (15.6463)  loss_box_reg: 2.2591 (11.6626)  loss_objectness: 8.3802 (8.3714)  loss_rpn_box_reg: 0.9584 (38.3978)  time: 3.6975 (3.8345)  data: 0.1334 (0.1953)  lr: 0.000050  max mem: 1313
2020-12-06 10:11:07,117 maskrcnn_benchmark.trainer INFO: eta: 4:26:57  iter: 820  loss: 22.2143 (73.5207)  loss_classifier: 4.7582 (15.6879)  loss_box_reg: 3.5907 (11.5266)  loss_objectness: 8.6327 (8.3785)  loss_rpn_box_reg: 1.3652 (37.9277)  time: 3.7142 (3.8319)  data: 0.1318 (0.1938)  lr: 0.000050  max mem: 1313
2020-12-06 10:12:20,760 maskrcnn_benchmark.trainer INFO: eta: 4:25:25  iter: 840  loss: 52.4660 (73.8780)  loss_classifier: 11.9335 (16.3577)  loss_box_reg: 1.9687 (11.4773)  loss_objectness: 7.8656 (8.3741)  loss_rpn_box_reg: 2.0697 (37.6689)  time: 3.6709 (3.8283)  data: 0.1317 (0.1924)  lr: 0.000050  max mem: 1313
2020-12-06 10:13:34,952 maskrcnn_benchmark.trainer INFO: eta: 4:23:57  iter: 860  loss: 80.1781 (76.6468)  loss_classifier: 26.3698 (17.0229)  loss_box_reg: 19.5572 (12.0247)  loss_objectness: 8.6037 (8.3680)  loss_rpn_box_reg: 12.6768 (39.2312)  time: 3.7067 (3.8256)  data: 0.1290 (0.1910)  lr: 0.000050  max mem: 1313
2020-12-06 10:14:48,727 maskrcnn_benchmark.trainer INFO: eta: 4:22:28  iter: 880  loss: 103.8924 (80.5488)  loss_classifier: 20.0843 (18.5485)  loss_box_reg: 20.5448 (13.5409)  loss_objectness: 8.9674 (8.3659)  loss_rpn_box_reg: 9.6911 (40.0935)  time: 3.6828 (3.8224)  data: 0.1374 (0.1898)  lr: 0.000050  max mem: 1313
2020-12-06 10:16:02,536 maskrcnn_benchmark.trainer INFO: eta: 4:21:00  iter: 900  loss: 139.0266 (82.1955)  loss_classifier: 34.9020 (19.7717)  loss_box_reg: 23.3362 (13.9646)  loss_objectness: 8.2465 (8.3713)  loss_rpn_box_reg: 3.8535 (40.0879)  time: 3.6859 (3.8195)  data: 0.1348 (0.1886)  lr: 0.000050  max mem: 1313
2020-12-06 10:17:19,603 maskrcnn_benchmark.trainer INFO: eta: 4:19:46  iter: 920  loss: 31.2201 (82.2927)  loss_classifier: 6.4665 (19.9360)  loss_box_reg: 1.5768 (13.9023)  loss_objectness: 9.0862 (8.3753)  loss_rpn_box_reg: 0.1786 (40.0790)  time: 3.7424 (3.8202)  data: 0.1935 (0.1907)  lr: 0.000050  max mem: 1313
2020-12-06 10:18:33,647 maskrcnn_benchmark.trainer INFO: eta: 4:18:20  iter: 940  loss: 49.6716 (83.9827)  loss_classifier: 15.5986 (20.1084)  loss_box_reg: 9.5499 (14.3496)  loss_objectness: 9.0123 (8.3827)  loss_rpn_box_reg: 4.3240 (41.1419)  time: 3.6966 (3.8177)  data: 0.1393 (0.1899)  lr: 0.000050  max mem: 1313
2020-12-06 10:19:47,001 maskrcnn_benchmark.trainer INFO: eta: 4:16:51  iter: 960  loss: 79.0446 (86.1870)  loss_classifier: 23.4277 (20.2157)  loss_box_reg: 15.2695 (15.0390)  loss_objectness: 7.7317 (8.3753)  loss_rpn_box_reg: 9.9109 (42.5570)  time: 3.6635 (3.8146)  data: 0.1347 (0.1888)  lr: 0.000050  max mem: 1313
2020-12-06 10:21:00,304 maskrcnn_benchmark.trainer INFO: eta: 4:15:22  iter: 980  loss: 103.2469 (89.0428)  loss_classifier: 25.1851 (21.4065)  loss_box_reg: 38.0705 (15.7467)  loss_objectness: 8.4617 (8.3718)  loss_rpn_box_reg: 2.6971 (43.5178)  time: 3.6552 (3.8116)  data: 0.1373 (0.1877)  lr: 0.000050  max mem: 1313
2020-12-06 10:22:13,990 maskrcnn_benchmark.trainer INFO: eta: 4:13:56  iter: 1000  loss: 100.0594 (91.8488)  loss_classifier: 39.7095 (22.6308)  loss_box_reg: 23.9082 (17.6434)  loss_objectness: 8.6908 (8.3855)  loss_rpn_box_reg: 11.6292 (43.1889)  time: 3.6707 (3.8090)  data: 0.1342 (0.1867)  lr: 0.000050  max mem: 1313
2020-12-06 10:22:13,992 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 10:22:14,043 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 10:22:54,978 maskrcnn_benchmark.inference INFO: Total run time: 0:00:40.935156 (1.4115570906935067 s / img per device, on 1 devices)
2020-12-06 10:22:54,979 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:39.220762 (1.3524400776830212 s / img per device, on 1 devices)
2020-12-06 10:22:54,979 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 10:22:56,746 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 10:22:56,746 maskrcnn_benchmark.inference INFO: {'ar': 0, 'recalls': 0, 'thresholds': 0, 'gt_overlaps': 0, 'gt_labels': tensor([]), 'best match labels': tensor([]), 'best match scores': tensor([]), 'num_pos': 0}
2020-12-06 10:22:56,746 maskrcnn_benchmark.trainer INFO: validation accuracy: -1.000000
2020-12-06 10:24:10,345 maskrcnn_benchmark.trainer INFO: eta: 4:15:16  iter: 1020  loss: 54.8113 (92.0749)  loss_classifier: 31.4843 (23.2188)  loss_box_reg: 8.5636 (17.7625)  loss_objectness: 8.8794 (8.3965)  loss_rpn_box_reg: 1.3719 (42.6972)  time: 3.6787 (3.8484)  data: 0.1311 (0.2276)  lr: 0.000050  max mem: 1313
2020-12-06 10:25:24,320 maskrcnn_benchmark.trainer INFO: eta: 4:13:48  iter: 1040  loss: 79.7633 (91.9549)  loss_classifier: 21.6086 (23.3111)  loss_box_reg: 20.5327 (17.8631)  loss_objectness: 8.8540 (8.4039)  loss_rpn_box_reg: 7.9286 (42.3768)  time: 3.6882 (3.8455)  data: 0.1328 (0.2258)  lr: 0.000050  max mem: 1313
2020-12-06 10:26:38,536 maskrcnn_benchmark.trainer INFO: eta: 4:12:21  iter: 1060  loss: 30.0555 (91.5501)  loss_classifier: 7.2337 (23.4134)  loss_box_reg: 5.9696 (17.7488)  loss_objectness: 9.1857 (8.4160)  loss_rpn_box_reg: 3.3912 (41.9718)  time: 3.7125 (3.8430)  data: 0.1334 (0.2241)  lr: 0.000050  max mem: 1313
2020-12-06 10:27:52,588 maskrcnn_benchmark.trainer INFO: eta: 4:10:54  iter: 1080  loss: 25.8882 (90.9389)  loss_classifier: 4.6904 (23.1371)  loss_box_reg: 4.7165 (17.5614)  loss_objectness: 8.1299 (8.4147)  loss_rpn_box_reg: 2.1385 (41.8257)  time: 3.7078 (3.8404)  data: 0.1334 (0.2225)  lr: 0.000050  max mem: 1313
2020-12-06 10:29:06,966 maskrcnn_benchmark.trainer INFO: eta: 4:09:28  iter: 1100  loss: 64.5607 (90.8460)  loss_classifier: 11.5501 (23.1171)  loss_box_reg: 2.9879 (17.3568)  loss_objectness: 8.2564 (8.4130)  loss_rpn_box_reg: 13.1047 (41.9591)  time: 3.7116 (3.8382)  data: 0.1310 (0.2208)  lr: 0.000050  max mem: 1313
2020-12-06 10:30:21,035 maskrcnn_benchmark.trainer INFO: eta: 4:08:02  iter: 1120  loss: 58.2711 (91.2464)  loss_classifier: 24.7695 (23.4580)  loss_box_reg: 4.2439 (17.1845)  loss_objectness: 8.5654 (8.4122)  loss_rpn_box_reg: 10.0125 (42.1917)  time: 3.7085 (3.8358)  data: 0.1334 (0.2193)  lr: 0.000050  max mem: 1313
2020-12-06 10:31:34,334 maskrcnn_benchmark.trainer INFO: eta: 4:06:34  iter: 1140  loss: 74.7617 (92.6537)  loss_classifier: 26.4305 (24.1209)  loss_box_reg: 10.9675 (17.7110)  loss_objectness: 8.8031 (8.4186)  loss_rpn_box_reg: 5.2822 (42.4032)  time: 3.6587 (3.8328)  data: 0.1338 (0.2178)  lr: 0.000050  max mem: 1313
2020-12-06 10:32:48,037 maskrcnn_benchmark.trainer INFO: eta: 4:05:08  iter: 1160  loss: 71.8891 (93.9982)  loss_classifier: 6.8751 (24.8801)  loss_box_reg: 7.5809 (17.8916)  loss_objectness: 8.4356 (8.4156)  loss_rpn_box_reg: 12.0174 (42.8109)  time: 3.6941 (3.8302)  data: 0.1315 (0.2163)  lr: 0.000050  max mem: 1313
2020-12-06 10:34:01,855 maskrcnn_benchmark.trainer INFO: eta: 4:03:42  iter: 1180  loss: 63.4484 (94.2964)  loss_classifier: 11.2569 (24.8522)  loss_box_reg: 9.5668 (17.9421)  loss_objectness: 8.9501 (8.4141)  loss_rpn_box_reg: 8.9123 (43.0880)  time: 3.6886 (3.8279)  data: 0.1324 (0.2149)  lr: 0.000050  max mem: 1313
2020-12-06 10:35:15,843 maskrcnn_benchmark.trainer INFO: eta: 4:02:17  iter: 1200  loss: 150.8944 (95.1863)  loss_classifier: 10.6721 (25.0582)  loss_box_reg: 19.7416 (18.6325)  loss_objectness: 8.5965 (8.4169)  loss_rpn_box_reg: 2.8297 (43.0787)  time: 3.7024 (3.8257)  data: 0.1365 (0.2137)  lr: 0.000050  max mem: 1313
2020-12-06 10:36:29,635 maskrcnn_benchmark.trainer INFO: eta: 4:00:52  iter: 1220  loss: 56.8748 (95.6441)  loss_classifier: 19.4967 (25.1224)  loss_box_reg: 8.6595 (18.8653)  loss_objectness: 7.5742 (8.4057)  loss_rpn_box_reg: 3.7020 (43.2507)  time: 3.6852 (3.8235)  data: 0.1362 (0.2125)  lr: 0.000050  max mem: 1313
2020-12-06 10:37:42,834 maskrcnn_benchmark.trainer INFO: eta: 3:59:26  iter: 1240  loss: 78.3892 (97.5403)  loss_classifier: 11.7049 (25.5753)  loss_box_reg: 22.9888 (20.8537)  loss_objectness: 8.3828 (8.4130)  loss_rpn_box_reg: 3.0488 (42.6982)  time: 3.6573 (3.8209)  data: 0.1331 (0.2112)  lr: 0.000050  max mem: 1313
2020-12-06 10:38:56,345 maskrcnn_benchmark.trainer INFO: eta: 3:58:01  iter: 1260  loss: 108.2365 (101.1428)  loss_classifier: 1.3216 (26.3006)  loss_box_reg: 9.3782 (22.1811)  loss_objectness: 8.7361 (8.4147)  loss_rpn_box_reg: 4.7905 (44.2464)  time: 3.6665 (3.8185)  data: 0.1348 (0.2100)  lr: 0.000050  max mem: 1313
2020-12-06 10:40:10,200 maskrcnn_benchmark.trainer INFO: eta: 3:56:37  iter: 1280  loss: 160.4894 (102.5200)  loss_classifier: 19.1528 (26.4670)  loss_box_reg: 18.1237 (22.4636)  loss_objectness: 7.6136 (8.4076)  loss_rpn_box_reg: 27.3485 (45.1819)  time: 3.6933 (3.8166)  data: 0.1339 (0.2088)  lr: 0.000050  max mem: 1313
2020-12-06 10:41:24,074 maskrcnn_benchmark.trainer INFO: eta: 3:55:14  iter: 1300  loss: 54.4592 (102.4198)  loss_classifier: 14.2140 (26.5320)  loss_box_reg: 6.5937 (22.3136)  loss_objectness: 8.6077 (8.4104)  loss_rpn_box_reg: 4.0644 (45.1637)  time: 3.7087 (3.8147)  data: 0.1307 (0.2077)  lr: 0.000050  max mem: 1313
2020-12-06 10:42:39,400 maskrcnn_benchmark.trainer INFO: eta: 3:53:55  iter: 1320  loss: 167.3698 (103.7191)  loss_classifier: 37.9442 (27.1356)  loss_box_reg: 23.6569 (22.3073)  loss_objectness: 8.1099 (8.4034)  loss_rpn_box_reg: 23.6917 (45.8727)  time: 3.7587 (3.8140)  data: 0.1387 (0.2066)  lr: 0.000050  max mem: 1313
2020-12-06 10:43:54,321 maskrcnn_benchmark.trainer INFO: eta: 3:52:35  iter: 1340  loss: 145.8731 (105.1637)  loss_classifier: 20.4243 (27.7115)  loss_box_reg: 29.9575 (22.7445)  loss_objectness: 8.3480 (8.4041)  loss_rpn_box_reg: 4.9371 (46.3036)  time: 3.7064 (3.8129)  data: 0.1376 (0.2056)  lr: 0.000050  max mem: 1313
2020-12-06 10:45:10,054 maskrcnn_benchmark.trainer INFO: eta: 3:51:17  iter: 1360  loss: 147.5894 (106.2366)  loss_classifier: 8.6919 (27.5087)  loss_box_reg: 33.1935 (23.9265)  loss_objectness: 8.0885 (8.4020)  loss_rpn_box_reg: 16.0740 (46.3993)  time: 3.7505 (3.8126)  data: 0.1365 (0.2046)  lr: 0.000050  max mem: 1313
2020-12-06 10:46:23,731 maskrcnn_benchmark.trainer INFO: eta: 3:49:54  iter: 1380  loss: 92.9253 (107.0806)  loss_classifier: 2.2341 (27.4868)  loss_box_reg: 53.9717 (24.9783)  loss_objectness: 8.4759 (8.4044)  loss_rpn_box_reg: 2.4509 (46.2111)  time: 3.6796 (3.8107)  data: 0.1339 (0.2036)  lr: 0.000050  max mem: 1313
2020-12-06 10:47:38,001 maskrcnn_benchmark.trainer INFO: eta: 3:48:33  iter: 1400  loss: 54.9344 (107.5836)  loss_classifier: 5.4442 (27.2910)  loss_box_reg: 10.8793 (25.0419)  loss_objectness: 9.2102 (8.4089)  loss_rpn_box_reg: 11.5980 (46.8417)  time: 3.7188 (3.8093)  data: 0.1337 (0.2027)  lr: 0.000050  max mem: 1313
2020-12-06 10:48:53,865 maskrcnn_benchmark.trainer INFO: eta: 3:47:16  iter: 1420  loss: 49.9262 (107.3845)  loss_classifier: 7.6114 (27.1475)  loss_box_reg: 1.7430 (24.9052)  loss_objectness: 8.7147 (8.4101)  loss_rpn_box_reg: 3.7139 (46.9217)  time: 3.7703 (3.8091)  data: 0.1378 (0.2018)  lr: 0.000050  max mem: 1313
2020-12-06 10:50:09,557 maskrcnn_benchmark.trainer INFO: eta: 3:45:59  iter: 1440  loss: 15.1779 (106.7595)  loss_classifier: 2.1448 (26.9273)  loss_box_reg: 0.5557 (24.6377)  loss_objectness: 8.0934 (8.4058)  loss_rpn_box_reg: 4.4442 (46.7887)  time: 3.7757 (3.8087)  data: 0.1377 (0.2009)  lr: 0.000050  max mem: 1313
2020-12-06 10:51:23,137 maskrcnn_benchmark.trainer INFO: eta: 3:44:36  iter: 1460  loss: 67.7722 (107.0203)  loss_classifier: 8.6451 (26.9102)  loss_box_reg: 14.1737 (24.6177)  loss_objectness: 8.4709 (8.4073)  loss_rpn_box_reg: 4.0665 (47.0851)  time: 3.6724 (3.8070)  data: 0.1401 (0.2001)  lr: 0.000050  max mem: 1313
2020-12-06 10:52:38,083 maskrcnn_benchmark.trainer INFO: eta: 3:43:17  iter: 1480  loss: 86.5989 (107.5897)  loss_classifier: 8.3048 (27.0042)  loss_box_reg: 5.3482 (24.5540)  loss_objectness: 7.6654 (8.3986)  loss_rpn_box_reg: 13.6524 (47.6329)  time: 3.7075 (3.8062)  data: 0.1367 (0.1992)  lr: 0.000050  max mem: 1313
2020-12-06 10:53:52,003 maskrcnn_benchmark.trainer INFO: eta: 3:41:56  iter: 1500  loss: 56.0458 (107.6361)  loss_classifier: 8.0192 (26.9970)  loss_box_reg: 10.9909 (24.5030)  loss_objectness: 8.6302 (8.4009)  loss_rpn_box_reg: 9.4323 (47.7351)  time: 3.6922 (3.8047)  data: 0.1412 (0.1985)  lr: 0.000050  max mem: 1313
2020-12-06 10:53:52,005 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 10:53:52,060 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 10:54:33,203 maskrcnn_benchmark.inference INFO: Total run time: 0:00:41.142615 (1.4187108566021096 s / img per device, on 1 devices)
2020-12-06 10:54:33,203 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:39.365665 (1.3574367145012165 s / img per device, on 1 devices)
2020-12-06 10:54:33,203 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 10:54:34,893 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 10:54:34,894 maskrcnn_benchmark.inference INFO: {'ar': 0, 'recalls': 0, 'thresholds': 0, 'gt_overlaps': 0, 'gt_labels': tensor([]), 'best match labels': tensor([]), 'best match scores': tensor([]), 'num_pos': 0}
2020-12-06 10:54:34,894 maskrcnn_benchmark.trainer INFO: validation accuracy: -1.000000
2020-12-06 10:55:49,530 maskrcnn_benchmark.trainer INFO: eta: 3:42:15  iter: 1520  loss: 28.8385 (107.1587)  loss_classifier: 6.5339 (26.7902)  loss_box_reg: 2.3564 (24.3121)  loss_objectness: 8.2551 (8.3972)  loss_rpn_box_reg: 4.3266 (47.6592)  time: 3.7205 (3.8319)  data: 0.1373 (0.2259)  lr: 0.000050  max mem: 1313
2020-12-06 10:57:03,112 maskrcnn_benchmark.trainer INFO: eta: 3:40:51  iter: 1540  loss: 37.8924 (107.0999)  loss_classifier: 6.0379 (26.6587)  loss_box_reg: 4.3928 (24.2647)  loss_objectness: 8.3971 (8.3926)  loss_rpn_box_reg: 6.1559 (47.7838)  time: 3.6717 (3.8300)  data: 0.1342 (0.2247)  lr: 0.000050  max mem: 1313
2020-12-06 10:58:16,785 maskrcnn_benchmark.trainer INFO: eta: 3:39:28  iter: 1560  loss: 287.5982 (110.1727)  loss_classifier: 8.7565 (27.3137)  loss_box_reg: 48.8183 (25.7323)  loss_objectness: 8.4877 (8.3917)  loss_rpn_box_reg: 13.3398 (48.7350)  time: 3.6720 (3.8281)  data: 0.1333 (0.2236)  lr: 0.000050  max mem: 1313
2020-12-06 10:59:30,686 maskrcnn_benchmark.trainer INFO: eta: 3:38:06  iter: 1580  loss: 55.6171 (110.7122)  loss_classifier: 3.3054 (27.2726)  loss_box_reg: 6.2435 (26.3715)  loss_objectness: 8.8311 (8.3967)  loss_rpn_box_reg: 12.4092 (48.6714)  time: 3.6976 (3.8264)  data: 0.1370 (0.2224)  lr: 0.000050  max mem: 1313
2020-12-06 11:00:45,600 maskrcnn_benchmark.trainer INFO: eta: 3:36:46  iter: 1600  loss: 23.7045 (110.0646)  loss_classifier: 4.1838 (27.0734)  loss_box_reg: 5.2501 (26.2144)  loss_objectness: 8.6519 (8.3987)  loss_rpn_box_reg: 1.9350 (48.3781)  time: 3.7153 (3.8254)  data: 0.1360 (0.2214)  lr: 0.000050  max mem: 1313
2020-12-06 11:01:59,692 maskrcnn_benchmark.trainer INFO: eta: 3:35:24  iter: 1620  loss: 25.2867 (109.6405)  loss_classifier: 5.9555 (26.9056)  loss_box_reg: 6.7220 (26.1729)  loss_objectness: 8.2259 (8.4010)  loss_rpn_box_reg: 1.8369 (48.1609)  time: 3.7067 (3.8239)  data: 0.1325 (0.2203)  lr: 0.000050  max mem: 1313
2020-12-06 11:03:14,092 maskrcnn_benchmark.trainer INFO: eta: 3:34:04  iter: 1640  loss: 56.7738 (109.8298)  loss_classifier: 15.3896 (26.9589)  loss_box_reg: 9.5587 (26.3397)  loss_objectness: 8.2615 (8.4004)  loss_rpn_box_reg: 8.5521 (48.1308)  time: 3.6579 (3.8226)  data: 0.1365 (0.2194)  lr: 0.000050  max mem: 1313
2020-12-06 11:04:27,917 maskrcnn_benchmark.trainer INFO: eta: 3:32:42  iter: 1660  loss: 46.0165 (109.7192)  loss_classifier: 4.6862 (26.7913)  loss_box_reg: 15.8718 (26.7081)  loss_objectness: 8.5018 (8.4038)  loss_rpn_box_reg: 2.3635 (47.8160)  time: 3.6754 (3.8210)  data: 0.1336 (0.2184)  lr: 0.000050  max mem: 1313
2020-12-06 11:05:42,446 maskrcnn_benchmark.trainer INFO: eta: 3:31:22  iter: 1680  loss: 85.5669 (109.5503)  loss_classifier: 3.4426 (26.5998)  loss_box_reg: 21.6047 (26.7964)  loss_objectness: 7.9754 (8.3947)  loss_rpn_box_reg: 15.5937 (47.7594)  time: 3.7165 (3.8199)  data: 0.1360 (0.2174)  lr: 0.000050  max mem: 1313
2020-12-06 11:06:57,298 maskrcnn_benchmark.trainer INFO: eta: 3:30:02  iter: 1700  loss: 37.6241 (108.9308)  loss_classifier: 1.3476 (26.3685)  loss_box_reg: 5.6756 (26.6753)  loss_objectness: 8.5743 (8.3931)  loss_rpn_box_reg: 1.3853 (47.4939)  time: 3.7187 (3.8190)  data: 0.1363 (0.2164)  lr: 0.000050  max mem: 1313
2020-12-06 11:08:12,118 maskrcnn_benchmark.trainer INFO: eta: 3:28:43  iter: 1720  loss: 99.1383 (109.3490)  loss_classifier: 5.7945 (26.4492)  loss_box_reg: 16.8539 (26.7576)  loss_objectness: 7.5365 (8.3840)  loss_rpn_box_reg: 19.3784 (47.7582)  time: 3.7043 (3.8181)  data: 0.1377 (0.2155)  lr: 0.000050  max mem: 1313
2020-12-06 11:09:28,002 maskrcnn_benchmark.trainer INFO: eta: 3:27:26  iter: 1740  loss: 22.2594 (108.7627)  loss_classifier: 4.8522 (26.2488)  loss_box_reg: 3.0932 (26.6765)  loss_objectness: 8.4577 (8.3855)  loss_rpn_box_reg: 1.3556 (47.4518)  time: 3.7171 (3.8178)  data: 0.1394 (0.2147)  lr: 0.000050  max mem: 1313
2020-12-06 11:10:44,785 maskrcnn_benchmark.trainer INFO: eta: 3:26:10  iter: 1760  loss: 27.9067 (108.2365)  loss_classifier: 2.4175 (26.0819)  loss_box_reg: 4.4430 (26.5484)  loss_objectness: 8.5400 (8.3860)  loss_rpn_box_reg: 1.1556 (47.2203)  time: 3.8447 (3.8181)  data: 0.1387 (0.2138)  lr: 0.000050  max mem: 1313
2020-12-06 11:11:58,793 maskrcnn_benchmark.trainer INFO: eta: 3:24:49  iter: 1780  loss: 46.4039 (108.2928)  loss_classifier: 4.8224 (26.0455)  loss_box_reg: 17.0732 (26.6167)  loss_objectness: 7.9485 (8.3833)  loss_rpn_box_reg: 9.2776 (47.2472)  time: 3.6694 (3.8168)  data: 0.1318 (0.2129)  lr: 0.000050  max mem: 1313
2020-12-06 11:13:13,664 maskrcnn_benchmark.trainer INFO: eta: 3:23:31  iter: 1800  loss: 24.0681 (107.6180)  loss_classifier: 1.4665 (25.8090)  loss_box_reg: 1.8033 (26.3643)  loss_objectness: 8.0907 (8.3795)  loss_rpn_box_reg: 4.9858 (47.0651)  time: 3.7195 (3.8159)  data: 0.1336 (0.2121)  lr: 0.000050  max mem: 1313
2020-12-06 11:14:27,461 maskrcnn_benchmark.trainer INFO: eta: 3:22:10  iter: 1820  loss: 39.2992 (107.0891)  loss_classifier: 7.5866 (25.6983)  loss_box_reg: 6.9612 (26.2119)  loss_objectness: 8.3230 (8.3803)  loss_rpn_box_reg: 4.4381 (46.7986)  time: 3.6871 (3.8146)  data: 0.1342 (0.2112)  lr: 0.000050  max mem: 1313
2020-12-06 11:15:41,660 maskrcnn_benchmark.trainer INFO: eta: 3:20:50  iter: 1840  loss: 30.8538 (106.5951)  loss_classifier: 2.3717 (25.4709)  loss_box_reg: 3.5011 (26.0093)  loss_objectness: 8.4315 (8.3777)  loss_rpn_box_reg: 3.0315 (46.7372)  time: 3.7161 (3.8134)  data: 0.1334 (0.2104)  lr: 0.000050  max mem: 1313
2020-12-06 11:16:55,648 maskrcnn_benchmark.trainer INFO: eta: 3:19:30  iter: 1860  loss: 26.4411 (105.9007)  loss_classifier: 1.4904 (25.2412)  loss_box_reg: 5.7290 (25.8217)  loss_objectness: 8.6786 (8.3827)  loss_rpn_box_reg: 4.4733 (46.4551)  time: 3.7101 (3.8122)  data: 0.1312 (0.2095)  lr: 0.000050  max mem: 1313
2020-12-06 11:18:13,142 maskrcnn_benchmark.trainer INFO: eta: 3:18:16  iter: 1880  loss: 28.9902 (105.7372)  loss_classifier: 3.7406 (25.0548)  loss_box_reg: 5.1184 (25.6901)  loss_objectness: 8.4573 (8.3818)  loss_rpn_box_reg: 3.2699 (46.6106)  time: 3.8792 (3.8129)  data: 0.1444 (0.2090)  lr: 0.000050  max mem: 1313
2020-12-06 11:19:26,740 maskrcnn_benchmark.trainer INFO: eta: 3:16:55  iter: 1900  loss: 71.4509 (106.0920)  loss_classifier: 9.5465 (25.2551)  loss_box_reg: 15.8663 (25.8588)  loss_objectness: 8.2667 (8.3835)  loss_rpn_box_reg: 2.6764 (46.5945)  time: 3.6568 (3.8115)  data: 0.1365 (0.2082)  lr: 0.000050  max mem: 1313
2020-12-06 11:20:41,537 maskrcnn_benchmark.trainer INFO: eta: 3:15:36  iter: 1920  loss: 86.1111 (106.6743)  loss_classifier: 14.5258 (25.3625)  loss_box_reg: 22.4971 (26.1181)  loss_objectness: 7.7159 (8.3759)  loss_rpn_box_reg: 17.8235 (46.8179)  time: 3.7103 (3.8107)  data: 0.1353 (0.2075)  lr: 0.000050  max mem: 1313
2020-12-06 11:21:56,675 maskrcnn_benchmark.trainer INFO: eta: 3:14:19  iter: 1940  loss: 22.9900 (106.2721)  loss_classifier: 9.1244 (25.2660)  loss_box_reg: 3.2217 (26.0600)  loss_objectness: 8.1352 (8.3759)  loss_rpn_box_reg: 1.1145 (46.5703)  time: 3.7640 (3.8102)  data: 0.1340 (0.2068)  lr: 0.000050  max mem: 1313
2020-12-06 11:23:12,099 maskrcnn_benchmark.trainer INFO: eta: 3:13:01  iter: 1960  loss: 61.6637 (105.9976)  loss_classifier: 6.3737 (25.2285)  loss_box_reg: 6.3870 (25.9056)  loss_objectness: 8.7402 (8.3757)  loss_rpn_box_reg: 9.4241 (46.4877)  time: 3.7548 (3.8098)  data: 0.1329 (0.2061)  lr: 0.000050  max mem: 1313
2020-12-06 11:24:26,548 maskrcnn_benchmark.trainer INFO: eta: 3:11:42  iter: 1980  loss: 41.5181 (106.2278)  loss_classifier: 9.9543 (25.2898)  loss_box_reg: 9.5629 (25.8806)  loss_objectness: 8.3481 (8.3731)  loss_rpn_box_reg: 3.2309 (46.6844)  time: 3.6808 (3.8089)  data: 0.1314 (0.2053)  lr: 0.000050  max mem: 1313
2020-12-06 11:25:40,056 maskrcnn_benchmark.trainer INFO: eta: 3:10:22  iter: 2000  loss: 115.6692 (108.2879)  loss_classifier: 14.9703 (25.3227)  loss_box_reg: 34.3906 (27.1859)  loss_objectness: 8.2053 (8.3688)  loss_rpn_box_reg: 3.9945 (47.4105)  time: 3.6634 (3.8075)  data: 0.1337 (0.2046)  lr: 0.000050  max mem: 1313
2020-12-06 11:25:40,058 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 11:25:40,109 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 11:26:20,342 maskrcnn_benchmark.inference INFO: Total run time: 0:00:40.231853 (1.3873052843685807 s / img per device, on 1 devices)
2020-12-06 11:26:20,342 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:38.565398 (1.3298413095803097 s / img per device, on 1 devices)
2020-12-06 11:26:20,342 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 11:26:22,072 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 11:26:22,072 maskrcnn_benchmark.inference INFO: {'ar': 0, 'recalls': 0, 'thresholds': 0, 'gt_overlaps': 0, 'gt_labels': tensor([]), 'best match labels': tensor([]), 'best match scores': tensor([]), 'num_pos': 0}
2020-12-06 11:26:22,073 maskrcnn_benchmark.trainer INFO: validation accuracy: -1.000000
2020-12-06 11:27:36,465 maskrcnn_benchmark.trainer INFO: eta: 3:10:05  iter: 2020  loss: 83.9010 (108.5820)  loss_classifier: 10.3528 (25.3385)  loss_box_reg: 23.6052 (27.6294)  loss_objectness: 8.8871 (8.3746)  loss_rpn_box_reg: 5.0671 (47.2396)  time: 3.7161 (3.8275)  data: 0.1351 (0.2248)  lr: 0.000050  max mem: 1313
2020-12-06 11:30:18,218 maskrcnn_benchmark INFO: Using 1 GPUs
2020-12-06 11:30:18,218 maskrcnn_benchmark INFO: Namespace(config_file='d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml', custom_dict='custom_dict.txt', distributed=False, local_rank=0, opts=[], skip_test=False, weights='visdrone_model_0360000.pth')
2020-12-06 11:30:18,218 maskrcnn_benchmark INFO: Collecting env info (might take some time)
2020-12-06 11:30:22,630 maskrcnn_benchmark INFO: 
PyTorch version: 1.1.0
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: Ubuntu 16.04.7 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
CMake version: version 3.5.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: GPU 0: GeForce GTX 950M
Nvidia driver version: 450.80.02
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.4

Versions of relevant libraries:
[pip3] numpy==1.19.4
[pip3] torch==1.1.0
[pip3] torchvision==0.3.0
[conda] blas                      1.0                         mkl  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py36he904b0f_0  
[conda] mkl_fft                   1.2.0            py36h23d657b_0  
[conda] mkl_random                1.1.1            py36h0573a6f_0  
[conda] pytorch                   1.1.0           py3.6_cuda9.0.176_cudnn7.5.1_0    pytorch
[conda] pytorch-nightly           1.0.0.dev20190328 py3.6_cuda9.0.176_cudnn7.4.2_0    pytorch
[conda] torchvision               0.3.0           py36_cu9.0.176_1    pytorch
        Pillow (8.0.1)
2020-12-06 11:30:22,631 maskrcnn_benchmark INFO: Loaded configuration file d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml
2020-12-06 11:30:22,632 maskrcnn_benchmark INFO: 
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "e2e_faster_rcnn_X_101_32x8d_FPN_1x.pth"
  BACKBONE:
    CONV_BODY: "R-101-FPN"
    FREEZE_CONV_BODY_AT: 5
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 1000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    STRIDE_IN_1X1: False
    NUM_GROUPS: 32
    WIDTH_PER_GROUP: 8
DATASETS:
  TRAIN: ("giro1_train", )
  TEST: ("giro1_test",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
  NUM_WORKERS: 0
SOLVER:
  BASE_LR: 0.000005
  WEIGHT_DECAY: 0.0001
  STEPS: (480000, 640000,)
  MAX_ITER: 3000
  IMS_PER_BATCH: 2
TEST:
  IMS_PER_BATCH: 1

2020-12-06 11:30:22,636 maskrcnn_benchmark INFO: Running with config:
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  NUM_WORKERS: 0
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('giro1_test',)
  TRAIN: ('giro1_train',)
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MODEL:
  BACKBONE:
    CONV_BODY: R-101-FPN
    FREEZE_CONV_BODY_AT: 5
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FBNET:
    ARCH: default
    ARCH_DEF: 
    BN_TYPE: bn
    DET_HEAD_BLOCKS: []
    DET_HEAD_LAST_SCALE: 1.0
    DET_HEAD_STRIDE: 0
    DW_CONV_SKIP_BN: True
    DW_CONV_SKIP_RELU: True
    KPTS_HEAD_BLOCKS: []
    KPTS_HEAD_LAST_SCALE: 0.0
    KPTS_HEAD_STRIDE: 0
    MASK_HEAD_BLOCKS: []
    MASK_HEAD_LAST_SCALE: 0.0
    MASK_HEAD_STRIDE: 0
    RPN_BN_TYPE: 
    RPN_HEAD_BLOCKS: 0
    SCALE_FACTOR: 1.0
    WIDTH_DIVISOR: 1
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    NUM_GROUPS: 32
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 8
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: ResNet50Conv5ROIFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 2000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 1000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: visdrone_model_0360000.pth
OUTPUT_DIR: .
PATHS_CATALOG: /zold137/maskrcnn_benchmark/config/paths_catalog.py
SOLVER:
  BASE_LR: 5e-06
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  MAX_ITER: 3000
  MOMENTUM: 0.9
  STEPS: (480000, 640000)
  WARMUP_FACTOR: 0.3333333333333333
  WARMUP_ITERS: 500
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 1
2020-12-06 11:30:25,990 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
2020-12-06 11:31:08,616 maskrcnn_benchmark.trainer INFO: Start training
2020-12-06 11:32:24,242 maskrcnn_benchmark.trainer INFO: eta: 3:07:47  iter: 20  loss: 20.4270 (27.8959)  loss_classifier: 1.0876 (6.4033)  loss_box_reg: 0.5780 (1.9003)  loss_objectness: 14.7708 (14.5757)  loss_rpn_box_reg: 0.8049 (5.0167)  time: 3.7769 (3.7809)  data: 0.1353 (0.1409)  lr: 0.000002  max mem: 1313
2020-12-06 11:33:39,209 maskrcnn_benchmark.trainer INFO: eta: 3:05:43  iter: 40  loss: 18.3499 (24.1889)  loss_classifier: 1.4026 (4.3881)  loss_box_reg: 0.9577 (1.8128)  loss_objectness: 14.7812 (14.7870)  loss_rpn_box_reg: 0.1559 (3.2009)  time: 3.6943 (3.7646)  data: 0.1330 (0.1398)  lr: 0.000002  max mem: 1313
2020-12-06 11:34:55,310 maskrcnn_benchmark.trainer INFO: eta: 3:05:07  iter: 60  loss: 19.1425 (23.2121)  loss_classifier: 1.5777 (3.6619)  loss_box_reg: 1.8729 (1.9308)  loss_objectness: 15.0656 (14.7380)  loss_rpn_box_reg: 0.4822 (2.8815)  time: 3.7976 (3.7781)  data: 0.1342 (0.1381)  lr: 0.000002  max mem: 1313
2020-12-06 11:36:11,814 maskrcnn_benchmark.trainer INFO: eta: 3:04:26  iter: 80  loss: 17.5750 (22.3247)  loss_classifier: 1.0435 (3.0610)  loss_box_reg: 0.9312 (1.7819)  loss_objectness: 14.0573 (14.6245)  loss_rpn_box_reg: 0.3768 (2.8572)  time: 3.8225 (3.7899)  data: 0.1362 (0.1387)  lr: 0.000002  max mem: 1313
2020-12-06 11:37:26,188 maskrcnn_benchmark.trainer INFO: eta: 3:02:29  iter: 100  loss: 19.4670 (21.9008)  loss_classifier: 0.4890 (2.8522)  loss_box_reg: 1.2446 (1.6640)  loss_objectness: 14.2742 (14.5549)  loss_rpn_box_reg: 0.5402 (2.8298)  time: 3.7032 (3.7757)  data: 0.1311 (0.1375)  lr: 0.000002  max mem: 1313
2020-12-06 11:37:26,190 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 11:37:26,243 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 11:38:08,369 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.126290 (1.4526306760722194 s / img per device, on 1 devices)
2020-12-06 11:38:08,370 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.455238 (1.3950082022568275 s / img per device, on 1 devices)
2020-12-06 11:38:08,370 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 11:38:10,157 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 11:38:10,157 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([3.9325e-03, 3.3713e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2335e-02,
        3.9089e-03, 3.7092e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9566e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.6216e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        3.2345e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.0258e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.0260e-01, 2.3927e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5836e-02, 3.8555e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7950e-03, 4.9949e-05, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1., -1., -1.,  5.,  5., -1., -1.,  5.,  5., -1., -1., -1.,
         5., -1.,  2.,  2.,  2.,  5., -1., -1.,  8., -1., -1., -1., -1.,  2.,
         2.,  2.,  2.,  5.,  5.,  2.,  2.,  2., -1., -1., -1., -1., -1., -1.,
        -1., -1.,  2.,  2.,  5.,  5., -1., -1., -1., -1., -1., -1.,  2.,  2.,
         5.,  8., -1., -1., -1., -1., -1., -1.,  2., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1.,  2.,  2.,  2.,  5.,  2., -1., -1., -1., -1., -1.,
         2.,  2.,  2.,  2.,  2.,  8., -1.,  8.,  2., -1., -1., -1.,  2.,  2.,
         2.,  2.,  8.,  8.,  8., -1., -1., -1., -1.,  2., -1.,  2., -1.,  2.,
         2.,  5., -1., -1., -1., -1., -1., -1., -1.,  2.,  2., -1., -1.,  2.,
        -1., -1., -1., -1., -1., -1., -1.,  2.,  8.,  2., -1., -1., -1., -1.,
        -1., -1.,  2., -1., -1.,  2., -1., -1., -1.,  2., -1., -1.,  5., -1.,
         2., -1., -1., -1., -1., -1.,  2.,  2.,  2.,  5.,  8., -1., -1., -1.,
        -1., -1., -1., -1., -1.,  2., -1., -1., -1., -1., -1., -1.,  2.,  2.,
         2., -1., -1., -1.,  2.,  2.,  2.,  5.,  5.,  8.,  8., -1., -1.,  2.,
        -1., -1., -1., -1., -1., -1., -1., -1.,  2., -1., -1., -1., -1.,  2.,
         2.,  2.,  2.,  5.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000,
        0.5601, 1.0000, 0.0000, 0.0000, 0.1654, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 0.7942, 0.9528, 0.2058, 0.9457, 1.0000, 0.9508,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.9979, 0.9999, 0.2366, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.8718, 0.1983, 0.9507, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9279, 0.9925, 0.5258, 1.0000, 0.9989,
        0.0000, 0.4578, 0.5554, 0.0000, 0.0000, 0.0000, 0.7013, 0.0656, 0.3226,
        1.0000, 0.2987, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9903,
        0.0000, 0.9885, 0.0000, 0.3326, 0.1400, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9999, 1.0000, 0.0000, 0.0000, 0.6525,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.9539, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.5262, 0.0000, 0.0000, 1.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9976, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9649, 1.0000, 0.9955, 0.0000, 0.0000, 0.0000, 1.0000, 0.9955, 0.2709,
        0.2069, 0.8989, 0.9994, 0.7291, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9990, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.1588, 0.9999, 1.0000]), 'num_pos': 215}
2020-12-06 11:52:01,173 maskrcnn_benchmark INFO: Using 1 GPUs
2020-12-06 11:52:01,173 maskrcnn_benchmark INFO: Namespace(config_file='d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml', custom_dict='custom_dict.txt', distributed=False, local_rank=0, opts=[], skip_test=False, weights='visdrone_model_0360000.pth')
2020-12-06 11:52:01,173 maskrcnn_benchmark INFO: Collecting env info (might take some time)
2020-12-06 11:52:03,362 maskrcnn_benchmark INFO: 
PyTorch version: 1.1.0
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: Ubuntu 16.04.7 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
CMake version: version 3.5.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: GPU 0: GeForce GTX 950M
Nvidia driver version: 450.80.02
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.4

Versions of relevant libraries:
[pip3] numpy==1.19.4
[pip3] torch==1.1.0
[pip3] torchvision==0.3.0
[conda] blas                      1.0                         mkl  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py36he904b0f_0  
[conda] mkl_fft                   1.2.0            py36h23d657b_0  
[conda] mkl_random                1.1.1            py36h0573a6f_0  
[conda] pytorch                   1.1.0           py3.6_cuda9.0.176_cudnn7.5.1_0    pytorch
[conda] pytorch-nightly           1.0.0.dev20190328 py3.6_cuda9.0.176_cudnn7.4.2_0    pytorch
[conda] torchvision               0.3.0           py36_cu9.0.176_1    pytorch
        Pillow (8.0.1)
2020-12-06 11:52:03,362 maskrcnn_benchmark INFO: Loaded configuration file d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml
2020-12-06 11:52:03,363 maskrcnn_benchmark INFO: 
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "e2e_faster_rcnn_X_101_32x8d_FPN_1x.pth"
  BACKBONE:
    CONV_BODY: "R-101-FPN"
    FREEZE_CONV_BODY_AT: 5
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 1000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    STRIDE_IN_1X1: False
    NUM_GROUPS: 32
    WIDTH_PER_GROUP: 8
DATASETS:
  TRAIN: ("giro1_train", )
  TEST: ("giro1_test",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
  NUM_WORKERS: 0
SOLVER:
  BASE_LR: 0.000005
  WEIGHT_DECAY: 0.0001
  STEPS: (480000, 640000,)
  MAX_ITER: 3000
  IMS_PER_BATCH: 2
TEST:
  IMS_PER_BATCH: 1

2020-12-06 11:52:03,364 maskrcnn_benchmark INFO: Running with config:
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  NUM_WORKERS: 0
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('giro1_test',)
  TRAIN: ('giro1_train',)
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MODEL:
  BACKBONE:
    CONV_BODY: R-101-FPN
    FREEZE_CONV_BODY_AT: 5
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FBNET:
    ARCH: default
    ARCH_DEF: 
    BN_TYPE: bn
    DET_HEAD_BLOCKS: []
    DET_HEAD_LAST_SCALE: 1.0
    DET_HEAD_STRIDE: 0
    DW_CONV_SKIP_BN: True
    DW_CONV_SKIP_RELU: True
    KPTS_HEAD_BLOCKS: []
    KPTS_HEAD_LAST_SCALE: 0.0
    KPTS_HEAD_STRIDE: 0
    MASK_HEAD_BLOCKS: []
    MASK_HEAD_LAST_SCALE: 0.0
    MASK_HEAD_STRIDE: 0
    RPN_BN_TYPE: 
    RPN_HEAD_BLOCKS: 0
    SCALE_FACTOR: 1.0
    WIDTH_DIVISOR: 1
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    NUM_GROUPS: 32
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 8
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: ResNet50Conv5ROIFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 2000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 1000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: visdrone_model_0360000.pth
OUTPUT_DIR: .
PATHS_CATALOG: /zold137/maskrcnn_benchmark/config/paths_catalog.py
SOLVER:
  BASE_LR: 5e-06
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  MAX_ITER: 3000
  MOMENTUM: 0.9
  STEPS: (480000, 640000)
  WARMUP_FACTOR: 0.3333333333333333
  WARMUP_ITERS: 500
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 1
2020-12-06 11:52:37,156 maskrcnn_benchmark INFO: Using 1 GPUs
2020-12-06 11:52:37,156 maskrcnn_benchmark INFO: Namespace(config_file='d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml', custom_dict='custom_dict.txt', distributed=False, local_rank=0, opts=[], skip_test=False, weights='visdrone_model_0360000.pth')
2020-12-06 11:52:37,156 maskrcnn_benchmark INFO: Collecting env info (might take some time)
2020-12-06 11:52:39,298 maskrcnn_benchmark INFO: 
PyTorch version: 1.1.0
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: Ubuntu 16.04.7 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
CMake version: version 3.5.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: GPU 0: GeForce GTX 950M
Nvidia driver version: 450.80.02
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.4

Versions of relevant libraries:
[pip3] numpy==1.19.4
[pip3] torch==1.1.0
[pip3] torchvision==0.3.0
[conda] blas                      1.0                         mkl  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py36he904b0f_0  
[conda] mkl_fft                   1.2.0            py36h23d657b_0  
[conda] mkl_random                1.1.1            py36h0573a6f_0  
[conda] pytorch                   1.1.0           py3.6_cuda9.0.176_cudnn7.5.1_0    pytorch
[conda] pytorch-nightly           1.0.0.dev20190328 py3.6_cuda9.0.176_cudnn7.4.2_0    pytorch
[conda] torchvision               0.3.0           py36_cu9.0.176_1    pytorch
        Pillow (8.0.1)
2020-12-06 11:52:39,299 maskrcnn_benchmark INFO: Loaded configuration file d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml
2020-12-06 11:52:39,299 maskrcnn_benchmark INFO: 
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "e2e_faster_rcnn_X_101_32x8d_FPN_1x.pth"
  BACKBONE:
    CONV_BODY: "R-101-FPN"
    FREEZE_CONV_BODY_AT: 5
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 1000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    STRIDE_IN_1X1: False
    NUM_GROUPS: 32
    WIDTH_PER_GROUP: 8
DATASETS:
  TRAIN: ("giro1_train", )
  TEST: ("giro1_test",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
  NUM_WORKERS: 0
SOLVER:
  BASE_LR: 0.0000005
  WEIGHT_DECAY: 0.0001
  STEPS: (480000, 640000,)
  MAX_ITER: 3000
  IMS_PER_BATCH: 2
TEST:
  IMS_PER_BATCH: 1

2020-12-06 11:52:39,300 maskrcnn_benchmark INFO: Running with config:
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  NUM_WORKERS: 0
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('giro1_test',)
  TRAIN: ('giro1_train',)
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MODEL:
  BACKBONE:
    CONV_BODY: R-101-FPN
    FREEZE_CONV_BODY_AT: 5
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FBNET:
    ARCH: default
    ARCH_DEF: 
    BN_TYPE: bn
    DET_HEAD_BLOCKS: []
    DET_HEAD_LAST_SCALE: 1.0
    DET_HEAD_STRIDE: 0
    DW_CONV_SKIP_BN: True
    DW_CONV_SKIP_RELU: True
    KPTS_HEAD_BLOCKS: []
    KPTS_HEAD_LAST_SCALE: 0.0
    KPTS_HEAD_STRIDE: 0
    MASK_HEAD_BLOCKS: []
    MASK_HEAD_LAST_SCALE: 0.0
    MASK_HEAD_STRIDE: 0
    RPN_BN_TYPE: 
    RPN_HEAD_BLOCKS: 0
    SCALE_FACTOR: 1.0
    WIDTH_DIVISOR: 1
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    NUM_GROUPS: 32
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 8
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: ResNet50Conv5ROIFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 2000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 1000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: visdrone_model_0360000.pth
OUTPUT_DIR: .
PATHS_CATALOG: /zold137/maskrcnn_benchmark/config/paths_catalog.py
SOLVER:
  BASE_LR: 5e-07
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  MAX_ITER: 3000
  MOMENTUM: 0.9
  STEPS: (480000, 640000)
  WARMUP_FACTOR: 0.3333333333333333
  WARMUP_ITERS: 500
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 1
2020-12-06 11:52:42,833 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
2020-12-06 11:52:44,016 maskrcnn_benchmark.trainer INFO: Start training
2020-12-06 11:54:01,991 maskrcnn_benchmark.trainer INFO: eta: 3:13:37  iter: 20  loss: 26.9002 (43.8616)  loss_classifier: 3.4142 (19.4630)  loss_box_reg: 2.1831 (2.5473)  loss_objectness: 14.1150 (14.9986)  loss_rpn_box_reg: 0.7935 (6.8526)  time: 3.7544 (3.8987)  data: 0.1436 (0.1479)  lr: 0.000000  max mem: 1313
2020-12-06 11:55:24,681 maskrcnn_benchmark.trainer INFO: eta: 3:18:09  iter: 40  loss: 19.3102 (35.3759)  loss_classifier: 1.3639 (10.9538)  loss_box_reg: 1.3680 (2.3892)  loss_objectness: 13.9063 (14.5293)  loss_rpn_box_reg: 1.3905 (7.5036)  time: 4.1605 (4.0166)  data: 0.1537 (0.1546)  lr: 0.000000  max mem: 1313
2020-12-06 11:56:38,964 maskrcnn_benchmark.trainer INFO: eta: 3:11:52  iter: 60  loss: 21.5149 (33.0124)  loss_classifier: 1.7738 (8.4206)  loss_box_reg: 1.6287 (2.6228)  loss_objectness: 16.5548 (15.3184)  loss_rpn_box_reg: 0.3206 (6.6507)  time: 3.7166 (3.9158)  data: 0.1359 (0.1482)  lr: 0.000000  max mem: 1313
2020-12-06 11:57:53,150 maskrcnn_benchmark.trainer INFO: eta: 3:08:03  iter: 80  loss: 18.9794 (30.7666)  loss_classifier: 1.1003 (7.0146)  loss_box_reg: 1.3129 (2.5987)  loss_objectness: 15.8754 (15.3884)  loss_rpn_box_reg: 0.5931 (5.7649)  time: 3.7124 (3.8642)  data: 0.1339 (0.1444)  lr: 0.000000  max mem: 1313
2020-12-06 11:59:07,386 maskrcnn_benchmark.trainer INFO: eta: 3:05:17  iter: 100  loss: 23.3141 (29.8234)  loss_classifier: 2.7167 (6.1723)  loss_box_reg: 2.2488 (2.6279)  loss_objectness: 14.5702 (15.2808)  loss_rpn_box_reg: 1.1182 (5.7424)  time: 3.7078 (3.8337)  data: 0.1315 (0.1417)  lr: 0.000000  max mem: 1313
2020-12-06 11:59:07,388 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 11:59:07,444 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 11:59:49,615 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.171064 (1.454174617241169 s / img per device, on 1 devices)
2020-12-06 11:59:49,615 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.461838 (1.395235801565236 s / img per device, on 1 devices)
2020-12-06 11:59:49,615 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 11:59:51,408 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 11:59:51,409 maskrcnn_benchmark.inference INFO: {'ar': 0, 'recalls': 0, 'thresholds': 0, 'gt_overlaps': 0, 'gt_labels': tensor([]), 'best match labels': tensor([]), 'best match scores': tensor([]), 'num_pos': 0}
2020-12-06 11:59:51,409 maskrcnn_benchmark.trainer INFO: validation accuracy: -1.000000
2020-12-06 11:59:51,413 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./best_acc_r1.pth
2020-12-06 11:59:55,893 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: best_acc_r1
2020-12-06 12:01:23,816 maskrcnn_benchmark INFO: Using 1 GPUs
2020-12-06 12:01:23,816 maskrcnn_benchmark INFO: Namespace(config_file='d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml', custom_dict='custom_dict.txt', distributed=False, local_rank=0, opts=[], skip_test=False, weights='visdrone_model_0360000.pth')
2020-12-06 12:01:23,816 maskrcnn_benchmark INFO: Collecting env info (might take some time)
2020-12-06 12:01:25,873 maskrcnn_benchmark INFO: 
PyTorch version: 1.1.0
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: Ubuntu 16.04.7 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
CMake version: version 3.5.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: GPU 0: GeForce GTX 950M
Nvidia driver version: 450.80.02
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.4

Versions of relevant libraries:
[pip3] numpy==1.19.4
[pip3] torch==1.1.0
[pip3] torchvision==0.3.0
[conda] blas                      1.0                         mkl  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py36he904b0f_0  
[conda] mkl_fft                   1.2.0            py36h23d657b_0  
[conda] mkl_random                1.1.1            py36h0573a6f_0  
[conda] pytorch                   1.1.0           py3.6_cuda9.0.176_cudnn7.5.1_0    pytorch
[conda] pytorch-nightly           1.0.0.dev20190328 py3.6_cuda9.0.176_cudnn7.4.2_0    pytorch
[conda] torchvision               0.3.0           py36_cu9.0.176_1    pytorch
        Pillow (8.0.1)
2020-12-06 12:01:25,873 maskrcnn_benchmark INFO: Loaded configuration file d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml
2020-12-06 12:01:25,873 maskrcnn_benchmark INFO: 
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "e2e_faster_rcnn_X_101_32x8d_FPN_1x.pth"
  BACKBONE:
    CONV_BODY: "R-101-FPN"
    FREEZE_CONV_BODY_AT: 5
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 1000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    STRIDE_IN_1X1: False
    NUM_GROUPS: 32
    WIDTH_PER_GROUP: 8
DATASETS:
  TRAIN: ("giro1_train", )
  TEST: ("giro1_test",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
  NUM_WORKERS: 0
SOLVER:
  BASE_LR: 0.0000005
  WEIGHT_DECAY: 0.0001
  STEPS: (480000, 640000,)
  MAX_ITER: 3000
  IMS_PER_BATCH: 2
TEST:
  IMS_PER_BATCH: 1

2020-12-06 12:01:25,874 maskrcnn_benchmark INFO: Running with config:
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  NUM_WORKERS: 0
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('giro1_test',)
  TRAIN: ('giro1_train',)
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MODEL:
  BACKBONE:
    CONV_BODY: R-101-FPN
    FREEZE_CONV_BODY_AT: 5
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FBNET:
    ARCH: default
    ARCH_DEF: 
    BN_TYPE: bn
    DET_HEAD_BLOCKS: []
    DET_HEAD_LAST_SCALE: 1.0
    DET_HEAD_STRIDE: 0
    DW_CONV_SKIP_BN: True
    DW_CONV_SKIP_RELU: True
    KPTS_HEAD_BLOCKS: []
    KPTS_HEAD_LAST_SCALE: 0.0
    KPTS_HEAD_STRIDE: 0
    MASK_HEAD_BLOCKS: []
    MASK_HEAD_LAST_SCALE: 0.0
    MASK_HEAD_STRIDE: 0
    RPN_BN_TYPE: 
    RPN_HEAD_BLOCKS: 0
    SCALE_FACTOR: 1.0
    WIDTH_DIVISOR: 1
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    NUM_GROUPS: 32
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 8
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: ResNet50Conv5ROIFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 2000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 1000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: visdrone_model_0360000.pth
OUTPUT_DIR: .
PATHS_CATALOG: /zold137/maskrcnn_benchmark/config/paths_catalog.py
SOLVER:
  BASE_LR: 5e-07
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  MAX_ITER: 3000
  MOMENTUM: 0.9
  STEPS: (480000, 640000)
  WARMUP_FACTOR: 0.3333333333333333
  WARMUP_ITERS: 500
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 1
2020-12-06 12:01:29,142 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
2020-12-06 12:01:30,239 maskrcnn_benchmark.trainer INFO: Start training
2020-12-06 12:02:44,500 maskrcnn_benchmark.trainer INFO: eta: 3:04:24  iter: 20  loss: 25.9994 (85.6404)  loss_classifier: 4.8766 (65.2313)  loss_box_reg: 1.9127 (2.1797)  loss_objectness: 13.1489 (12.9725)  loss_rpn_box_reg: 1.2676 (5.2569)  time: 3.7069 (3.7130)  data: 0.1318 (0.1314)  lr: 0.000000  max mem: 1312
2020-12-06 12:03:58,748 maskrcnn_benchmark.trainer INFO: eta: 3:03:09  iter: 40  loss: 18.3041 (55.1429)  loss_classifier: 0.5375 (33.0121)  loss_box_reg: 1.3764 (1.9150)  loss_objectness: 12.4537 (12.6965)  loss_rpn_box_reg: 1.9347 (7.5193)  time: 3.7110 (3.7127)  data: 0.1300 (0.1307)  lr: 0.000000  max mem: 1312
2020-12-06 12:04:35,897 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 12:04:35,951 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 12:05:18,009 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.057232 (1.4502493841894741 s / img per device, on 1 devices)
2020-12-06 12:05:18,009 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.372765 (1.3921643043386525 s / img per device, on 1 devices)
2020-12-06 12:05:18,010 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 12:05:19,756 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 12:05:19,757 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0518, 0.0259, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0232, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0050, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0264, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0095,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0341, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1069, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0103,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0037, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0200,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0165, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0099, 0.0000, 0.0000, 0.0039, 0.0000, 0.0000,
        0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8,
        8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  8., -1., -1., -1., -1.,  6.,  6., -1., -1., -1.,
        -1., -1.,  8., -1., -1., -1., -1., -1.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1.,
        -1.,  6., -1., -1., -1., -1., -1.,  8., -1., -1.,  8., -1., -1.,  8.,
        -1., -1., -1., -1., -1., -1., -1., -1.,  5.,  6., -1., -1., -1., -1.,
         8., -1., -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1.,  8., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  8.,
        -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  6., -1.,
        -1., -1.,  8., -1., -1.,  8., -1., -1., -1.,  3., -1., -1., -1., -1.,
        -1.,  8., -1., -1.,  6., -1., -1.,  8., -1., -1., -1., -1., -1.,  8.,
        -1., -1.,  6.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  6.,
        -1., -1., -1., -1., -1., -1., -1., -1.,  6., -1., -1.,  8., -1., -1.,
        -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1., -1., -1., -1.,  6.,
        -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,
        -1., -1., -1., -1.,  6., -1., -1.,  8., -1., -1.,  8., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  6., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 0.3370, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.9975, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9949, 0.0000, 0.9772, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.4718, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9297, 0.0703, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.9932, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0820, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.9855, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0581, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.2081,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000]), 'num_pos': 226}
2020-12-06 12:05:19,803 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.079646
2020-12-06 12:05:19,805 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./best_acc_r1.pth
2020-12-06 12:05:23,724 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: best_acc_r1
2020-12-06 12:06:01,095 maskrcnn_benchmark.trainer INFO: eta: 3:41:11  iter: 60  loss: 20.5240 (44.5920)  loss_classifier: 0.6002 (22.4188)  loss_box_reg: 1.5288 (1.9602)  loss_objectness: 12.8245 (12.7838)  loss_rpn_box_reg: 2.9109 (7.4292)  time: 3.7193 (4.5142)  data: 0.1298 (0.9303)  lr: 0.000000  max mem: 1312
2020-12-06 12:07:16,909 maskrcnn_benchmark.trainer INFO: eta: 3:30:53  iter: 80  loss: 19.2340 (39.6278)  loss_classifier: 0.4249 (17.0102)  loss_box_reg: 1.6114 (1.9432)  loss_objectness: 12.0807 (12.7132)  loss_rpn_box_reg: 1.5341 (7.9611)  time: 3.7362 (4.3333)  data: 0.1338 (0.7324)  lr: 0.000000  max mem: 1312
2020-12-06 12:08:31,341 maskrcnn_benchmark.trainer INFO: eta: 3:23:31  iter: 100  loss: 15.9494 (35.9354)  loss_classifier: 0.5552 (13.8570)  loss_box_reg: 1.0859 (1.9119)  loss_objectness: 12.5228 (12.6731)  loss_rpn_box_reg: 0.6805 (7.4935)  time: 3.7171 (4.2110)  data: 0.1303 (0.6123)  lr: 0.000000  max mem: 1312
2020-12-06 12:08:31,343 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 12:08:31,394 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 12:09:13,543 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.149095 (1.4534170627593994 s / img per device, on 1 devices)
2020-12-06 12:09:13,544 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.443976 (1.394619867719453 s / img per device, on 1 devices)
2020-12-06 12:09:13,544 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 12:09:15,270 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 12:09:15,271 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0518, 0.0259, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0232, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0050, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0264, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0095,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0341, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1069, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0103,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0996, 0.0036, 0.0032, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0200,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0231, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0165, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0131, 0.0000, 0.0000, 0.0039, 0.0000, 0.0000,
        0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8,
        8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  8., -1., -1., -1., -1.,  6.,  6., -1., -1., -1.,
        -1., -1.,  8., -1., -1., -1., -1., -1.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1.,
        -1.,  6., -1., -1., -1., -1., -1.,  8., -1., -1.,  8., -1., -1.,  8.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1.,  5., -1., -1., -1., -1.,
         8., -1., -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1.,  8., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  8.,
        -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  6., -1.,
        -1., -1.,  8., -1.,  8.,  8., -1., -1., -1.,  3., -1., -1., -1., -1.,
        -1.,  8., -1., -1.,  6., -1., -1.,  8., -1., -1., -1., -1., -1.,  8.,
        -1., -1.,  6.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,  5.,  6.,
        -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,  8., -1., -1.,
        -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1., -1., -1., -1.,  6.,
        -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,
        -1., -1., -1.,  3.,  6., -1., -1.,  8., -1., -1.,  8., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  6., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 0.9993, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.9982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.9987, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9978, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.9999, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000,
        0.8149, 0.0000, 0.0000, 0.0000, 0.9527, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.3888,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9793, 0.0000, 0.0000,
        0.0838, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.6665, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.9790,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000]), 'num_pos': 226}
2020-12-06 12:09:15,295 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.088496
2020-12-06 12:09:15,298 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./best_acc_r1.pth
2020-12-06 12:09:19,161 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: best_acc_r1
2020-12-06 12:10:33,946 maskrcnn_benchmark.trainer INFO: eta: 3:37:28  iter: 120  loss: 19.5167 (33.6821)  loss_classifier: 0.5292 (11.7658)  loss_box_reg: 1.6964 (1.9136)  loss_objectness: 12.6956 (12.7255)  loss_rpn_box_reg: 1.8786 (7.2772)  time: 3.7164 (4.5309)  data: 0.1327 (0.9329)  lr: 0.000000  max mem: 1312
2020-12-06 12:11:48,410 maskrcnn_benchmark.trainer INFO: eta: 3:30:28  iter: 140  loss: 17.2652 (32.2077)  loss_classifier: 0.4825 (10.1865)  loss_box_reg: 0.8201 (1.8407)  loss_objectness: 12.2240 (12.6237)  loss_rpn_box_reg: 1.6584 (7.5568)  time: 3.7224 (4.4155)  data: 0.1341 (0.8186)  lr: 0.000000  max mem: 1312
2020-12-06 12:12:25,623 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 12:12:25,673 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 12:13:07,751 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.077435 (1.4509460514989392 s / img per device, on 1 devices)
2020-12-06 12:13:07,751 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.414238 (1.3935944294107372 s / img per device, on 1 devices)
2020-12-06 12:13:07,752 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 12:13:09,406 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 12:13:09,406 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0518, 0.0259, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1093, 0.0199, 0.0123, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0050, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0264, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0095, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0341, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1069,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0103, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0996, 0.0278, 0.0036,
        0.0032, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0200, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0231, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0131, 0.0000, 0.0000,
        0.0039, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  8., -1., -1., -1.,  3.,  6.,  6., -1., -1.,  8.,
        -1., -1.,  8.,  3., -1., -1., -1., -1.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1.,  8., -1.,
        -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,
        -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  5., -1.,
        -1., -1., -1.,  8., -1., -1., -1., -1., -1.,  6., -1., -1., -1., -1.,
        -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1.,  6., -1., -1., -1.,  8.,  8.,  8.,  8., -1., -1., -1.,  3., -1.,
        -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,  8., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  6.,  8., -1., -1., -1., -1., -1., -1., -1.,
        -1.,  5.,  6., -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,
         8., -1., -1., -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1., -1.,
        -1., -1.,  6., -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1.,
         8., -1., -1., -1., -1.,  3.,  5.,  6., -1., -1.,  8., -1., -1.,  8.,
        -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,  8., -1., -1.,
        -1., -1., -1., -1.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.6299,
        1.0000, 0.9999, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.6961, 0.3772,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0694,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9999, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.1762, 1.0000, 0.9988, 0.0000, 0.0000, 0.0000, 0.9993, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9928, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.6048, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.7547, 0.8593, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.9989, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.2670, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000]), 'num_pos': 229}
2020-12-06 12:13:09,429 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.100437
2020-12-06 12:13:09,432 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./best_acc_r1.pth
2020-12-06 12:13:13,367 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: best_acc_r1
2020-12-06 12:13:50,731 maskrcnn_benchmark.trainer INFO: eta: 3:39:03  iter: 160  loss: 20.2664 (31.5842)  loss_classifier: 0.8880 (9.0973)  loss_box_reg: 2.3095 (1.9236)  loss_objectness: 12.2029 (12.5481)  loss_rpn_box_reg: 3.2493 (8.0152)  time: 3.7189 (4.6281)  data: 0.1308 (1.0319)  lr: 0.000000  max mem: 1312
2020-12-06 12:15:05,181 maskrcnn_benchmark.trainer INFO: eta: 3:32:47  iter: 180  loss: 18.5582 (30.8494)  loss_classifier: 0.8925 (8.2437)  loss_box_reg: 1.9609 (1.9202)  loss_objectness: 12.3111 (12.4813)  loss_rpn_box_reg: 2.4808 (8.2043)  time: 3.7210 (4.5274)  data: 0.1317 (0.9318)  lr: 0.000000  max mem: 1312
2020-12-06 12:16:19,544 maskrcnn_benchmark.trainer INFO: eta: 3:27:30  iter: 200  loss: 15.5033 (29.8722)  loss_classifier: 0.2725 (7.5108)  loss_box_reg: 0.9412 (1.8839)  loss_objectness: 12.0809 (12.4919)  loss_rpn_box_reg: 0.7979 (7.9856)  time: 3.7161 (4.4465)  data: 0.1311 (0.8517)  lr: 0.000000  max mem: 1312
2020-12-06 12:16:19,546 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 12:16:19,597 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 12:17:01,667 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.070416 (1.4507039908705086 s / img per device, on 1 devices)
2020-12-06 12:17:01,667 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.410690 (1.3934720549090156 s / img per device, on 1 devices)
2020-12-06 12:17:01,668 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 12:17:03,391 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 12:17:03,391 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.1760e-02, 2.5893e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0932e-01,
        1.9871e-02, 1.2335e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.6365e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 9.5415e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        3.4107e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0689e-01, 1.7142e-07, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.9572e-02, 2.7798e-02, 3.5605e-03,
        3.2138e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9960e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3055e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3145e-02, 0.0000e+00, 0.0000e+00,
        3.9426e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8,
        8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  8., -1., -1., -1.,  3.,  6.,  6., -1., -1.,  8.,
        -1., -1.,  8.,  3., -1., -1., -1., -1.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1., -1.,  6., -1., -1., -1., -1.,  8., -1., -1., -1., -1.,
        -1.,  6., -1., -1., -1., -1., -1.,  8., -1., -1.,  8., -1., -1.,  8.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1.,  5., -1., -1., -1., -1.,
         8., -1., -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1.,  8., -1.,
        -1., -1.,  6., -1., -1., -1., -1., -1., -1., -1., -1.,  5.,  6.,  8.,
        -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  6., -1.,
        -1., -1.,  8.,  8.,  8.,  8., -1., -1., -1.,  3., -1., -1., -1., -1.,
        -1.,  8., -1., -1.,  6., -1., -1.,  8., -1., -1., -1., -1., -1.,  8.,
        -1., -1.,  6.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,  5.,  6.,
        -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,  8., -1., -1.,
        -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1., -1., -1., -1.,  6.,
        -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,
        -1., -1.,  3.,  5.,  6., -1., -1.,  8., -1., -1.,  8., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  6., -1., -1.,  8., -1., -1., -1., -1., -1.,
        -1.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9680,
        1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.4821, 0.9713,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1065, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.3698, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.7618, 0.0738, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.1106, 1.0000,
        0.9973, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.9999, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9999, 0.0000, 0.0000,
        0.9600, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9886, 0.9999, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.9943,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.1623, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000]), 'num_pos': 226}
2020-12-06 12:17:03,416 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.101770
2020-12-06 12:17:03,419 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./best_acc_r1.pth
2020-12-06 12:17:07,473 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: best_acc_r1
2020-12-06 12:18:22,148 maskrcnn_benchmark.trainer INFO: eta: 3:33:06  iter: 220  loss: 19.2501 (29.1344)  loss_classifier: 1.2597 (6.9499)  loss_box_reg: 2.4168 (1.9346)  loss_objectness: 12.5043 (12.5291)  loss_rpn_box_reg: 1.5924 (7.7208)  time: 3.7203 (4.5996)  data: 0.1285 (1.0050)  lr: 0.000000  max mem: 1312
2020-12-06 12:19:36,520 maskrcnn_benchmark.trainer INFO: eta: 3:28:12  iter: 240  loss: 15.8304 (28.1602)  loss_classifier: 0.4271 (6.4236)  loss_box_reg: 1.0153 (1.8923)  loss_objectness: 12.6553 (12.5673)  loss_rpn_box_reg: 0.7691 (7.2770)  time: 3.7184 (4.5262)  data: 0.1342 (0.9325)  lr: 0.000000  max mem: 1312
2020-12-06 12:20:13,768 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 12:20:13,821 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 12:20:55,858 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.037030 (1.4495527744293213 s / img per device, on 1 devices)
2020-12-06 12:20:55,858 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.379516 (1.3923971077491497 s / img per device, on 1 devices)
2020-12-06 12:20:55,858 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 12:20:57,568 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 12:20:57,568 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.1760e-02, 2.5893e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0932e-01,
        1.9871e-02, 1.2335e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.4107e-02, 9.8877e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0689e-01,
        1.7142e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0258e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        9.9572e-02, 2.7798e-02, 3.5605e-03, 3.2138e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.9960e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.3055e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.3145e-02, 0.0000e+00, 0.0000e+00, 3.9426e-03, 0.0000e+00, 0.0000e+00,
        2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  8., -1., -1., -1.,  3.,  6.,  6., -1., -1.,  8.,
        -1., -1.,  8.,  3., -1., -1., -1., -1.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1., -1.,  6., -1., -1.,  8., -1., -1., -1., -1.,  8., -1.,
        -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,
        -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  5., -1.,
        -1., -1., -1.,  8., -1., -1., -1.,  3.,  5.,  6., -1., -1., -1., -1.,
        -1.,  8., -1., -1., -1.,  6., -1., -1., -1., -1., -1., -1., -1.,  5.,
         6.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1.,  6., -1., -1., -1.,  8.,  8.,  8.,  8., -1., -1., -1.,  3., -1.,
        -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,  8., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  6.,  8., -1., -1., -1., -1., -1., -1., -1.,
         5.,  6.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,
         8., -1., -1., -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1., -1.,
        -1., -1.,  6., -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1.,
         8., -1., -1., -1., -1.,  3.,  5.,  6., -1., -1.,  8., -1., -1.,  8.,
        -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,  8., -1., -1.,
        -1., -1., -1., -1.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9942,
        1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.8343, 0.9976,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1952, 0.0000, 0.0000, 0.0890,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.1405, 0.0989, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.5473,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9496, 0.1044,
        0.1508, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.2890, 1.0000, 0.9994, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.9982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.2459, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.9811, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9932, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.9923, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.3191, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000]), 'num_pos': 229}
2020-12-06 12:20:57,593 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.109170
2020-12-06 12:20:57,596 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./best_acc_r1.pth
2020-12-06 12:21:01,667 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: best_acc_r1
2020-12-06 12:21:38,891 maskrcnn_benchmark.trainer INFO: eta: 3:32:17  iter: 260  loss: 16.9178 (27.8665)  loss_classifier: 0.5116 (5.9977)  loss_box_reg: 1.4561 (1.9006)  loss_objectness: 12.7953 (12.5744)  loss_rpn_box_reg: 1.6436 (7.3938)  time: 3.7178 (4.6487)  data: 0.1301 (1.0556)  lr: 0.000000  max mem: 1312
2020-12-06 12:22:53,275 maskrcnn_benchmark.trainer INFO: eta: 3:27:43  iter: 280  loss: 18.7363 (27.4412)  loss_classifier: 0.7596 (5.6671)  loss_box_reg: 2.2839 (1.9255)  loss_objectness: 12.9609 (12.5907)  loss_rpn_box_reg: 1.5036 (7.2579)  time: 3.7167 (4.5823)  data: 0.1300 (0.9894)  lr: 0.000000  max mem: 1312
2020-12-06 12:24:07,738 maskrcnn_benchmark.trainer INFO: eta: 3:23:37  iter: 300  loss: 18.9600 (27.0898)  loss_classifier: 0.4145 (5.3526)  loss_box_reg: 1.5665 (1.9353)  loss_objectness: 12.7539 (12.5967)  loss_rpn_box_reg: 1.9193 (7.2051)  time: 3.7209 (4.5250)  data: 0.1321 (0.9323)  lr: 0.000000  max mem: 1312
2020-12-06 12:24:07,740 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 12:24:07,793 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 12:24:49,848 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.055086 (1.450175375773989 s / img per device, on 1 devices)
2020-12-06 12:24:49,848 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.393426 (1.3928767483809898 s / img per device, on 1 devices)
2020-12-06 12:24:49,848 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 12:24:51,573 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 12:24:51,573 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.1760e-02, 2.5893e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0932e-01,
        1.9871e-02, 1.2335e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6917e-02, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5186e-02, 9.8877e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0689e-01,
        1.7142e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0258e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        9.9572e-02, 2.7798e-02, 3.5605e-03, 3.2138e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.9960e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.3055e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.3145e-02, 0.0000e+00, 0.0000e+00, 3.9426e-03, 0.0000e+00, 0.0000e+00,
        2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  8., -1., -1., -1.,  3.,  6.,  6., -1., -1.,  8.,
        -1., -1.,  8.,  3., -1., -1., -1.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1., -1.,  6., -1., -1.,  8., -1., -1., -1., -1.,  8., -1.,
        -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,
        -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  5., -1.,
        -1., -1., -1.,  8., -1., -1., -1.,  3.,  5.,  6., -1., -1., -1., -1.,
        -1.,  8., -1., -1., -1.,  6., -1., -1., -1., -1., -1., -1., -1., -1.,
         5.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1.,  6., -1., -1., -1.,  8.,  8.,  8.,  8., -1., -1., -1.,  3., -1.,
        -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,  8., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  6.,  8., -1., -1., -1., -1., -1., -1., -1.,
         5.,  6.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,
         8., -1., -1., -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1., -1.,
        -1., -1.,  6., -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1.,
         8., -1., -1., -1., -1.,  3.,  5.,  6., -1., -1.,  8., -1., -1.,  8.,
        -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,  8., -1., -1.,
        -1., -1., -1., -1.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9998,
        1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.9966, 1.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0568, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1848, 0.0000, 0.0000, 0.3762,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.7737, 0.2941, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.5448,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9861,
        0.8267, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.8648, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.9567, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.8947, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.9818, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9950, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.9901, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.8397, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000]), 'num_pos': 229}
2020-12-06 12:24:51,598 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.109170
2020-12-06 12:26:06,405 maskrcnn_benchmark.trainer INFO: eta: 3:26:02  iter: 320  loss: 15.8515 (26.5825)  loss_classifier: 0.3990 (5.0590)  loss_box_reg: 0.9636 (1.9290)  loss_objectness: 12.6161 (12.6036)  loss_rpn_box_reg: 0.4557 (6.9909)  time: 3.7190 (4.6130)  data: 0.1288 (1.0192)  lr: 0.000000  max mem: 1312
2020-12-06 12:27:20,568 maskrcnn_benchmark.trainer INFO: eta: 3:22:09  iter: 340  loss: 15.9524 (26.4354)  loss_classifier: 0.3582 (4.7955)  loss_box_reg: 0.6175 (1.8842)  loss_objectness: 12.3706 (12.5993)  loss_rpn_box_reg: 1.2663 (7.1565)  time: 3.7059 (4.5598)  data: 0.1272 (0.9668)  lr: 0.000000  max mem: 1312
2020-12-06 12:27:57,798 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 12:27:57,849 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 12:28:39,860 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.010686 (1.4486443420936321 s / img per device, on 1 devices)
2020-12-06 12:28:39,860 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.369516 (1.3920522640491355 s / img per device, on 1 devices)
2020-12-06 12:28:39,860 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 12:28:41,563 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 12:28:41,563 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.1760e-02, 2.5893e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0932e-01,
        1.9871e-02, 1.2335e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5186e-02, 9.8877e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0689e-01,
        1.7142e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0258e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        9.9572e-02, 2.7798e-02, 3.5605e-03, 3.2138e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.9960e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.3055e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.3145e-02, 0.0000e+00, 0.0000e+00, 3.9426e-03, 0.0000e+00, 0.0000e+00,
        2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  8., -1., -1., -1.,  3.,  6.,  6., -1., -1.,  8.,
        -1., -1.,  8.,  3., -1., -1., -1., -1.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1.,  8., -1.,
        -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,
        -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  5., -1.,
        -1., -1., -1.,  8., -1., -1., -1.,  3.,  5.,  6., -1., -1., -1., -1.,
        -1.,  8., -1., -1., -1.,  6., -1., -1., -1., -1., -1., -1., -1., -1.,
         5.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1.,  6., -1., -1., -1.,  8.,  8.,  8.,  8., -1., -1., -1.,  3., -1.,
        -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,  2., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  6.,  8., -1., -1., -1., -1., -1., -1., -1.,
         5.,  6.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,
         8., -1., -1., -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1., -1.,
        -1., -1.,  6., -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1.,
         8., -1., -1., -1., -1.,  3.,  5.,  6., -1., -1.,  8., -1., -1.,  8.,
        -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,  8., -1., -1.,
        -1., -1., -1., -1.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9998,
        1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.9840, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1823,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.7455, 0.9174, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.1425,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9964,
        0.8074, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.6603, 1.0000, 0.9999, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.9997, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.9549, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.8889, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9984, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.9731, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.6367, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000]), 'num_pos': 229}
2020-12-06 12:28:41,588 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.109170
2020-12-06 12:29:18,727 maskrcnn_benchmark.trainer INFO: eta: 3:23:55  iter: 360  loss: 17.1011 (26.0607)  loss_classifier: 0.7614 (4.5838)  loss_box_reg: 1.4243 (1.8798)  loss_objectness: 12.3566 (12.6104)  loss_rpn_box_reg: 1.5768 (6.9867)  time: 3.7171 (4.6347)  data: 0.1294 (1.0421)  lr: 0.000000  max mem: 1312
2020-12-06 12:30:33,024 maskrcnn_benchmark.trainer INFO: eta: 3:20:16  iter: 380  loss: 20.0703 (26.2340)  loss_classifier: 0.6879 (4.4074)  loss_box_reg: 2.2248 (1.9048)  loss_objectness: 11.2503 (12.5528)  loss_rpn_box_reg: 3.1565 (7.3690)  time: 3.7120 (4.5863)  data: 0.1254 (0.9939)  lr: 0.000000  max mem: 1312
2020-12-06 12:31:47,333 maskrcnn_benchmark.trainer INFO: eta: 3:16:51  iter: 400  loss: 16.8745 (26.0044)  loss_classifier: 0.7790 (4.2461)  loss_box_reg: 1.7075 (1.9011)  loss_objectness: 12.4264 (12.5570)  loss_rpn_box_reg: 1.7946 (7.3001)  time: 3.7143 (4.5427)  data: 0.1293 (0.9507)  lr: 0.000000  max mem: 1312
2020-12-06 12:31:47,335 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 12:31:47,386 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 12:32:29,411 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.025445 (1.4491532917680412 s / img per device, on 1 devices)
2020-12-06 12:32:29,412 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.390208 (1.3927658097497349 s / img per device, on 1 devices)
2020-12-06 12:32:29,412 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 12:32:31,122 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 12:32:31,122 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.1760e-02, 2.5893e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0932e-01,
        1.9871e-02, 1.2335e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5186e-02, 9.8877e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0689e-01,
        1.7142e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0258e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        9.9572e-02, 2.7798e-02, 3.5605e-03, 3.2138e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.9960e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.3055e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.3145e-02, 0.0000e+00, 0.0000e+00, 3.9426e-03, 0.0000e+00, 0.0000e+00,
        2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  8., -1., -1., -1.,  3.,  6.,  6., -1., -1.,  8.,
        -1., -1.,  8.,  3., -1., -1., -1., -1.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1., -1.,  6., -1., -1.,  8., -1., -1., -1., -1.,  8., -1.,
        -1., -1., -1.,  5.,  6., -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,
        -1.,  3.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,  5.,  6., -1.,
        -1., -1., -1.,  8., -1., -1.,  3.,  3.,  5.,  6., -1., -1., -1., -1.,
        -1.,  8., -1., -1., -1.,  6., -1., -1., -1., -1., -1., -1., -1., -1.,
         5.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1.,  6., -1., -1., -1.,  8.,  8.,  8.,  8., -1., -1.,  3.,  6., -1.,
        -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,  2., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  6.,  8., -1., -1., -1., -1., -1., -1., -1.,
         5.,  6.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,
         8., -1., -1., -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1., -1.,
        -1., -1.,  6., -1., -1., -1., -1., -1.,  8., -1., -1.,  2., -1., -1.,
         8., -1., -1., -1., -1.,  3.,  5.,  6., -1., -1.,  8., -1.,  3.,  8.,
        -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,  8., -1., -1.,
        -1., -1., -1., -1.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.9844, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9999, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.7741, 0.0000, 0.0000, 0.1791,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9248, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.2404, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.3712, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0697, 0.9872, 0.9879, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9538,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.9424, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.6794, 1.0000, 0.9999, 0.0000, 0.0000, 1.0000, 0.0621, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.9972, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.9989, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.1088, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9999, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.3288, 0.6708, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.6035, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000]), 'num_pos': 229}
2020-12-06 12:32:31,147 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.109170
2020-12-06 12:33:45,489 maskrcnn_benchmark.trainer INFO: eta: 3:18:07  iter: 420  loss: 15.6953 (25.7375)  loss_classifier: 0.3350 (4.0816)  loss_box_reg: 2.0812 (1.8980)  loss_objectness: 12.5985 (12.5525)  loss_rpn_box_reg: 0.3530 (7.2054)  time: 3.7129 (4.6077)  data: 0.1299 (1.0160)  lr: 0.000000  max mem: 1312
2020-12-06 12:34:59,750 maskrcnn_benchmark.trainer INFO: eta: 3:14:51  iter: 440  loss: 18.8671 (25.5403)  loss_classifier: 0.5730 (3.9389)  loss_box_reg: 2.1531 (1.9124)  loss_objectness: 12.6692 (12.5691)  loss_rpn_box_reg: 1.9009 (7.1199)  time: 3.7075 (4.5671)  data: 0.1286 (0.9757)  lr: 0.000000  max mem: 1312
2020-12-06 12:35:36,907 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 12:35:36,959 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 12:36:18,977 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.017886 (1.44889261804778 s / img per device, on 1 devices)
2020-12-06 12:36:18,977 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.395084 (1.3929339277333226 s / img per device, on 1 devices)
2020-12-06 12:36:18,978 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 12:36:20,671 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 12:36:20,671 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.1760e-02, 2.5893e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0932e-01,
        1.9871e-02, 1.2335e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6917e-02, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 9.8877e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5186e-02, 9.8877e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0689e-01,
        1.7142e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0258e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        9.9572e-02, 2.7798e-02, 3.5605e-03, 3.2138e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.9960e-02, 4.0319e-05, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.3055e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.3145e-02, 0.0000e+00, 0.0000e+00, 3.9426e-03, 0.0000e+00, 0.0000e+00,
        2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  8., -1., -1.,  2.,  3.,  6.,  6., -1., -1.,  8.,
        -1., -1.,  8.,  3.,  2.,  2.,  3.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1., -1.,  6., -1., -1.,  8., -1., -1., -1., -1.,  8., -1.,
         2.,  2.,  2.,  5.,  6., -1., -1., -1., -1.,  2.,  8.,  2.,  2.,  8.,
         2.,  3.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,  5.,  6., -1.,
        -1., -1., -1.,  8., -1., -1.,  3.,  3.,  5.,  6., -1., -1., -1., -1.,
        -1.,  8., -1.,  2.,  2.,  6., -1., -1., -1., -1., -1., -1., -1., -1.,
         5.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
         2.,  6., -1., -1., -1.,  8.,  8.,  8.,  8., -1.,  3.,  6.,  6., -1.,
        -1., -1.,  2.,  2.,  8.,  2.,  2.,  6., -1., -1.,  2., -1., -1., -1.,
        -1., -1.,  8.,  2.,  2.,  6.,  8., -1., -1., -1., -1.,  2.,  2.,  5.,
         3.,  6.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,
         8., -1., -1., -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1., -1.,
        -1.,  2.,  6., -1., -1., -1., -1., -1.,  8., -1.,  2.,  2., -1., -1.,
         8., -1., -1., -1., -1.,  3.,  5.,  6., -1.,  6.,  8., -1.,  3.,  8.,
        -1., -1., -1., -1., -1.,  8., -1.,  2.,  6., -1., -1.,  8., -1., -1.,
        -1., -1., -1., -1.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.9431, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.9970, 1.0000,
        0.2021, 0.9977, 0.1864, 0.9993, 0.0737, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9602, 0.0000, 0.0000, 0.2905,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.6526, 0.6580, 0.9641,
        0.9944, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.4367, 1.0000, 0.9354,
        0.9831, 0.9980, 0.8062, 0.7141, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9168, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.6365, 0.9994, 0.9977, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.2373, 0.7019, 0.9940,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.9624, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.1742, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.8590, 1.0000, 1.0000, 0.0000, 1.0000, 0.3107, 0.3770, 0.0000,
        0.0000, 0.0000, 0.6269, 0.6594, 1.0000, 0.6689, 0.8626, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9680,
        0.9451, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.4541, 0.9894,
        1.0000, 0.1424, 1.0000, 0.9998, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9999, 0.0000, 0.0000, 0.9999, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.3016, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.4478, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0590, 1.0000,
        0.0000, 0.7813, 0.2186, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.8835, 1.0000, 0.0000, 0.0000, 0.7729, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000]), 'num_pos': 229}
2020-12-06 12:36:20,695 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.109170
2020-12-06 12:36:57,799 maskrcnn_benchmark.trainer INFO: eta: 3:15:47  iter: 460  loss: 17.1501 (25.3507)  loss_classifier: 0.3906 (3.8020)  loss_box_reg: 0.9725 (1.9037)  loss_objectness: 13.2578 (12.5854)  loss_rpn_box_reg: 1.4580 (7.0597)  time: 3.7116 (4.6251)  data: 0.1316 (1.0342)  lr: 0.000000  max mem: 1312
2020-12-06 12:38:12,123 maskrcnn_benchmark.trainer INFO: eta: 3:12:39  iter: 480  loss: 27.1967 (25.7740)  loss_classifier: 0.6065 (3.6798)  loss_box_reg: 1.6684 (1.9074)  loss_objectness: 12.2753 (12.5580)  loss_rpn_box_reg: 4.5476 (7.6288)  time: 3.7122 (4.5873)  data: 0.1268 (0.9964)  lr: 0.000000  max mem: 1312
2020-12-06 12:39:26,357 maskrcnn_benchmark.trainer INFO: eta: 3:09:40  iter: 500  loss: 17.1496 (25.6789)  loss_classifier: 0.4175 (3.5637)  loss_box_reg: 1.1726 (1.9016)  loss_objectness: 11.8832 (12.5399)  loss_rpn_box_reg: 2.0183 (7.6736)  time: 3.7088 (4.5522)  data: 0.1295 (0.9618)  lr: 0.000000  max mem: 1312
2020-12-06 12:39:26,359 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 12:39:26,412 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 12:40:08,402 maskrcnn_benchmark.inference INFO: Total run time: 0:00:41.989716 (1.4479212349858777 s / img per device, on 1 devices)
2020-12-06 12:40:08,402 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.363918 (1.3918592436560269 s / img per device, on 1 devices)
2020-12-06 12:40:08,402 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 12:40:10,043 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 12:40:10,043 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.1760e-02, 2.5893e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0932e-01,
        1.9871e-02, 1.2335e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 9.8877e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.4107e-02, 9.8877e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0689e-01,
        1.7142e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0258e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        9.9572e-02, 2.7798e-02, 9.8877e-03, 3.5605e-03, 3.2138e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.9960e-02, 9.2988e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.3055e-02, 1.2286e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.3145e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  8., -1.,  2.,  2.,  3.,  6.,  6., -1., -1.,  8.,
         2.,  2.,  8.,  3.,  2.,  2.,  2.,  8.,  3., -1.,  8., -1., -1., -1.,
        -1., -1.,  2.,  2.,  6., -1., -1.,  2., -1., -1., -1.,  2.,  8.,  2.,
         2.,  2.,  2.,  5.,  6., -1., -1., -1., -1.,  2.,  2.,  2.,  2.,  2.,
         2.,  3.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  5., -1.,
        -1.,  2.,  2.,  8.,  2.,  2.,  3.,  3.,  5.,  6., -1., -1., -1., -1.,
        -1.,  8.,  2.,  2.,  2.,  6., -1., -1., -1., -1., -1., -1., -1.,  2.,
         5.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
         2.,  6., -1.,  2.,  2.,  8.,  8.,  8.,  8.,  2.,  2.,  2.,  3., -1.,
        -1., -1.,  2.,  2.,  8.,  2.,  2.,  6., -1., -1.,  2., -1., -1., -1.,
        -1.,  2.,  8.,  2.,  2.,  6.,  8., -1.,  2.,  2.,  2.,  2.,  3.,  5.,
         2.,  6.,  8., -1., -1., -1., -1.,  2.,  8.,  2.,  2.,  6., -1., -1.,
         8., -1., -1., -1., -1., -1.,  2.,  6., -1., -1., -1., -1., -1.,  2.,
         2.,  2.,  6., -1., -1., -1., -1.,  2.,  8.,  2.,  2.,  2., -1., -1.,
         8., -1., -1., -1., -1.,  3.,  5.,  6., -1., -1.,  8., -1., -1.,  3.,
        -1., -1., -1., -1., -1.,  8., -1.,  2.,  6., -1., -1.,  8., -1., -1.,
        -1., -1., -1., -1.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000, 0.9059, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.9792, 1.0000, 0.5486, 1.0000,
        0.9366, 0.0540, 0.9911, 0.9833, 0.1610, 0.0000, 0.9995, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9132, 0.4364, 0.1290, 0.0000, 0.0000, 0.5222,
        0.0000, 0.0000, 0.0000, 0.6294, 1.0000, 0.9964, 0.9525, 0.9965, 1.0000,
        0.9844, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9997, 0.9999,
        1.0000, 0.9770, 1.0000, 0.6300, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.5405,
        0.9995, 1.0000, 0.0817, 0.7554, 0.5444, 0.9993, 0.9998, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9892, 0.0882, 0.9980, 0.5343,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.7343, 1.0000,
        0.7334, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9988, 0.9998, 0.0000, 0.9973, 0.8743,
        1.0000, 0.1158, 1.0000, 0.9036, 0.3330, 0.0945, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9974, 1.0000, 0.9996, 0.9988, 0.9992, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9999, 1.0000, 0.5910,
        1.0000, 1.0000, 1.0000, 0.0000, 0.9926, 0.7141, 1.0000, 0.4378, 0.1152,
        1.0000, 0.9982, 1.0000, 0.9999, 0.0000, 0.0000, 0.0000, 0.0000, 0.8564,
        0.9639, 0.3625, 0.9730, 0.9811, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9205, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9906, 0.9977, 0.8520, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9959, 0.9991, 0.9014, 1.0000, 0.1268, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.9880, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.9997, 1.0000, 0.0000, 0.0000, 0.0774, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000]), 'num_pos': 229}
2020-12-06 12:40:10,068 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.100437
2020-12-06 12:41:24,375 maskrcnn_benchmark.trainer INFO: eta: 3:10:18  iter: 520  loss: 17.1456 (25.5483)  loss_classifier: 0.4013 (3.4488)  loss_box_reg: 1.3464 (1.8858)  loss_objectness: 11.9142 (12.5195)  loss_rpn_box_reg: 1.5651 (7.6942)  time: 3.7119 (4.6041)  data: 0.1295 (1.0139)  lr: 0.000000  max mem: 1312
2020-12-06 12:42:38,620 maskrcnn_benchmark.trainer INFO: eta: 3:07:24  iter: 540  loss: 15.6743 (25.2805)  loss_classifier: 0.2530 (3.3381)  loss_box_reg: 1.4280 (1.8708)  loss_objectness: 13.0337 (12.5321)  loss_rpn_box_reg: 0.7071 (7.5395)  time: 3.7077 (4.5711)  data: 0.1316 (0.9813)  lr: 0.000000  max mem: 1312
2020-12-06 12:43:15,762 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 12:43:15,814 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 12:43:57,821 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.006586 (1.448502959876225 s / img per device, on 1 devices)
2020-12-06 12:43:57,821 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.374430 (1.3922217221095645 s / img per device, on 1 devices)
2020-12-06 12:43:57,821 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 12:43:59,524 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 12:43:59,524 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0518, 0.0259, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1093, 0.0199, 0.0123, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0050, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0264, 0.0099, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0095, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0341, 0.0099, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1069,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0103, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0099, 0.0037, 0.0032,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0200, 0.0093, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0231, 0.0123, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0131, 0.0000, 0.0000,
        0.0039, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  8., -1.,  2.,  2.,  3.,  6.,  6., -1., -1.,  8.,
         2.,  2.,  8.,  3.,  2.,  2., -1.,  2.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1.,  2.,  2., -1., -1.,  2., -1., -1., -1., -1.,  8.,  2.,
         2.,  2.,  2.,  2.,  6., -1., -1., -1., -1.,  2.,  2.,  2.,  2.,  2.,
         2.,  3.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  5., -1.,
        -1., -1.,  2.,  8.,  2.,  2.,  2.,  3.,  5.,  6., -1., -1., -1., -1.,
        -1.,  8.,  2.,  2.,  2., -1., -1., -1., -1., -1., -1., -1., -1.,  2.,
         5.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
         2.,  6., -1., -1., -1.,  8.,  2.,  2.,  8.,  2.,  2.,  2.,  3., -1.,
         2.,  2.,  2.,  2.,  8.,  2.,  2.,  6., -1., -1.,  2., -1., -1.,  2.,
         2.,  2.,  8.,  2.,  2.,  6.,  8., -1., -1.,  2.,  2.,  2.,  2.,  5.,
         2.,  6.,  8., -1., -1., -1., -1.,  2.,  8.,  2.,  2.,  6., -1., -1.,
         8., -1., -1., -1., -1., -1.,  2.,  6., -1., -1., -1.,  2.,  2.,  2.,
         2.,  2.,  6., -1., -1., -1.,  2.,  2.,  8.,  2.,  2.,  2., -1., -1.,
         8., -1., -1., -1., -1.,  3.,  5.,  6., -1.,  2.,  8., -1.,  3.,  8.,
        -1., -1., -1., -1., -1.,  8.,  2.,  2.,  6., -1., -1., -1., -1., -1.,
        -1., -1., -1.,  2.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 0.9961, 0.0000, 1.0000, 0.9996, 1.0000,
        1.0000, 0.9995, 0.0000, 0.0000, 1.0000, 0.9542, 1.0000, 0.2615, 1.0000,
        0.9996, 0.9616, 0.0000, 0.9704, 0.9984, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.7582, 0.2145, 0.0000, 0.0000, 0.9959,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.4219, 0.9923, 0.8411, 1.0000,
        0.9924, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9993, 1.0000,
        1.0000, 0.9999, 1.0000, 0.0785, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.3450, 1.0000, 1.0000, 0.9414, 0.5819, 0.9585, 0.9988, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9999, 0.9699, 0.9759, 0.9951, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.4598, 0.9982,
        0.5607, 1.0000, 0.0000, 0.0000, 0.9999, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9952, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.7470, 0.9866, 0.1175, 0.9907, 1.0000, 1.0000, 0.0000,
        0.9935, 1.0000, 0.9966, 0.0736, 0.9402, 0.9982, 0.0598, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.9996, 0.3263, 0.0776, 1.0000, 1.0000,
        0.8575, 1.0000, 1.0000, 0.0000, 0.0000, 0.9829, 0.9982, 1.0000, 0.9984,
        1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.6705,
        0.9990, 0.9963, 0.9999, 0.1478, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9991, 1.0000, 0.0000, 0.0000, 0.0000, 0.9753,
        0.1464, 1.0000, 0.7030, 0.0777, 1.0000, 0.0000, 0.0000, 0.0000, 0.9884,
        0.7902, 0.9369, 0.0631, 1.0000, 0.9588, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.7013, 1.0000,
        0.0000, 0.8667, 0.1277, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.9990, 0.8287, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.6945, 1.0000]), 'num_pos': 229}
2020-12-06 12:43:59,550 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.087336
2020-12-06 12:44:36,624 maskrcnn_benchmark.trainer INFO: eta: 3:07:49  iter: 560  loss: 15.9874 (25.1970)  loss_classifier: 0.3624 (3.2407)  loss_box_reg: 1.3355 (1.8578)  loss_objectness: 12.2607 (12.5243)  loss_rpn_box_reg: 0.6730 (7.5741)  time: 3.7097 (4.6185)  data: 0.1265 (1.0290)  lr: 0.000000  max mem: 1312
2020-12-06 12:45:50,832 maskrcnn_benchmark.trainer INFO: eta: 3:05:01  iter: 580  loss: 16.1040 (24.9387)  loss_classifier: 0.3549 (3.1515)  loss_box_reg: 0.8904 (1.8473)  loss_objectness: 12.4516 (12.5353)  loss_rpn_box_reg: 0.7908 (7.4045)  time: 3.7072 (4.5872)  data: 0.1286 (0.9981)  lr: 0.000000  max mem: 1312
2020-12-06 12:47:04,971 maskrcnn_benchmark.trainer INFO: eta: 3:02:18  iter: 600  loss: 18.0248 (24.8180)  loss_classifier: 0.3943 (3.0669)  loss_box_reg: 1.7188 (1.8480)  loss_objectness: 12.9551 (12.5548)  loss_rpn_box_reg: 1.3008 (7.3483)  time: 3.7066 (4.5579)  data: 0.1260 (0.9691)  lr: 0.000000  max mem: 1312
2020-12-06 12:47:04,973 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 12:47:05,022 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 12:47:47,012 maskrcnn_benchmark.inference INFO: Total run time: 0:00:41.989813 (1.4479245975099762 s / img per device, on 1 devices)
2020-12-06 12:47:47,012 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.364259 (1.3918709919370453 s / img per device, on 1 devices)
2020-12-06 12:47:47,012 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 12:47:48,711 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 12:47:48,712 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0518, 0.0259, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0232, 0.0123, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0050, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0264, 0.0099, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0095, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0341, 0.0099, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1069,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0103, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0099, 0.0037, 0.0032,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0200, 0.0093, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0231, 0.0123, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0099, 0.0000, 0.0000,
        0.0039, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  8.,  2.,  2.,  2.,  3.,  6.,  6., -1., -1., -1.,
         2.,  2.,  8.,  3.,  2.,  2., -1.,  2.,  8., -1.,  8., -1., -1., -1.,
        -1., -1.,  2.,  2.,  2., -1., -1.,  2., -1., -1., -1., -1.,  8.,  2.,
         2.,  2.,  2.,  2.,  6., -1., -1., -1., -1.,  2.,  2.,  2.,  2.,  2.,
         2.,  2.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  5., -1.,
        -1., -1., -1.,  8.,  2.,  2.,  2.,  2.,  5.,  6., -1., -1., -1., -1.,
         2.,  8.,  2.,  2.,  2., -1., -1., -1., -1., -1., -1., -1., -1.,  2.,
         5.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
         2.,  6., -1.,  2.,  2.,  8.,  2.,  2.,  8.,  2.,  2.,  2.,  3., -1.,
        -1.,  2.,  2.,  2.,  2.,  2.,  2.,  6., -1., -1.,  2., -1., -1.,  2.,
         2.,  2.,  8.,  2.,  2.,  6.,  8., -1., -1.,  2.,  2.,  2.,  2.,  5.,
         2.,  6.,  8., -1., -1., -1., -1., -1.,  8.,  2.,  2.,  2., -1., -1.,
         8., -1., -1., -1., -1., -1.,  2.,  6., -1., -1., -1.,  2.,  2.,  2.,
         2.,  2.,  6., -1., -1., -1., -1.,  2.,  2.,  2.,  2.,  2., -1., -1.,
         8., -1., -1., -1., -1.,  3.,  5.,  6., -1.,  2.,  8., -1.,  3.,  8.,
        -1., -1., -1., -1., -1.,  8.,  2.,  2.,  6., -1., -1., -1., -1., -1.,
        -1., -1., -1.,  2.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 0.1376, 1.0000, 0.9999, 0.8551, 0.9835,
        1.0000, 0.9616, 0.0000, 0.0000, 0.0000, 0.9848, 1.0000, 1.0000, 0.9958,
        0.9999, 0.9896, 0.0000, 0.9928, 0.9892, 0.0000, 0.9989, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9025, 0.4551, 0.0886, 0.0000, 0.0000, 0.9986,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.6969, 0.9975, 0.9603, 1.0000,
        0.9976, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9998, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9931, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.6125, 0.9979, 0.8069, 1.0000, 0.9999, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9894, 0.9478, 0.9931, 0.9983, 0.0522, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.7707, 0.9851,
        0.1041, 1.0000, 0.0000, 0.0000, 0.9957, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9991, 0.9996, 0.0000, 0.0663, 1.0000,
        1.0000, 0.9349, 0.8971, 0.0651, 0.3525, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.9978, 1.0000, 0.9990, 0.1524, 0.9994, 0.9638, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.9999, 0.6042, 0.1552, 0.9922, 1.0000,
        0.9305, 1.0000, 1.0000, 0.0000, 0.0000, 0.9934, 0.9992, 1.0000, 0.9996,
        1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.3543, 0.9990, 0.8586, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9996, 1.0000, 0.0000, 0.0000, 0.0000, 0.9916,
        0.4021, 1.0000, 0.8828, 0.1645, 0.9999, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9961, 0.9193, 0.9704, 1.0000, 0.9794, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9999, 1.0000, 1.0000, 0.0000, 0.8491, 1.0000,
        0.0000, 0.3262, 0.1235, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.9997, 0.9418, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9110, 1.0000]), 'num_pos': 229}
2020-12-06 12:47:48,737 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.074236
2020-12-06 12:49:02,901 maskrcnn_benchmark.trainer INFO: eta: 3:02:30  iter: 620  loss: 17.8400 (24.6785)  loss_classifier: 0.3592 (3.0020)  loss_box_reg: 0.9965 (1.8380)  loss_objectness: 11.7603 (12.5451)  loss_rpn_box_reg: 1.5600 (7.2935)  time: 3.7042 (4.6011)  data: 0.1287 (1.0126)  lr: 0.000000  max mem: 1312
2020-12-06 12:50:17,104 maskrcnn_benchmark.trainer INFO: eta: 2:59:52  iter: 640  loss: 17.4242 (24.5379)  loss_classifier: 0.3952 (2.9268)  loss_box_reg: 1.3180 (1.8337)  loss_objectness: 13.1896 (12.5593)  loss_rpn_box_reg: 0.8719 (7.2181)  time: 3.7101 (4.5732)  data: 0.1296 (0.9850)  lr: 0.000000  max mem: 1312
2020-12-06 12:50:54,168 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 12:50:54,220 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 12:51:36,207 maskrcnn_benchmark.inference INFO: Total run time: 0:00:41.987590 (1.447847925383469 s / img per device, on 1 devices)
2020-12-06 12:51:36,208 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.347163 (1.3912814978895516 s / img per device, on 1 devices)
2020-12-06 12:51:36,208 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 12:51:37,903 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 12:51:37,903 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0518, 0.0259, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0232, 0.0123, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0050, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0264, 0.0099, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0095, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0341, 0.0099, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1069,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0103, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0099, 0.0037, 0.0032,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0200, 0.0093, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0231, 0.0123, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0099, 0.0000, 0.0000,
        0.0039, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  8.,  2.,  2.,  2.,  3.,  6.,  6., -1., -1., -1.,
         2.,  2.,  8.,  3.,  2.,  2., -1.,  2.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1.,  2.,  2., -1., -1.,  2., -1., -1., -1., -1.,  8.,  2.,
         2.,  2.,  2.,  2.,  6., -1., -1., -1., -1.,  2.,  2.,  2.,  2.,  2.,
         2.,  2.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  5., -1.,
        -1., -1., -1.,  8.,  2.,  2.,  2.,  2.,  5.,  6., -1., -1., -1., -1.,
        -1.,  8.,  2.,  2.,  2., -1., -1., -1., -1., -1., -1., -1., -1.,  2.,
         5.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
         2.,  6., -1., -1.,  2.,  8.,  2.,  2.,  8.,  2.,  2.,  2.,  3., -1.,
        -1.,  2.,  2.,  2.,  8.,  2.,  2.,  6., -1., -1.,  2., -1., -1., -1.,
         2.,  2.,  8.,  2.,  2.,  6.,  8., -1., -1.,  2.,  2.,  2.,  2.,  5.,
         2.,  6.,  8., -1., -1., -1., -1., -1.,  8.,  2.,  2.,  2., -1., -1.,
         8., -1., -1., -1., -1., -1.,  2.,  6., -1., -1., -1., -1., -1.,  2.,
         2.,  2.,  6., -1., -1., -1.,  2.,  2.,  8.,  2.,  2.,  2., -1., -1.,
         8., -1., -1., -1., -1.,  3.,  5.,  6., -1.,  2.,  8., -1., -1.,  8.,
        -1., -1., -1., -1., -1.,  8.,  2.,  2.,  6., -1., -1., -1., -1., -1.,
        -1., -1., -1.,  2.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.9999, 0.3838, 1.0000, 0.9980, 0.5096, 0.4162,
        1.0000, 0.7184, 0.0000, 0.0000, 0.0000, 0.9835, 1.0000, 1.0000, 0.3904,
        0.9970, 0.7796, 0.0000, 0.9920, 0.9646, 0.0000, 0.9964, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.8542, 0.3747, 0.0000, 0.0000, 0.9726,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.6981, 0.9976, 0.9486, 1.0000,
        0.9977, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9997, 1.0000,
        1.0000, 1.0000, 0.9999, 1.0000, 0.9766, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.6054, 0.9753, 0.8028, 1.0000, 0.9999, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9796, 0.9854, 0.8425, 0.9980, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.7403, 0.9443,
        0.1373, 1.0000, 0.0000, 0.0000, 0.9882, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9990, 0.9985, 0.0000, 0.0000, 0.9998,
        1.0000, 0.7213, 0.8912, 0.2787, 0.3076, 0.9996, 1.0000, 0.9962, 0.0000,
        0.0000, 0.9974, 1.0000, 0.9987, 0.0875, 0.9993, 0.9125, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9998, 0.5245, 0.9966, 1.0000,
        0.4200, 1.0000, 1.0000, 0.0000, 0.0000, 0.9917, 0.9789, 1.0000, 0.9860,
        0.9999, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0703, 0.9703, 0.8162, 0.9987, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9944, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9895, 0.9999, 0.8738, 0.9990, 0.0000, 0.0000, 0.0000, 0.9947,
        0.9089, 0.0696, 0.9304, 1.0000, 0.6846, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9959, 1.0000, 1.0000, 0.0000, 0.2867, 1.0000,
        0.0000, 0.0000, 0.0611, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.9996, 0.2737, 0.9999, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.2622, 1.0000]), 'num_pos': 229}
2020-12-06 12:51:37,928 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.082969
2020-12-06 12:52:15,056 maskrcnn_benchmark.trainer INFO: eta: 2:59:55  iter: 660  loss: 16.0850 (24.3298)  loss_classifier: 0.4892 (2.8585)  loss_box_reg: 1.0870 (1.8253)  loss_objectness: 12.8565 (12.5767)  loss_rpn_box_reg: 0.8712 (7.0694)  time: 3.7058 (4.6134)  data: 0.1313 (1.0254)  lr: 0.000000  max mem: 1312
2020-12-06 12:53:29,317 maskrcnn_benchmark.trainer INFO: eta: 2:57:21  iter: 680  loss: 16.1644 (24.3972)  loss_classifier: 0.4144 (2.7922)  loss_box_reg: 1.6008 (1.8184)  loss_objectness: 11.9378 (12.5571)  loss_rpn_box_reg: 1.3764 (7.2295)  time: 3.7101 (4.5869)  data: 0.1289 (0.9991)  lr: 0.000000  max mem: 1312
2020-12-06 12:54:43,557 maskrcnn_benchmark.trainer INFO: eta: 2:54:52  iter: 700  loss: 16.6356 (24.3798)  loss_classifier: 0.3416 (2.7330)  loss_box_reg: 1.0989 (1.8099)  loss_objectness: 11.9528 (12.5544)  loss_rpn_box_reg: 1.6808 (7.2825)  time: 3.7133 (4.5619)  data: 0.1294 (0.9743)  lr: 0.000000  max mem: 1312
2020-12-06 12:54:43,559 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 12:54:43,608 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 12:55:25,601 maskrcnn_benchmark.inference INFO: Total run time: 0:00:41.992949 (1.4480327244462639 s / img per device, on 1 devices)
2020-12-06 12:55:25,601 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.351820 (1.3914420686919113 s / img per device, on 1 devices)
2020-12-06 12:55:25,602 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 12:55:27,296 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 12:55:27,296 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0259, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0232, 0.0123, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0050, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0264, 0.0099, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0095, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0341, 0.0099, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1069,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0103, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0099, 0.0032, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0200, 0.0093, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0123, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0099, 0.0000, 0.0000,
        0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8., -1.,  2.,  2.,  2.,  3.,  6.,  6., -1., -1., -1.,
        -1.,  2.,  8.,  2.,  2.,  2., -1.,  2.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1.,  2.,  2., -1., -1.,  2., -1., -1., -1., -1.,  8.,  2.,
         2.,  2.,  2.,  2.,  6., -1., -1., -1., -1.,  2.,  2.,  2.,  2.,  2.,
         2.,  2.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  5., -1.,
        -1., -1., -1.,  8.,  2.,  2.,  2.,  2.,  5.,  6., -1., -1., -1., -1.,
         2.,  8.,  2.,  2.,  2., -1., -1., -1., -1., -1., -1., -1., -1.,  2.,
         5.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
         2.,  6., -1., -1., -1.,  8.,  2.,  2.,  2.,  2.,  2.,  2.,  3., -1.,
        -1., -1.,  2.,  2.,  2.,  2.,  2.,  6., -1., -1.,  2., -1., -1., -1.,
         2.,  2.,  8.,  2.,  2.,  6.,  8., -1., -1.,  2.,  2.,  2.,  2.,  5.,
         2.,  6.,  8., -1., -1., -1., -1., -1., -1.,  2.,  2.,  2., -1., -1.,
         8., -1., -1., -1., -1., -1.,  2.,  6., -1., -1., -1., -1.,  2.,  2.,
         2.,  2.,  6., -1., -1., -1., -1.,  2.,  2.,  2.,  2.,  2., -1., -1.,
         8., -1., -1., -1., -1.,  3.,  5.,  6., -1.,  2.,  8., -1., -1., -1.,
        -1., -1.,  8.,  2.,  2.,  6., -1., -1., -1., -1., -1., -1., -1., -1.,
         2.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.9994, 0.0000, 1.0000, 0.9992, 0.8718, 0.0659,
        1.0000, 0.2678, 0.0000, 0.0000, 0.0000, 0.0000, 0.9780, 1.0000, 0.9046,
        1.0000, 0.9987, 0.0000, 0.9884, 0.8366, 0.0000, 0.9776, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.7504, 0.2609, 0.0000, 0.0000, 0.9881,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.6421, 0.9970, 0.9166, 1.0000,
        0.9971, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9996, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.8774, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.5434, 0.9883, 0.7602, 1.0000, 0.9999, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9757, 0.7999, 0.9356, 0.9970, 0.2001, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.6461, 0.8981,
        0.1624, 1.0000, 0.0000, 0.0000, 0.9547, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9985, 0.9928, 0.0000, 0.0000, 0.0000,
        1.0000, 0.9999, 0.9729, 0.8570, 0.2142, 0.9998, 1.0000, 0.9585, 0.0000,
        0.0000, 0.0000, 0.9961, 1.0000, 0.9979, 0.9990, 0.9921, 0.9999, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9998, 0.3943, 0.9645, 1.0000,
        0.5962, 1.0000, 1.0000, 0.0000, 0.0000, 0.9877, 0.9889, 1.0000, 0.9955,
        0.9999, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9882, 0.7267, 0.9994, 0.0000, 0.0000, 0.9999, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9973, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9838, 0.0651, 1.0000, 0.8336, 0.9913, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9913, 0.8756, 0.9944, 1.0000, 0.8067, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9673, 1.0000, 0.9999, 0.0000, 0.4555, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9994, 0.4692, 0.9991,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.5339,
        1.0000]), 'num_pos': 226}
2020-12-06 12:55:27,320 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.061947
2020-12-06 12:56:42,244 maskrcnn_benchmark.trainer INFO: eta: 2:54:48  iter: 720  loss: 16.4563 (24.3651)  loss_classifier: 0.3497 (2.6734)  loss_box_reg: 1.6679 (1.8067)  loss_objectness: 12.2636 (12.5525)  loss_rpn_box_reg: 1.4166 (7.3326)  time: 3.7204 (4.6000)  data: 0.1335 (1.0118)  lr: 0.000000  max mem: 1312
2020-12-06 13:19:20,183 maskrcnn_benchmark INFO: Using 1 GPUs
2020-12-06 13:19:20,184 maskrcnn_benchmark INFO: Namespace(config_file='d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml', custom_dict='custom_dict.txt', distributed=False, local_rank=0, opts=[], skip_test=False, weights='visdrone_model_0360000.pth')
2020-12-06 13:19:20,184 maskrcnn_benchmark INFO: Collecting env info (might take some time)
2020-12-06 13:19:22,244 maskrcnn_benchmark INFO: 
PyTorch version: 1.1.0
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: Ubuntu 16.04.7 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
CMake version: version 3.5.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: GPU 0: GeForce GTX 950M
Nvidia driver version: 450.80.02
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.4

Versions of relevant libraries:
[pip3] numpy==1.19.4
[pip3] torch==1.1.0
[pip3] torchvision==0.3.0
[conda] blas                      1.0                         mkl  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py36he904b0f_0  
[conda] mkl_fft                   1.2.0            py36h23d657b_0  
[conda] mkl_random                1.1.1            py36h0573a6f_0  
[conda] pytorch                   1.1.0           py3.6_cuda9.0.176_cudnn7.5.1_0    pytorch
[conda] pytorch-nightly           1.0.0.dev20190328 py3.6_cuda9.0.176_cudnn7.4.2_0    pytorch
[conda] torchvision               0.3.0           py36_cu9.0.176_1    pytorch
        Pillow (8.0.1)
2020-12-06 13:19:22,244 maskrcnn_benchmark INFO: Loaded configuration file d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml
2020-12-06 13:19:22,244 maskrcnn_benchmark INFO: 
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "e2e_faster_rcnn_X_101_32x8d_FPN_1x.pth"
  BACKBONE:
    CONV_BODY: "R-101-FPN"
    FREEZE_CONV_BODY_AT: 5
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 1000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    STRIDE_IN_1X1: False
    NUM_GROUPS: 32
    WIDTH_PER_GROUP: 8
DATASETS:
  TRAIN: ("giro1_train", )
  TEST: ("giro1_test",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
  NUM_WORKERS: 0
SOLVER:
  BASE_LR: 0.0000005
  WEIGHT_DECAY: 0.0001
  STEPS: (480000, 640000,)
  MAX_ITER: 3000
  IMS_PER_BATCH: 2
TEST:
  IMS_PER_BATCH: 1

2020-12-06 13:19:22,245 maskrcnn_benchmark INFO: Running with config:
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  NUM_WORKERS: 0
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('giro1_test',)
  TRAIN: ('giro1_train',)
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MODEL:
  BACKBONE:
    CONV_BODY: R-101-FPN
    FREEZE_CONV_BODY_AT: 5
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FBNET:
    ARCH: default
    ARCH_DEF: 
    BN_TYPE: bn
    DET_HEAD_BLOCKS: []
    DET_HEAD_LAST_SCALE: 1.0
    DET_HEAD_STRIDE: 0
    DW_CONV_SKIP_BN: True
    DW_CONV_SKIP_RELU: True
    KPTS_HEAD_BLOCKS: []
    KPTS_HEAD_LAST_SCALE: 0.0
    KPTS_HEAD_STRIDE: 0
    MASK_HEAD_BLOCKS: []
    MASK_HEAD_LAST_SCALE: 0.0
    MASK_HEAD_STRIDE: 0
    RPN_BN_TYPE: 
    RPN_HEAD_BLOCKS: 0
    SCALE_FACTOR: 1.0
    WIDTH_DIVISOR: 1
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    NUM_GROUPS: 32
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 8
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: ResNet50Conv5ROIFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 2000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 1000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: visdrone_model_0360000.pth
OUTPUT_DIR: .
PATHS_CATALOG: /zold137/maskrcnn_benchmark/config/paths_catalog.py
SOLVER:
  BASE_LR: 5e-07
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  MAX_ITER: 3000
  MOMENTUM: 0.9
  STEPS: (480000, 640000)
  WARMUP_FACTOR: 0.3333333333333333
  WARMUP_ITERS: 500
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 1
2020-12-06 13:20:53,776 maskrcnn_benchmark INFO: Using 1 GPUs
2020-12-06 13:20:53,776 maskrcnn_benchmark INFO: Namespace(config_file='d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml', custom_dict='custom_dict.txt', distributed=False, local_rank=0, opts=[], skip_test=False, weights='visdrone_model_0360000.pth')
2020-12-06 13:20:53,776 maskrcnn_benchmark INFO: Collecting env info (might take some time)
2020-12-06 13:20:55,843 maskrcnn_benchmark INFO: 
PyTorch version: 1.1.0
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: Ubuntu 16.04.7 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
CMake version: version 3.5.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: GPU 0: GeForce GTX 950M
Nvidia driver version: 450.80.02
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.4

Versions of relevant libraries:
[pip3] numpy==1.19.4
[pip3] torch==1.1.0
[pip3] torchvision==0.3.0
[conda] blas                      1.0                         mkl  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py36he904b0f_0  
[conda] mkl_fft                   1.2.0            py36h23d657b_0  
[conda] mkl_random                1.1.1            py36h0573a6f_0  
[conda] pytorch                   1.1.0           py3.6_cuda9.0.176_cudnn7.5.1_0    pytorch
[conda] pytorch-nightly           1.0.0.dev20190328 py3.6_cuda9.0.176_cudnn7.4.2_0    pytorch
[conda] torchvision               0.3.0           py36_cu9.0.176_1    pytorch
        Pillow (8.0.1)
2020-12-06 13:20:55,844 maskrcnn_benchmark INFO: Loaded configuration file d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml
2020-12-06 13:20:55,844 maskrcnn_benchmark INFO: 
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "e2e_faster_rcnn_X_101_32x8d_FPN_1x.pth"
  BACKBONE:
    CONV_BODY: "R-101-FPN"
    FREEZE_CONV_BODY_AT: 5
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 1000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    STRIDE_IN_1X1: False
    NUM_GROUPS: 32
    WIDTH_PER_GROUP: 8
DATASETS:
  TRAIN: ("giro1_train", )
  TEST: ("giro1_test",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
  NUM_WORKERS: 0
SOLVER:
  BASE_LR: 0.0000005
  WEIGHT_DECAY: 0.0001
  STEPS: (480000, 640000,)
  MAX_ITER: 3000
  IMS_PER_BATCH: 2
TEST:
  IMS_PER_BATCH: 1

2020-12-06 13:20:55,845 maskrcnn_benchmark INFO: Running with config:
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  NUM_WORKERS: 0
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('giro1_test',)
  TRAIN: ('giro1_train',)
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MODEL:
  BACKBONE:
    CONV_BODY: R-101-FPN
    FREEZE_CONV_BODY_AT: 5
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FBNET:
    ARCH: default
    ARCH_DEF: 
    BN_TYPE: bn
    DET_HEAD_BLOCKS: []
    DET_HEAD_LAST_SCALE: 1.0
    DET_HEAD_STRIDE: 0
    DW_CONV_SKIP_BN: True
    DW_CONV_SKIP_RELU: True
    KPTS_HEAD_BLOCKS: []
    KPTS_HEAD_LAST_SCALE: 0.0
    KPTS_HEAD_STRIDE: 0
    MASK_HEAD_BLOCKS: []
    MASK_HEAD_LAST_SCALE: 0.0
    MASK_HEAD_STRIDE: 0
    RPN_BN_TYPE: 
    RPN_HEAD_BLOCKS: 0
    SCALE_FACTOR: 1.0
    WIDTH_DIVISOR: 1
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    NUM_GROUPS: 32
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 8
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: ResNet50Conv5ROIFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 2000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 1000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: visdrone_model_0360000.pth
OUTPUT_DIR: .
PATHS_CATALOG: /zold137/maskrcnn_benchmark/config/paths_catalog.py
SOLVER:
  BASE_LR: 5e-07
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  MAX_ITER: 3000
  MOMENTUM: 0.9
  STEPS: (480000, 640000)
  WARMUP_FACTOR: 0.3333333333333333
  WARMUP_ITERS: 500
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 1
2020-12-06 13:20:57,395 maskrcnn_benchmark INFO: reloading weigts from best_acc_r1.pth
2020-12-06 13:20:59,530 maskrcnn_benchmark INFO: unfroze: rpn.head.bbox_pred.weight
2020-12-06 13:20:59,530 maskrcnn_benchmark INFO: unfroze: rpn.head.bbox_pred.bias
2020-12-06 13:20:59,530 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.bbox_pred.weight
2020-12-06 13:20:59,531 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.bbox_pred.bias
2020-12-06 13:20:59,700 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
2020-12-06 13:21:00,797 maskrcnn_benchmark.trainer INFO: Start training
2020-12-06 13:23:53,054 maskrcnn_benchmark INFO: Using 1 GPUs
2020-12-06 13:23:53,054 maskrcnn_benchmark INFO: Namespace(config_file='d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml', custom_dict='custom_dict.txt', distributed=False, local_rank=0, opts=[], skip_test=False, weights='visdrone_model_0360000.pth')
2020-12-06 13:23:53,054 maskrcnn_benchmark INFO: Collecting env info (might take some time)
2020-12-06 13:23:55,773 maskrcnn_benchmark INFO: 
PyTorch version: 1.1.0
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: Ubuntu 16.04.7 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
CMake version: version 3.5.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: GPU 0: GeForce GTX 950M
Nvidia driver version: 450.80.02
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.4

Versions of relevant libraries:
[pip3] numpy==1.19.4
[pip3] torch==1.1.0
[pip3] torchvision==0.3.0
[conda] blas                      1.0                         mkl  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py36he904b0f_0  
[conda] mkl_fft                   1.2.0            py36h23d657b_0  
[conda] mkl_random                1.1.1            py36h0573a6f_0  
[conda] pytorch                   1.1.0           py3.6_cuda9.0.176_cudnn7.5.1_0    pytorch
[conda] pytorch-nightly           1.0.0.dev20190328 py3.6_cuda9.0.176_cudnn7.4.2_0    pytorch
[conda] torchvision               0.3.0           py36_cu9.0.176_1    pytorch
        Pillow (8.0.1)
2020-12-06 13:23:55,773 maskrcnn_benchmark INFO: Loaded configuration file d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml
2020-12-06 13:23:55,774 maskrcnn_benchmark INFO: 
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "e2e_faster_rcnn_X_101_32x8d_FPN_1x.pth"
  BACKBONE:
    CONV_BODY: "R-101-FPN"
    FREEZE_CONV_BODY_AT: 5
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 1000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    STRIDE_IN_1X1: False
    NUM_GROUPS: 32
    WIDTH_PER_GROUP: 8
DATASETS:
  TRAIN: ("giro1_train", )
  TEST: ("giro1_test",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
  NUM_WORKERS: 0
SOLVER:
  BASE_LR: 0.0000005
  WEIGHT_DECAY: 0.0001
  STEPS: (480000, 640000,)
  MAX_ITER: 3000
  IMS_PER_BATCH: 2
TEST:
  IMS_PER_BATCH: 1

2020-12-06 13:23:55,777 maskrcnn_benchmark INFO: Running with config:
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  NUM_WORKERS: 0
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('giro1_test',)
  TRAIN: ('giro1_train',)
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MODEL:
  BACKBONE:
    CONV_BODY: R-101-FPN
    FREEZE_CONV_BODY_AT: 5
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FBNET:
    ARCH: default
    ARCH_DEF: 
    BN_TYPE: bn
    DET_HEAD_BLOCKS: []
    DET_HEAD_LAST_SCALE: 1.0
    DET_HEAD_STRIDE: 0
    DW_CONV_SKIP_BN: True
    DW_CONV_SKIP_RELU: True
    KPTS_HEAD_BLOCKS: []
    KPTS_HEAD_LAST_SCALE: 0.0
    KPTS_HEAD_STRIDE: 0
    MASK_HEAD_BLOCKS: []
    MASK_HEAD_LAST_SCALE: 0.0
    MASK_HEAD_STRIDE: 0
    RPN_BN_TYPE: 
    RPN_HEAD_BLOCKS: 0
    SCALE_FACTOR: 1.0
    WIDTH_DIVISOR: 1
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    NUM_GROUPS: 32
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 8
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: ResNet50Conv5ROIFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 2000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 1000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: visdrone_model_0360000.pth
OUTPUT_DIR: .
PATHS_CATALOG: /zold137/maskrcnn_benchmark/config/paths_catalog.py
SOLVER:
  BASE_LR: 5e-07
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  MAX_ITER: 3000
  MOMENTUM: 0.9
  STEPS: (480000, 640000)
  WARMUP_FACTOR: 0.3333333333333333
  WARMUP_ITERS: 500
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 1
2020-12-06 13:23:57,325 maskrcnn_benchmark INFO: reloading weigts from cls_best_acc_r1.pth
2020-12-06 13:23:59,405 maskrcnn_benchmark INFO: unfroze: rpn.head.bbox_pred.weight
2020-12-06 13:23:59,406 maskrcnn_benchmark INFO: unfroze: rpn.head.bbox_pred.bias
2020-12-06 13:23:59,406 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.bbox_pred.weight
2020-12-06 13:23:59,406 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.bbox_pred.bias
2020-12-06 13:23:59,579 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
2020-12-06 13:24:00,649 maskrcnn_benchmark.trainer INFO: Start training
2020-12-06 13:25:15,062 maskrcnn_benchmark.trainer INFO: eta: 3:04:47  iter: 20  loss: 17.1552 (22.7451)  loss_classifier: 0.8970 (1.0147)  loss_box_reg: 1.3567 (1.3748)  loss_objectness: 11.8664 (12.1094)  loss_rpn_box_reg: 2.3208 (8.2462)  time: 3.7154 (3.7205)  data: 0.1349 (0.1375)  lr: 0.000000  max mem: 1313
2020-12-06 13:26:29,515 maskrcnn_benchmark.trainer INFO: eta: 3:03:35  iter: 40  loss: 19.3441 (23.3754)  loss_classifier: 0.8508 (1.1567)  loss_box_reg: 1.9935 (1.7688)  loss_objectness: 12.6342 (12.3210)  loss_rpn_box_reg: 1.9857 (8.1287)  time: 3.7188 (3.7216)  data: 0.1320 (0.1355)  lr: 0.000000  max mem: 1313
2020-12-06 13:26:29,517 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 13:26:29,589 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 13:27:11,586 maskrcnn_benchmark.inference INFO: Total run time: 0:00:41.996461 (1.4481538164204564 s / img per device, on 1 devices)
2020-12-06 13:27:11,586 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.298739 (1.389611688153497 s / img per device, on 1 devices)
2020-12-06 13:27:11,586 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 13:27:13,320 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 13:27:13,320 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.5893e-02, 3.8171e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.7985e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 3.2532e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0899e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.7203e-03, 0.0000e+00, 0.0000e+00,
        9.4936e-02, 7.9349e-02, 4.6531e-02, 2.3290e-02, 3.2309e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0689e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        3.5500e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.0724e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.3258e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.9960e-02, 3.8555e-03, 4.0319e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        9.8650e-03, 0.0000e+00, 0.0000e+00, 3.5316e-04, 0.0000e+00, 0.0000e+00,
        2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8., -1., -1.,  8., -1.,  3.,  6.,  6., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  6., -1.,  8.,  3., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1.,  8., -1., -1.,  8., -1., -1., -1.,  8.,  8., -1.,
        -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1., -1., -1., -1.,  3.,
        -1.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1., -1.,  3.,  6., -1.,
        -1.,  8.,  8., -1., -1.,  8.,  8.,  8.,  8., -1.,  3.,  5.,  6., -1.,
        -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1.,  3.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1.,  6., -1., -1., -1., -1.,  8., -1., -1., -1.,  3.,  5.,  6., -1.,
        -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1.,  8., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  6.,  8., -1., -1., -1., -1., -1., -1.,  8.,
         3.,  5.,  6., -1., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1.,  3.,  6., -1., -1., -1., -1., -1.,  8.,
        -1., -1., -1., -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,
         8., -1., -1., -1., -1., -1.,  3.,  6., -1., -1.,  8.,  3.,  3.,  3.,
        -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.9396, 0.0000, 0.0000, 1.0000, 0.0000, 0.9981,
        0.9998, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9391, 0.0000,
        0.0000, 0.9955, 0.0000, 1.0000, 0.2073, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9998, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9283, 0.0000, 1.0000, 0.9999, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9998, 1.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9973, 0.0000, 0.9733,
        0.9867, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.6970, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.9870, 0.9909, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.9999, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.9781, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9185]), 'num_pos': 229}
2020-12-06 13:27:13,347 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.100437
2020-12-06 13:27:13,350 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./_best_acc_r1.pth
2020-12-06 13:27:14,058 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: _best_acc_r1
2020-12-06 13:28:29,605 maskrcnn_benchmark.trainer INFO: eta: 3:39:38  iter: 60  loss: 17.3717 (22.7933)  loss_classifier: 0.5315 (1.1473)  loss_box_reg: 1.5431 (1.8066)  loss_objectness: 12.2700 (12.3622)  loss_rpn_box_reg: 1.2030 (7.4771)  time: 3.7254 (4.4826)  data: 0.1339 (0.8943)  lr: 0.000000  max mem: 1313
2020-12-06 13:29:44,167 maskrcnn_benchmark.trainer INFO: eta: 3:28:58  iter: 80  loss: 16.2733 (22.2058)  loss_classifier: 0.7097 (1.2031)  loss_box_reg: 1.5280 (1.8423)  loss_objectness: 12.1534 (12.3685)  loss_rpn_box_reg: 0.7012 (6.7919)  time: 3.7254 (4.2939)  data: 0.1353 (0.7050)  lr: 0.000000  max mem: 1313
2020-12-06 13:29:44,169 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 13:29:44,223 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 13:30:26,331 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.108245 (1.4520084611300765 s / img per device, on 1 devices)
2020-12-06 13:30:26,331 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.407522 (1.3933628263144657 s / img per device, on 1 devices)
2020-12-06 13:30:26,332 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 13:30:28,080 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 13:30:28,080 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.5893e-02, 3.1844e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.8607e-02, 0.0000e+00, 0.0000e+00,
        9.3103e-02, 2.6365e-02, 9.8877e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 9.5415e-03,
        0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.5502e-02, 0.0000e+00, 0.0000e+00, 8.7335e-02, 2.5186e-02, 2.1754e-02,
        3.2435e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5639e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2592e-01,
        1.0689e-01, 4.9300e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0258e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.3927e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.2259e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.9628e-02, 1.9771e-02, 3.8555e-03, 4.0319e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.3055e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3668e-02,
        3.7298e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 8.1633e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        9.8650e-03, 0.0000e+00, 0.0000e+00, 3.9426e-03, 0.0000e+00, 0.0000e+00,
        2.0912e-02, 3.7314e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 7,
        7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 5, 7,
        7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8,
        8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8., -1., -1.,  8., -1., -1., -1., -1., -1.,  3.,  6., -1., -1., -1.,
         8., -1.,  8., -1., -1., -1.,  5.,  6.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1., -1., -1.,  8.,  8.,  8., -1., -1., -1., -1.,  8.,  3.,
         8.,  3.,  3.,  3.,  6.,  6.,  8.,  8., -1., -1.,  8., -1., -1., -1.,
        -1., -1.,  3.,  6.,  8.,  8.,  8., -1., -1., -1.,  8.,  8.,  8.,  8.,
        -1., -1.,  3.,  6., -1., -1., -1., -1., -1.,  8., -1., -1., -1.,  8.,
        -1., -1., -1., -1.,  3.,  5.,  3.,  5.,  6.,  8.,  8.,  3.,  6.,  8.,
        -1., -1., -1., -1., -1., -1., -1., -1.,  6.,  8., -1., -1., -1., -1.,
         8., -1., -1., -1., -1.,  5.,  6., -1., -1., -1., -1., -1., -1., -1.,
         3.,  6.,  6.,  8.,  8., -1., -1., -1., -1., -1., -1., -1.,  3.,  6.,
         8., -1., -1., -1.,  8., -1.,  5.,  8.,  3.,  5.,  6., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  6., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1.,  6., -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1., -1.,
        -1., -1.,  8.,  8., -1.,  6., -1., -1., -1., -1., -1., -1.,  8., -1.,
        -1.,  6., -1., -1.,  8.,  3.,  3.,  8., -1.,  8., -1., -1., -1.,  8.,
        -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1., -1.,  6.]), 'best match scores': tensor([1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.9995, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0961, 0.9978, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9954, 0.9099, 0.5069, 0.0901,
        0.9922, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.9999, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9997, 1.0000, 0.1542, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9010, 0.0000, 0.0000,
        0.9930, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0839, 0.0000,
        0.0000, 0.0000, 0.9966, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.2655, 0.9978, 1.0000, 0.0676, 1.0000, 1.0000, 0.9940, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9924,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0721, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9920, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.9986, 0.2398, 0.9534, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9813, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.1810, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.1072, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9856, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.9999, 0.9786, 1.0000, 1.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9421, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000]), 'num_pos': 223}
2020-12-06 13:30:28,105 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.125561
2020-12-06 13:30:28,108 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./_best_acc_r1.pth
2020-12-06 13:30:32,524 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: _best_acc_r1
2020-12-06 13:31:47,516 maskrcnn_benchmark.trainer INFO: eta: 3:45:39  iter: 100  loss: 15.9162 (21.4618)  loss_classifier: 0.9391 (1.2012)  loss_box_reg: 1.0332 (1.7380)  loss_objectness: 12.9288 (12.4769)  loss_rpn_box_reg: 0.7076 (6.0457)  time: 3.7242 (4.6686)  data: 0.1361 (1.0760)  lr: 0.000000  max mem: 1313
2020-12-06 13:33:01,870 maskrcnn_benchmark.trainer INFO: eta: 3:36:29  iter: 120  loss: 18.0142 (21.3335)  loss_classifier: 1.0603 (1.2133)  loss_box_reg: 1.8576 (1.7839)  loss_objectness: 12.3457 (12.4522)  loss_rpn_box_reg: 1.6437 (5.8842)  time: 3.7186 (4.5102)  data: 0.1291 (0.9185)  lr: 0.000000  max mem: 1313
2020-12-06 13:33:01,872 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 13:33:01,923 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 13:33:44,047 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.123993 (1.4525514717759758 s / img per device, on 1 devices)
2020-12-06 13:33:44,047 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.456525 (1.3950525727765313 s / img per device, on 1 devices)
2020-12-06 13:33:44,047 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 13:33:45,793 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 13:33:45,793 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.5893e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.8676e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.1027e-03, 0.0000e+00, 0.0000e+00,
        2.5186e-02, 9.8877e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.3878e-01, 7.7865e-02, 3.2345e-03, 1.9781e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.4029e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3927e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.2960e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9960e-02,
        3.8555e-03, 4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.4397e-02, 3.5749e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.4890e-02,
        1.9917e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7649e-02, 3.7973e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3354e-02, 0.0000e+00, 0.0000e+00,
        3.9426e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8., -1., -1., -1., -1.,  3.,  5.,  6., -1., -1., -1.,
         8., -1.,  8., -1., -1.,  6.,  6.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1., -1.,  6., -1.,  3.,  8., -1., -1., -1., -1.,  8., -1.,
        -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1., -1., -1.,  3.,  8.,
         3.,  6.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1.,  3.,
         8.,  3., -1., -1., -1., -1.,  8., -1.,  3.,  6.,  3.,  6.,  6., -1.,
        -1., -1., -1., -1., -1., -1., -1.,  6.,  8., -1., -1.,  3., -1.,  3.,
        -1., -1.,  3.,  5.,  6.,  8.,  6.,  8.,  8., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1.,  6., -1., -1., -1., -1.,  8., -1., -1., -1.,  3.,
         5.,  6., -1., -1., -1., -1., -1., -1., -1., -1.,  3.,  8.,  8.,  3.,
        -1., -1., -1., -1., -1., -1., -1., -1.,  3.,  8., -1., -1., -1., -1.,
        -1., -1.,  8.,  3.,  5.,  5., -1.,  8., -1., -1., -1.,  8., -1.,  6.,
         8., -1., -1., -1., -1., -1., -1., -1., -1.,  5.,  6., -1.,  8., -1.,
        -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,  8.,  8.,  3.,
         6., -1., -1.,  8., -1., -1., -1., -1., -1.,  5.,  6., -1.,  3.,  8.,
         3.,  3.,  8., -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1.,  3.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.9972, 0.0637, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.9962, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.7225, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.1315, 0.9988, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.9979, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.9997, 0.9815, 0.9541,
        0.9999, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.9113, 0.0000, 0.0000, 0.0887, 0.0000, 0.3300, 0.0000,
        0.0000, 1.0000, 0.1116, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9997, 0.9986, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.5299, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.9002, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9993, 0.9299, 0.1450, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.0000, 0.9989, 0.9999, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9983, 0.9686]), 'num_pos': 232}
2020-12-06 13:33:45,819 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.090517
2020-12-06 13:35:00,545 maskrcnn_benchmark.trainer INFO: eta: 3:44:40  iter: 140  loss: 18.1500 (21.1104)  loss_classifier: 0.7594 (1.2565)  loss_box_reg: 2.2197 (1.8217)  loss_objectness: 12.6791 (12.4878)  loss_rpn_box_reg: 1.2231 (5.5443)  time: 3.7301 (4.7135)  data: 0.1374 (1.1210)  lr: 0.000000  max mem: 1313
2020-12-06 13:36:15,003 maskrcnn_benchmark.trainer INFO: eta: 3:37:14  iter: 160  loss: 16.4757 (20.7885)  loss_classifier: 0.7020 (1.2209)  loss_box_reg: 0.9699 (1.7749)  loss_objectness: 13.1701 (12.5111)  loss_rpn_box_reg: 0.3440 (5.2816)  time: 3.7205 (4.5897)  data: 0.1305 (0.9975)  lr: 0.000000  max mem: 1313
2020-12-06 13:36:15,005 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 13:36:15,058 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 13:36:57,374 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.316610 (1.4591934516512115 s / img per device, on 1 devices)
2020-12-06 13:36:57,375 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.649959 (1.4017227271507526 s / img per device, on 1 devices)
2020-12-06 13:36:57,375 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 13:36:59,192 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 13:36:59,192 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.5900e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.0524e-03, 0.0000e+00, 0.0000e+00,
        6.6052e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        4.6141e-02, 3.2677e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.1842e-01, 9.0857e-02, 3.2365e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3927e-02, 3.6315e-03, 2.6424e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.2199e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.4054e-02, 4.0749e-02, 1.9771e-02, 3.8555e-03,
        4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.3055e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 4.0946e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7291e-02,
        3.7507e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        5.6418e-03, 0.0000e+00, 0.0000e+00, 6.7832e-03, 0.0000e+00, 0.0000e+00,
        2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8,
        8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8., -1., -1., -1., -1., -1.,  3.,  3., -1., -1., -1.,
         8., -1.,  8., -1., -1.,  6., -1.,  3.,  8., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1.,  6., -1.,  8.,  8., -1., -1., -1., -1.,  8., -1.,
        -1., -1., -1.,  5.,  6., -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,
         6.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1.,  6., -1.,
         3.,  8., -1., -1., -1.,  8.,  8., -1., -1., -1.,  3.,  6.,  6., -1.,
        -1., -1., -1., -1., -1., -1., -1.,  6.,  8., -1., -1., -1., -1.,  8.,
        -1., -1., -1.,  3.,  6.,  8., -1.,  3.,  8., -1., -1., -1., -1., -1.,
        -1., -1., -1.,  3.,  6., -1., -1., -1., -1.,  8., -1.,  8., -1.,  3.,
        -1.,  3.,  8.,  8.,  8., -1., -1., -1., -1., -1., -1.,  3.,  6.,  8.,
         8., -1., -1., -1.,  8., -1.,  8.,  8.,  3.,  5.,  6., -1., -1., -1.,
         8., -1.,  8., -1., -1.,  6., -1., -1.,  8., -1., -1., -1., -1., -1.,
        -1.,  6., -1., -1., -1., -1.,  8.,  8., -1., -1., -1., -1., -1., -1.,
        -1., -1.,  8.,  8., -1., -1., -1., -1.,  8., -1., -1., -1.,  3.,  3.,
         3.,  6., -1.,  3.,  8.,  3.,  3.,  8., -1., -1., -1., -1., -1.,  8.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9988, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.9999, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.9999,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.8134, 0.0000,
        0.0000, 1.0000, 1.0000, 0.1907, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9993,
        0.8945, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9957, 0.0000,
        0.0000, 0.0000, 0.7062, 1.0000, 1.0000, 0.0000, 0.3063, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9958, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.9994,
        0.0000, 1.0000, 1.0000, 0.9912, 0.7694, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.9997, 0.9572, 0.0941, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 1.0000, 1.0000, 0.6669, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.5497, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9924, 0.9705, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0962, 0.9672, 1.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 0.9874, 0.9943, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000]), 'num_pos': 223}
2020-12-06 13:36:59,221 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.121076
2020-12-06 13:38:14,391 maskrcnn_benchmark.trainer INFO: eta: 3:42:55  iter: 180  loss: 17.4746 (20.5098)  loss_classifier: 0.5638 (1.2022)  loss_box_reg: 1.8095 (1.7759)  loss_objectness: 13.3333 (12.6216)  loss_rpn_box_reg: 0.5876 (4.9101)  time: 3.7322 (4.7430)  data: 0.1344 (1.1473)  lr: 0.000000  max mem: 1313
2020-12-06 13:39:28,948 maskrcnn_benchmark.trainer INFO: eta: 3:36:36  iter: 200  loss: 18.7585 (20.4910)  loss_classifier: 0.6165 (1.1937)  loss_box_reg: 1.2111 (1.7332)  loss_objectness: 12.9275 (12.6145)  loss_rpn_box_reg: 1.3407 (4.9496)  time: 3.7250 (4.6415)  data: 0.1353 (1.0459)  lr: 0.000000  max mem: 1313
2020-12-06 13:39:28,950 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 13:39:29,001 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 13:40:11,249 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.247890 (1.4568237765081997 s / img per device, on 1 devices)
2020-12-06 13:40:11,249 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.594652 (1.3998155840511979 s / img per device, on 1 devices)
2020-12-06 13:40:11,249 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 13:40:12,978 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 13:40:12,978 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 3.6216e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 9.5415e-03,
        0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        9.2235e-03, 0.0000e+00, 0.0000e+00, 2.5186e-02, 3.6216e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2536e-01,
        6.7172e-02, 3.0925e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0258e-02,
        0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.3927e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.8497e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.6170e-02, 3.9182e-03, 4.0319e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.3055e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.6258e-02, 2.9747e-02, 1.9917e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5842e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        9.8650e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        6.8844e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 7,
        7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 5, 7,
        7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8,
        8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  3., -1., -1., -1.,
        -1., -1., -1., -1., -1.,  6.,  3.,  3.,  8., -1., -1., -1., -1., -1.,
        -1., -1., -1.,  6.,  8., -1.,  8.,  8., -1., -1., -1., -1.,  8., -1.,
         8., -1., -1., -1.,  6.,  3.,  3.,  8., -1., -1.,  8., -1., -1., -1.,
        -1., -1.,  6.,  8.,  3.,  8.,  8., -1., -1., -1., -1.,  8., -1.,  8.,
        -1., -1.,  6.,  6., -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1.,
        -1., -1.,  8., -1.,  8., -1., -1., -1.,  3.,  3.,  8., -1.,  8.,  8.,
        -1., -1.,  8., -1., -1., -1., -1., -1., -1.,  6., -1., -1., -1., -1.,
         8., -1., -1., -1., -1.,  3.,  6., -1., -1., -1., -1., -1., -1., -1.,
        -1.,  6., -1.,  8.,  8., -1., -1., -1., -1., -1., -1., -1.,  6.,  8.,
         8., -1., -1., -1., -1., -1., -1.,  8.,  3., -1.,  5., -1., -1., -1.,
         8., -1.,  8., -1., -1.,  6., -1., -1., -1., -1., -1.,  3.,  5.,  6.,
         8.,  8., -1.,  8., -1., -1., -1.,  8.,  8., -1., -1., -1., -1., -1.,
        -1., -1.,  8., -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1.,
         6.,  8., -1., -1.,  8., -1.,  3.,  3., -1., -1., -1., -1., -1.,  8.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.8178, 0.9996, 0.6754, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.9236, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9428, 0.9781, 0.9995,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0953, 1.0000, 1.0000, 0.0000, 1.0000, 0.9971, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9989,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9999, 0.9997, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.3824, 0.0000, 0.1252, 0.9968, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9793, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.2749, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.9999, 0.0000, 1.0000, 0.0000, 0.0000, 0.9996, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.1519, 1.0000, 1.0000, 0.8100, 0.9997, 0.0000,
        0.9848, 0.0000, 0.0000, 0.0000, 0.1838, 0.0986, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9995, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.3780,
        0.0000, 0.0000, 1.0000, 0.0000, 0.8604, 0.7214, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000]), 'num_pos': 223}
2020-12-06 13:40:13,003 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.116592
2020-12-06 13:41:27,721 maskrcnn_benchmark.trainer INFO: eta: 3:40:31  iter: 220  loss: 18.6069 (20.5196)  loss_classifier: 0.4726 (1.1887)  loss_box_reg: 1.7787 (1.7355)  loss_objectness: 12.0613 (12.6067)  loss_rpn_box_reg: 1.0033 (4.9886)  time: 3.7369 (4.7594)  data: 0.1360 (1.1635)  lr: 0.000000  max mem: 1313
2020-12-06 13:42:42,343 maskrcnn_benchmark.trainer INFO: eta: 3:34:59  iter: 240  loss: 16.2964 (20.3700)  loss_classifier: 0.6093 (1.1661)  loss_box_reg: 1.2539 (1.7107)  loss_objectness: 12.4580 (12.6028)  loss_rpn_box_reg: 0.8893 (4.8904)  time: 3.7368 (4.6737)  data: 0.1341 (1.0779)  lr: 0.000000  max mem: 1313
2020-12-06 13:42:42,345 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 13:42:42,398 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 13:43:24,650 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.251414 (1.4569453206555596 s / img per device, on 1 devices)
2020-12-06 13:43:24,650 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.578893 (1.3992721705601132 s / img per device, on 1 devices)
2020-12-06 13:43:24,650 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 13:43:26,389 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 13:43:26,389 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0259, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0232, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0051, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0021, 0.0000, 0.0000,
        0.0264, 0.0036, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0041, 0.0000, 0.0000,
        0.1038, 0.0252, 0.0033, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1274, 0.0034, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0103, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0239, 0.0037, 0.0011, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0129, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0200, 0.0039, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0231, 0.0038,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0099, 0.0000, 0.0000, 0.0039, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4]), 'best match labels': tensor([-1., -1., -1.,  8., -1., -1.,  8., -1., -1., -1.,  3., -1., -1., -1.,
         8., -1.,  8., -1.,  6.,  8., -1.,  3.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1., -1.,  6., -1.,  3.,  8., -1., -1., -1., -1.,  8., -1.,
         8., -1.,  3.,  6.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  6.,
         3.,  3.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
         8.,  8., -1., -1., -1., -1.,  8.,  8.,  8., -1., -1.,  3.,  6., -1.,
        -1., -1., -1., -1., -1., -1., -1.,  6.,  8., -1., -1., -1., -1., -1.,
        -1.,  3.,  3.,  5.,  6.,  8., -1., -1.,  8., -1., -1., -1., -1., -1.,
        -1., -1., -1.,  6.,  8., -1., -1., -1., -1.,  8., -1.,  8.,  3.,  3.,
         5.,  6.,  3.,  8.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,  8.,
         8., -1., -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1., -1.,
         8., -1.,  8., -1.,  6.,  8., -1., -1.,  8., -1., -1., -1., -1., -1.,
         3.,  6., -1., -1., -1., -1., -1.,  8., -1., -1.,  6., -1., -1., -1.,
        -1., -1.,  8., -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1.,
        -1.,  6., -1.,  8.,  8.,  3.,  5.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.9917, 1.0000, 0.0000, 0.9719, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9960, 0.0000, 0.9995, 0.9628,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.9938,
        1.0000, 0.1538, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.9763, 0.5043, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9991, 0.9872,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.4746, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.4188, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1933, 0.9997,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9972, 0.0000, 1.0000, 0.9986, 0.9860,
        0.0692, 1.0000, 0.1887, 0.7995, 0.9997, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.5118, 1.0000, 0.0000, 0.0000,
        0.9191, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0557, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9601,
        0.0000, 0.9998, 0.1552, 1.0000, 0.1442, 1.0000]), 'num_pos': 204}
2020-12-06 13:43:26,413 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.137255
2020-12-06 13:43:26,415 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./_best_acc_r1.pth
2020-12-06 13:43:30,866 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: _best_acc_r1
2020-12-06 13:44:45,469 maskrcnn_benchmark.trainer INFO: eta: 3:38:38  iter: 260  loss: 18.2106 (20.2043)  loss_classifier: 0.6412 (1.1548)  loss_box_reg: 1.5325 (1.6953)  loss_objectness: 12.3574 (12.6063)  loss_rpn_box_reg: 0.6609 (4.7479)  time: 3.7258 (4.7878)  data: 0.1340 (1.1922)  lr: 0.000000  max mem: 1313
2020-12-06 13:46:00,032 maskrcnn_benchmark.trainer INFO: eta: 3:33:36  iter: 280  loss: 20.0157 (20.2721)  loss_classifier: 0.6821 (1.1701)  loss_box_reg: 1.1953 (1.6842)  loss_objectness: 10.7821 (12.5238)  loss_rpn_box_reg: 1.4123 (4.8940)  time: 3.7247 (4.7121)  data: 0.1336 (1.1166)  lr: 0.000000  max mem: 1313
2020-12-06 13:46:00,034 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 13:46:00,085 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 13:46:42,306 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.221092 (1.4558997400875748 s / img per device, on 1 devices)
2020-12-06 13:46:42,306 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.587517 (1.399569536077565 s / img per device, on 1 devices)
2020-12-06 13:46:42,306 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 13:46:43,965 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 13:46:43,965 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0286, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0050, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000,
        0.0264, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0101, 0.0000, 0.0000, 0.0041, 0.0000, 0.0000, 0.0777,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.1069, 0.0720, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0103, 0.0000, 0.0000, 0.0720, 0.0239,
        0.0035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0095, 0.0000, 0.0000, 0.0200, 0.0039, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0231, 0.0038, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0092, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207, 0.0041, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0038, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0200, 0.0000,
        0.0000, 0.0054, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 5, 7, 7,
        4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8,
        8, 8]), 'best match labels': tensor([-1., -1., -1.,  8., -1., -1., -1., -1., -1., -1.,  3., -1., -1., -1.,
        -1., -1., -1., -1., -1.,  6., -1.,  3.,  8., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1.,  6.,  3.,  8.,  8., -1., -1., -1., -1.,  8., -1.,
        -1., -1., -1., -1.,  6., -1., -1., -1., -1., -1.,  8., -1., -1., -1.,
         8.,  8.,  8.,  3.,  6.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,
        -1.,  5.,  6., -1., -1., -1., -1., -1.,  8., -1., -1., -1.,  8., -1.,
        -1.,  8., -1., -1., -1., -1., -1., -1.,  3.,  8.,  3.,  8.,  8., -1.,
        -1., -1., -1.,  8.,  8.,  8., -1., -1., -1.,  6., -1., -1., -1., -1.,
        -1.,  8., -1., -1., -1.,  3.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1.,  8., -1., -1.,  5., -1., -1., -1.,  8., -1.,  8., -1., -1., -1.,
        -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
         8.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  8., -1., -1.,
        -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1.,  3.,  8.,  8.,  3.,
         8.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.9480, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9336, 0.0000, 0.7167, 0.9985, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.4340, 1.0000, 0.9998,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.8895, 0.0000,
        0.0000, 0.0000, 0.9667, 0.1519, 1.0000, 0.9915, 0.7537, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.3239, 0.0000, 0.0000, 0.0000, 0.9999,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0675, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0959, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.5895, 1.0000, 0.0582, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.9888, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.7103, 0.0000, 0.0000, 0.0000,
        0.9484, 1.0000, 0.9999, 0.9211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.4624, 0.0000, 0.0000, 0.0000, 0.9612,
        0.0000, 0.2743, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9835, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9967, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9992, 0.0528,
        0.9999, 0.4779, 1.0000, 1.0000, 0.0000, 0.0000, 0.9999, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9955]), 'num_pos': 194}
2020-12-06 13:46:43,986 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.113402
2020-12-06 13:47:58,490 maskrcnn_benchmark.trainer INFO: eta: 3:35:40  iter: 300  loss: 17.2028 (20.1064)  loss_classifier: 0.8314 (1.1647)  loss_box_reg: 0.9629 (1.6558)  loss_objectness: 11.9524 (12.5171)  loss_rpn_box_reg: 1.1273 (4.7687)  time: 3.7228 (4.7928)  data: 0.1313 (1.1976)  lr: 0.000000  max mem: 1313
2020-12-06 13:49:13,117 maskrcnn_benchmark.trainer INFO: eta: 3:31:06  iter: 320  loss: 16.9551 (20.0130)  loss_classifier: 0.6808 (1.1461)  loss_box_reg: 1.6517 (1.6598)  loss_objectness: 12.4448 (12.5332)  loss_rpn_box_reg: 0.9230 (4.6740)  time: 3.7320 (4.7265)  data: 0.1353 (1.1313)  lr: 0.000000  max mem: 1313
2020-12-06 13:49:13,119 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 13:49:13,171 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 13:49:55,403 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.231743 (1.4562670115766854 s / img per device, on 1 devices)
2020-12-06 13:49:55,403 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.596017 (1.3998626511672447 s / img per device, on 1 devices)
2020-12-06 13:49:55,403 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 13:49:57,144 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 13:49:57,145 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.5893e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 7.1182e-03, 0.0000e+00, 0.0000e+00, 4.9891e-02,
        0.0000e+00, 0.0000e+00, 2.6365e-02, 3.6216e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.0736e-02, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00,
        0.0000e+00, 5.5394e-02, 2.3713e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0689e-01, 7.0684e-02, 3.5162e-02,
        3.2345e-03, 2.9148e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3908e-02, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.5133e-02, 2.7858e-02,
        3.5240e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.2574e-02, 0.0000e+00, 0.0000e+00, 5.2123e-02, 1.9960e-02, 3.8555e-03,
        4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.0865e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6653e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.4799e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.0565e-02, 3.7184e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6625e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00, 6.7378e-03, 0.0000e+00,
        0.0000e+00, 3.0523e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.1858e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 7, 7, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8,
        8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8,
        8, 8]), 'best match labels': tensor([-1., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1.,  8., -1., -1., -1., -1.,  3.,  8.,  3.,  8.,  3., -1., -1.,
        -1., -1.,  8., -1.,  8., -1., -1., -1.,  6.,  3.,  8.,  8.,  3.,  8.,
         8., -1., -1., -1., -1.,  8.,  8., -1., -1., -1., -1.,  6., -1., -1.,
        -1., -1., -1., -1., -1., -1.,  8.,  8., -1., -1., -1.,  8.,  8.,  8.,
        -1., -1.,  3.,  8.,  8.,  6.,  8.,  8., -1., -1.,  8., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1.,  8.,  8.,  8., -1.,  3.,
         5., -1., -1., -1., -1., -1., -1., -1., -1.,  8.,  6.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8.,  8.,  3., -1.,  5., -1., -1., -1.,  8.,
        -1.,  8., -1.,  3.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1.,
         6., -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1.,
        -1.,  8.,  8., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1., -1.,
        -1., -1.,  8.,  8.,  3.,  3.,  8., -1., -1., -1., -1., -1.,  8., -1.,
        -1., -1., -1.,  8., -1., -1., -1., -1., -1., -1., -1., -1.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.9986, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9946, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9977, 0.9941, 1.0000, 1.0000, 0.9470, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0639, 1.0000, 0.9993, 0.0806, 0.2711, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.1899, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9969, 0.9355, 0.0000, 0.0000,
        0.0721, 1.0000, 1.0000, 0.4176, 0.9892, 0.9999, 0.0000, 0.0000, 0.9993,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.9999, 0.2946,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.6736, 0.3645, 0.9873, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.5194, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 1.0000, 0.0000, 0.9999, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.3424, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.5723, 0.5643, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9993,
        1.0000, 0.7024, 0.9979, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9949, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'num_pos': 194}
2020-12-06 13:49:57,167 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.154639
2020-12-06 13:49:57,170 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./_best_acc_r1.pth
2020-12-06 13:50:01,209 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: _best_acc_r1
2020-12-06 13:51:16,175 maskrcnn_benchmark.trainer INFO: eta: 3:33:15  iter: 340  loss: 14.4650 (19.7929)  loss_classifier: 0.5317 (1.1348)  loss_box_reg: 1.2872 (1.6360)  loss_objectness: 12.5866 (12.5234)  loss_rpn_box_reg: 0.3554 (4.4987)  time: 3.7344 (4.8104)  data: 0.1367 (1.2151)  lr: 0.000000  max mem: 1313
2020-12-06 13:52:31,187 maskrcnn_benchmark.trainer INFO: eta: 3:29:03  iter: 360  loss: 15.6384 (19.6299)  loss_classifier: 0.5665 (1.1240)  loss_box_reg: 1.0353 (1.6148)  loss_objectness: 12.2614 (12.5061)  loss_rpn_box_reg: 0.6075 (4.3851)  time: 3.7322 (4.7515)  data: 0.1334 (1.1551)  lr: 0.000000  max mem: 1313
2020-12-06 13:52:31,188 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 13:52:31,239 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 13:53:13,499 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.259308 (1.4572175042382602 s / img per device, on 1 devices)
2020-12-06 13:53:13,499 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.605285 (1.4001822471618652 s / img per device, on 1 devices)
2020-12-06 13:53:13,499 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 13:53:15,223 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 13:53:15,223 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0637, 0.0259, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0232, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0003, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0122, 0.0000, 0.0000,
        0.0264, 0.0036, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0100, 0.0000, 0.0000, 0.0178, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0103, 0.0000, 0.0000,
        0.0804, 0.0517, 0.0233, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1069, 0.0179, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0365, 0.0000, 0.0000, 0.0167,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0486, 0.0236, 0.0035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0043, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0200, 0.0039, 0.0025, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0510, 0.0197,
        0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0398,
        0.0040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0123,
        0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0176, 0.0000, 0.0000, 0.0059, 0.0000, 0.0000, 0.0038, 0.0028, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8., -1., -1.,  8., -1., -1.,  8., -1., -1.,  3.,  6., -1., -1., -1.,
         8., -1.,  8., -1., -1.,  6.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1., -1., -1.,  8.,  8.,  8., -1., -1., -1., -1.,  8., -1.,
         8., -1., -1.,  5.,  6., -1., -1., -1., -1., -1., -1., -1.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1.,  8.,  8.,  8.,  8., -1., -1.,  3.,  6., -1.,
        -1., -1., -1., -1., -1.,  3.,  3.,  8.,  8., -1., -1., -1., -1.,  3.,
         3.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1., -1.,  3.,  6.,  8., -1., -1., -1., -1.,  8.,  8.,  8., -1., -1.,
        -1.,  6., -1., -1., -1., -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,
        -1., -1., -1., -1., -1., -1.,  3.,  3.,  8.,  8., -1., -1., -1., -1.,
        -1., -1.,  8.,  3., -1., -1., -1.,  8., -1.,  8., -1.,  8., -1.,  6.,
         8., -1., -1.,  8., -1., -1., -1., -1., -1.,  6.,  8., -1., -1., -1.,
        -1.,  8.,  3.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8., -1.,
         6., -1., -1.,  8., -1., -1., -1., -1., -1.,  5.,  6.,  3.,  8.,  8.,
         3.,  6.,  8., -1.,  8., -1., -1., -1., -1.,  8., -1.,  8., -1., -1.,
         8., -1., -1., -1., -1., -1., -1.,  6.]), 'best match scores': tensor([1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.5530, 0.0000,
        0.0000, 0.9521, 1.0000, 1.0000, 0.5069, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1716, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9989, 0.0000, 1.0000, 0.0000, 0.0000,
        0.9968, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.2375, 0.9999, 1.0000, 0.9998, 0.0000, 0.0000, 0.9968, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9714, 1.0000, 0.9999, 1.0000, 0.9826, 0.7289,
        0.0000, 0.0000, 0.0000, 1.0000, 0.3253, 0.9804, 1.0000, 0.0000, 0.0000,
        0.9970, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.6724,
        0.0960, 0.1535, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.8794, 1.0000,
        1.0000, 0.2280, 0.7720, 1.0000, 1.0000, 0.5327, 1.0000, 0.9938, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.2540, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.9931, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.4218, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9952, 0.1163, 0.8464, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.7481, 0.0000, 0.0000, 0.0000, 0.9999,
        0.0000, 1.0000, 0.0000, 0.9852, 0.0000, 0.8487, 1.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.8045, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9153, 0.5956, 0.1079, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0844, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.7602, 0.9964, 0.2688, 0.3717, 0.0874, 0.9991, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.5463]), 'num_pos': 232}
2020-12-06 13:53:15,249 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.202586
2020-12-06 13:53:15,252 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./_best_acc_r1.pth
2020-12-06 13:53:19,121 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: _best_acc_r1
2020-12-06 13:54:33,765 maskrcnn_benchmark.trainer INFO: eta: 3:30:38  iter: 380  loss: 14.4103 (19.3810)  loss_classifier: 0.3310 (1.0942)  loss_box_reg: 0.6441 (1.5737)  loss_objectness: 12.8108 (12.5114)  loss_rpn_box_reg: 0.0000 (4.2016)  time: 3.7235 (4.8240)  data: 0.1322 (1.2279)  lr: 0.000000  max mem: 1313
2020-12-06 13:55:49,303 maskrcnn_benchmark.trainer INFO: eta: 3:26:46  iter: 400  loss: 14.8863 (19.2685)  loss_classifier: 0.4149 (1.0922)  loss_box_reg: 0.6126 (1.5532)  loss_objectness: 12.5558 (12.5110)  loss_rpn_box_reg: 0.4829 (4.1121)  time: 3.7488 (4.7716)  data: 0.1413 (1.1743)  lr: 0.000000  max mem: 1313
2020-12-06 13:55:49,305 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 13:55:49,355 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 13:56:31,642 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.287063 (1.4581745904067467 s / img per device, on 1 devices)
2020-12-06 13:56:31,643 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.656376 (1.4019439960348195 s / img per device, on 1 devices)
2020-12-06 13:56:31,643 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 13:56:33,373 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 13:56:33,374 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 5.4376e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 3.6216e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3282e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.0031e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.3238e-03, 0.0000e+00, 0.0000e+00,
        7.9425e-02, 7.2661e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.3285e-01, 4.0593e-02, 2.8029e-02, 7.8648e-03,
        3.3105e-03, 2.9615e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.8762e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 8.3133e-02, 2.3927e-02, 3.5240e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1157e-02,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.0896e-02,
        1.9771e-02, 3.8555e-03, 4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3055e-02, 3.7950e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7812e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.2050e-02, 3.7918e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  3., -1., -1., -1.,
         8., -1.,  8., -1.,  6.,  8.,  5.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1., -1., -1.,  5.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  8., -1.,
         8., -1.,  3.,  5.,  6., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,
         8.,  8.,  3., -1., -1., -1., -1., -1., -1., -1., -1.,  8.,  8., -1.,
         3.,  8., -1., -1., -1., -1.,  8.,  8., -1., -1.,  3.,  3.,  6., -1.,
        -1., -1., -1., -1., -1.,  3.,  8.,  8.,  8., -1., -1.,  8., -1.,  8.,
         8.,  3., -1.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1.,  8., -1., -1., -1., -1.,  8.,  8.,  8., -1., -1.,
         3.,  6., -1., -1., -1., -1., -1.,  8., -1., -1.,  3.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,  8., -1., -1., -1.,  8.,
        -1., -1.,  8.,  3., -1.,  5., -1., -1., -1.,  8., -1.,  8., -1.,  6.,
         8., -1., -1., -1., -1., -1., -1., -1.,  3.,  6.,  8., -1., -1., -1.,
        -1., -1., -1., -1., -1.,  8., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,
         8., -1., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8., -1., -1.,  8.,
        -1.,  3.,  8., -1., -1., -1., -1., -1.,  8.,  8., -1., -1., -1., -1.,
         8., -1., -1., -1.,  6.,  8.,  8.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9998, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000,
        0.0590, 1.0000, 0.7286, 0.1978, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9954, 1.0000, 0.9996, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.8981,
        0.9997, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0558, 1.0000, 1.0000,
        1.0000, 1.0000, 0.1303, 0.0912, 0.4216, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.6234, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0723,
        1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.3435,
        1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.6842, 0.9673, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9987,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0949, 1.0000, 0.9580, 0.0000, 0.0000,
        0.9373, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.9998, 0.6973, 0.9552, 0.9962, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.1291, 0.0000, 0.0000, 1.0000, 0.5597, 0.0000, 0.0000, 0.0000,
        0.9473, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.9942, 0.0000, 1.0000, 0.0000, 0.9742, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0609, 1.0000, 1.0000, 1.0000, 1.0000, 0.9997, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.5878, 1.0000, 1.0000, 1.0000, 0.9993,
        0.0000, 0.0000, 0.3250, 0.0000, 0.8164, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1988, 0.0641, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0888, 1.0000, 0.9999, 0.9970]), 'num_pos': 232}
2020-12-06 13:56:33,400 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.224138
2020-12-06 13:56:33,402 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./_best_acc_r1.pth
2020-12-06 13:56:37,877 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: _best_acc_r1
2020-12-06 13:57:52,651 maskrcnn_benchmark.trainer INFO: eta: 3:28:02  iter: 420  loss: 15.3854 (19.1565)  loss_classifier: 0.4442 (1.0757)  loss_box_reg: 0.6651 (1.5179)  loss_objectness: 12.7040 (12.5339)  loss_rpn_box_reg: 0.1769 (4.0290)  time: 3.7282 (4.8381)  data: 0.1372 (1.2409)  lr: 0.000000  max mem: 1313
2020-12-06 13:59:07,525 maskrcnn_benchmark.trainer INFO: eta: 3:24:18  iter: 440  loss: 16.5636 (19.1348)  loss_classifier: 0.7054 (1.0810)  loss_box_reg: 0.7187 (1.5003)  loss_objectness: 12.5051 (12.5351)  loss_rpn_box_reg: 0.5013 (4.0184)  time: 3.7295 (4.7883)  data: 0.1342 (1.1913)  lr: 0.000000  max mem: 1313
2020-12-06 13:59:07,527 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 13:59:07,579 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 13:59:49,823 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.243509 (1.4566727342276737 s / img per device, on 1 devices)
2020-12-06 13:59:49,823 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.575448 (1.3991533641157479 s / img per device, on 1 devices)
2020-12-06 13:59:49,823 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 13:59:51,564 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 13:59:51,565 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.5893e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3187e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 6.2681e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.7268e-02, 0.0000e+00, 0.0000e+00,
        1.8667e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2941e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.8227e-02,
        1.5751e-02, 1.3073e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        6.8566e-02, 2.5186e-02, 3.7369e-03, 3.2062e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.1111e-01, 1.2698e-01, 3.8685e-02, 2.9615e-03,
        2.7094e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.6733e-02, 3.5448e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6843e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9960e-02,
        3.8555e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0939e-02, 3.8139e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.2517e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        3.9426e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        7.6256e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8., -1., -1., -1., -1., -1.,  3.,  8., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
         5.,  6.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  8., -1.,
        -1., -1., -1.,  3.,  8., -1., -1., -1., -1., -1.,  8., -1.,  8.,  8.,
         8.,  8.,  8., -1.,  3.,  3.,  6.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1.,  8.,  8.,  8.,  8., -1.,  3.,  3.,  6., -1.,
        -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1., -1., -1.,  3.,  3.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8., -1.,  3.,
         6.,  8., -1., -1., -1., -1., -1.,  8., -1.,  3.,  8.,  3.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8., -1.,  8.,  8.,  8., -1., -1., -1., -1.,
        -1., -1.,  8.,  5.,  8.,  8., -1., -1., -1.,  8., -1.,  8., -1.,  8.,
         8., -1.,  3.,  8.,  3.,  3.,  5.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1., -1.,  3.,  5.,  6.,  8., -1., -1.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  3., -1., -1.,
         8., -1.,  3.,  3.,  6.,  8.,  8.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.9696, 0.9824, 0.9633, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.9994, 0.3392, 0.9900, 0.5002, 1.0000, 0.9978, 1.0000, 0.3993,
        0.0000, 0.0000, 0.0000, 0.0000, 0.1717, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 0.9026, 0.9459, 1.0000, 0.0000, 0.7387, 0.1141, 0.4939,
        0.7104, 0.7277, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 0.9985,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0568, 0.9933, 0.0736, 0.0000, 0.9997,
        0.9606, 0.9987, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1052, 1.0000,
        1.0000, 1.0000, 0.0572, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.1071, 1.0000, 0.9978, 0.9563, 0.0628, 0.9977, 0.0917, 0.9967, 0.0000,
        0.0000, 0.0000, 0.1727, 0.9300, 1.0000, 1.0000, 0.9695, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9964, 0.0000, 1.0000,
        1.0000, 0.7781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 0.9974, 0.9999, 0.4949, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 0.9026, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9998, 0.1295, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.9997, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.9994,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9964, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9499, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9979, 1.0000, 1.0000, 1.0000, 0.9994, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9966,
        0.0000, 0.0000, 0.1906, 0.9952, 0.1329, 0.4452, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 1.0000, 0.1573, 0.0629, 1.0000, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 13:59:51,591 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.323276
2020-12-06 13:59:51,594 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./_best_acc_r1.pth
2020-12-06 13:59:55,853 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: _best_acc_r1
2020-12-06 14:01:10,684 maskrcnn_benchmark.trainer INFO: eta: 3:25:13  iter: 460  loss: 16.4700 (19.1401)  loss_classifier: 0.9141 (1.0950)  loss_box_reg: 1.0132 (1.4921)  loss_objectness: 12.0961 (12.5215)  loss_rpn_box_reg: 0.5947 (4.0315)  time: 3.7359 (4.8479)  data: 0.1412 (1.2509)  lr: 0.000000  max mem: 1313
2020-12-06 14:02:26,012 maskrcnn_benchmark.trainer INFO: eta: 3:21:43  iter: 480  loss: 15.4668 (19.0720)  loss_classifier: 0.4109 (1.0957)  loss_box_reg: 0.9248 (1.4778)  loss_objectness: 13.1679 (12.5358)  loss_rpn_box_reg: 0.4777 (3.9628)  time: 3.7455 (4.8028)  data: 0.1374 (1.2045)  lr: 0.000000  max mem: 1313
2020-12-06 14:02:26,014 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:02:26,065 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:03:08,488 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.422824 (1.4628560049780484 s / img per device, on 1 devices)
2020-12-06 14:03:08,488 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.729836 (1.4044771194458008 s / img per device, on 1 devices)
2020-12-06 14:03:08,489 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:03:10,327 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:03:10,327 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.2883e-01, 2.4753e-02, 9.9425e-03, 3.1778e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 5.5322e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2210e-02, 0.0000e+00, 0.0000e+00,
        4.0503e-02, 7.0117e-03, 3.6216e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.3142e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.3528e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        1.2930e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.6813e-03, 0.0000e+00, 0.0000e+00,
        1.7186e-01, 7.3794e-02, 5.0097e-02, 2.2471e-02, 3.1311e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.6926e-01, 9.8990e-02, 7.0806e-02, 6.9993e-02,
        6.2063e-02, 5.2056e-02, 1.7426e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 1.1516e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.1743e-02, 4.8254e-02, 2.3191e-02,
        4.3764e-03, 3.5240e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8546e-03,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.1981e-02,
        3.9117e-03, 4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3055e-02, 3.7950e-03,
        4.9949e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7184e-03, 1.4941e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.6426e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1830e-02, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 2.8991e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8., -1., -1., -1.,  8.,  8.,  3.,  3.,  3.,  3.,  6., -1., -1., -1.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  3.,  5.,  8.,  6.,
         8.,  8.,  6.,  8.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  6.,  6.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  3.,
         5.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  3.,  8.,  8.,  8.,  6.,  3.,
         8.,  8., -1., -1., -1.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         3.,  5.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,
         5.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,
         8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  6.,
         8.,  8.,  8.,  8.,  8.,  8., -1.,  8.,  3.,  3.,  5.,  8.,  8.,  8.,
         8., -1., -1.,  8.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8., -1.,  3.,
         8.,  3.,  6.,  8.,  3.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9953, 1.0000, 1.0000,
        0.2088, 0.9999, 0.0000, 0.0000, 0.0000, 0.9950, 1.0000, 1.0000, 1.0000,
        1.0000, 0.0727, 0.0566, 0.9981, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9999, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000,
        0.0000, 0.9905, 0.2939, 1.0000, 1.0000, 0.8865, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0701, 0.9999, 1.0000,
        0.1592, 1.0000, 0.9995, 1.0000, 0.1070, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.2608, 1.0000, 1.0000, 1.0000, 1.0000, 0.9891, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.4950, 1.0000, 1.0000, 0.9999,
        1.0000, 0.0941, 0.4577, 0.7041, 0.2719, 1.0000, 0.9904, 0.8853, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9984, 0.4945, 1.0000, 0.3828,
        1.0000, 1.0000, 0.9530, 0.9804, 1.0000, 0.7047, 0.0902, 0.9979, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9987, 0.1429, 0.4059,
        1.0000, 0.0000, 1.0000, 1.0000, 0.9907, 1.0000, 0.9768, 1.0000, 1.0000,
        0.9326, 1.0000, 0.0000, 0.0000, 0.0000, 0.9951, 0.9922, 1.0000, 1.0000,
        0.9730, 0.8230, 0.3357, 1.0000, 0.9778, 0.1602, 1.0000, 0.8980, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9996, 0.9999, 0.9882, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9018, 0.5818, 1.0000, 0.9966, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9589, 0.7046, 1.0000, 0.9965, 1.0000, 1.0000, 0.9987,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9938, 0.2290, 1.0000, 0.9983, 0.0000,
        1.0000, 0.8667, 1.0000, 1.0000, 0.9999, 1.0000, 0.9998, 0.9987, 0.0000,
        1.0000, 0.9786, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.9687, 0.1657, 1.0000, 1.0000, 1.0000, 0.9882, 1.0000,
        0.9963, 0.1450, 1.0000, 0.9752, 0.9331, 0.9999, 0.0000, 0.9852, 0.1276,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.9717, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9538, 0.9977]), 'num_pos': 232}
2020-12-06 14:03:10,357 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.521552
2020-12-06 14:03:10,359 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./_best_acc_r1.pth
2020-12-06 14:03:14,654 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: _best_acc_r1
2020-12-06 14:04:30,357 maskrcnn_benchmark.trainer INFO: eta: 3:22:28  iter: 500  loss: 16.0955 (19.0443)  loss_classifier: 0.8445 (1.1144)  loss_box_reg: 0.9405 (1.4772)  loss_objectness: 12.3856 (12.5280)  loss_rpn_box_reg: 0.7346 (3.9246)  time: 3.7262 (4.8594)  data: 0.1355 (1.2601)  lr: 0.000000  max mem: 1313
2020-12-06 14:05:45,171 maskrcnn_benchmark.trainer INFO: eta: 3:19:04  iter: 520  loss: 15.4624 (18.9699)  loss_classifier: 0.7718 (1.1197)  loss_box_reg: 0.7661 (1.4659)  loss_objectness: 12.2926 (12.5329)  loss_rpn_box_reg: 0.5252 (3.8514)  time: 3.7368 (4.8164)  data: 0.1372 (1.2171)  lr: 0.000000  max mem: 1313
2020-12-06 14:05:45,173 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:05:45,225 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:06:27,481 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.255816 (1.4570970864131534 s / img per device, on 1 devices)
2020-12-06 14:06:27,481 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.586571 (1.3995369138388798 s / img per device, on 1 devices)
2020-12-06 14:06:27,482 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:06:29,234 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:06:29,234 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.5893e-02, 2.3698e-02, 4.4255e-03, 3.3184e-03, 3.1676e-06, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.8176e-02,
        1.8984e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.2592e-02, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5428e-02, 0.0000e+00, 0.0000e+00,
        6.1004e-02, 5.7931e-02, 2.3823e-02, 9.8877e-03, 3.2062e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        8.2913e-02, 4.5822e-02, 2.8206e-02, 9.8877e-03, 3.2062e-03, 6.3459e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.5181e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.1556e-01, 7.5320e-02, 3.8658e-02, 2.9690e-02,
        2.1383e-02, 3.0145e-03, 2.8703e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.9630e-02, 0.0000e+00, 0.0000e+00, 2.2076e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 8.2356e-02, 6.3490e-02, 4.7401e-02,
        3.4138e-02, 2.2885e-02, 2.7412e-03, 9.0089e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.2845e-02, 1.9473e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.6949e-02,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9691e-02,
        1.9960e-02, 6.2848e-03, 3.6288e-03, 4.0319e-05, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2556e-02, 3.7950e-03,
        3.4256e-03, 6.8064e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.8755e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        3.9699e-03, 1.2080e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 7.5252e-02, 1.1745e-02, 3.7184e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        9.9782e-03, 0.0000e+00, 0.0000e+00, 4.3526e-03, 3.7996e-03, 3.7728e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8., -1.,  3.,  3.,  3.,  8.,  8.,  8.,  6.,  8.,  8., -1.,  8., -1.,
         8.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1.,  3.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  8.,  8.,  8.,
         8.,  5.,  3.,  6.,  8., -1., -1., -1., -1.,  5.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1.,  3.,  8.,  8.,  8.,  8.,  3.,
         3.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,
        -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1.,  3.,
         6.,  8.,  8.,  8.,  8.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8.,  3.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  8.,
        -1.,  8.,  8.,  3.,  3.,  6., -1.,  3.,  8.,  8.,  3.,  8.,  3.,  8.,
         8., -1.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1.,  3.,
         8.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1.,  3.,  6.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1.,  3.,  3.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1.,  8.,  6.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1.,  3.,  6.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.0000, 0.4592, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.4366, 1.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.6612, 1.0000, 0.7851,
        1.0000, 0.3388, 0.9912, 1.0000, 0.4308, 0.0000, 1.0000, 0.0000, 0.0000,
        0.1739, 1.0000, 0.4011, 0.9999, 1.0000, 0.4114, 1.0000, 1.0000, 0.6908,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9944, 0.9998, 1.0000, 1.0000, 0.0613,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0900, 0.9983, 1.0000,
        1.0000, 1.0000, 0.9456, 0.9973, 1.0000, 0.0000, 0.0000, 0.3400, 0.0000,
        0.0000, 0.1945, 1.0000, 1.0000, 0.8555, 0.9998, 1.0000, 0.1440, 1.0000,
        0.7020, 0.1155, 1.0000, 1.0000, 0.2126, 1.0000, 1.0000, 1.0000, 0.0811,
        0.8205, 1.0000, 0.0000, 0.0000, 0.9828, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9991, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.2295, 0.3273, 0.0000,
        0.0000, 0.9557, 0.0000, 1.0000, 1.0000, 1.0000, 0.9746, 0.9998, 1.0000,
        0.1272, 1.0000, 1.0000, 1.0000, 1.0000, 0.8478, 0.3336, 0.9545, 1.0000,
        1.0000, 1.0000, 0.0748, 1.0000, 0.9983, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9185, 1.0000, 0.9997, 0.9983, 0.0000, 0.0000, 0.7680, 1.0000,
        0.1439, 1.0000, 1.0000, 0.9996, 0.4052, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0601, 0.0000, 1.0000, 0.1945, 1.0000, 1.0000, 1.0000, 0.0000, 1.0000,
        0.8558, 1.0000, 1.0000, 1.0000, 0.1478, 1.0000, 0.9073, 0.0000, 0.9972,
        0.0000, 0.0000, 1.0000, 0.9916, 1.0000, 1.0000, 1.0000, 0.9925, 0.0000,
        0.0000, 0.9987, 0.9988, 0.9976, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        1.0000, 0.0000, 0.9938, 1.0000, 0.8534, 1.0000, 1.0000, 0.9999, 0.0000,
        0.0000, 0.9970, 0.0000, 0.9935, 1.0000, 1.0000, 0.9449, 1.0000, 1.0000,
        0.3392, 0.9991, 1.0000, 0.3100, 1.0000, 0.9549, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.9983, 1.0000, 1.0000, 1.0000, 0.9993, 1.0000]), 'num_pos': 232}
2020-12-06 14:06:29,262 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.487069
2020-12-06 14:07:43,959 maskrcnn_benchmark.trainer INFO: eta: 3:19:10  iter: 540  loss: 19.2102 (19.0209)  loss_classifier: 1.1817 (1.1511)  loss_box_reg: 1.5884 (1.4711)  loss_objectness: 11.7059 (12.5120)  loss_rpn_box_reg: 0.8015 (3.8868)  time: 3.7365 (4.8580)  data: 0.1334 (1.2587)  lr: 0.000000  max mem: 1313
2020-12-06 14:08:58,515 maskrcnn_benchmark.trainer INFO: eta: 3:15:54  iter: 560  loss: 17.2343 (18.9746)  loss_classifier: 0.5693 (1.1425)  loss_box_reg: 0.7727 (1.4622)  loss_objectness: 13.2863 (12.5398)  loss_rpn_box_reg: 0.6080 (3.8302)  time: 3.7211 (4.8176)  data: 0.1348 (1.2186)  lr: 0.000000  max mem: 1313
2020-12-06 14:08:58,517 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:08:58,569 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:09:40,766 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.197553 (1.4550880317030281 s / img per device, on 1 devices)
2020-12-06 14:09:40,767 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.572188 (1.399040962087697 s / img per device, on 1 devices)
2020-12-06 14:09:40,767 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:09:42,506 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:09:42,506 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([6.0325e-02, 4.1115e-02, 3.7841e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.0877e-02,
        4.2243e-02, 1.9707e-02, 3.8418e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 5.3209e-02,
        3.1447e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.5638e-02, 0.0000e+00, 0.0000e+00,
        3.1646e-02, 2.6365e-02, 9.8877e-03, 3.3184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.4775e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.8401e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        8.6473e-02, 3.1962e-02, 3.0058e-02, 3.3601e-03, 3.2651e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.8848e-01, 1.1910e-01, 8.5121e-02, 5.2548e-02,
        1.3852e-02, 1.1174e-02, 2.8851e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.1443e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3927e-02, 3.6216e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 8.7813e-03,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.7274e-02,
        3.8963e-03, 4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0861e-02, 1.4652e-02,
        7.6025e-03, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.1004e-02,
        2.6036e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 1.0742e-02, 4.0604e-03, 3.7184e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        4.4143e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 3.8423e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8., -1., -1., -1., -1.,  8.,  8., -1.,  3.,  3.,  8., -1.,  8.,  8.,
         8., -1.,  8., -1.,  6.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  6.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1.,  8., -1., -1., -1., -1., -1.,  3.,  8.,
         8.,  8.,  8., -1., -1.,  3., -1., -1., -1.,  8., -1.,  6.,  8.,  3.,
         8.,  8., -1.,  3.,  5.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1.,  5.,  6.,  8.,  8., -1., -1., -1., -1.,  8.,  3.,  8.,  6.,  6.,
         8.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8.,  3.,  8.,  8.,  8., -1., -1., -1., -1.,
        -1., -1.,  8.,  3.,  5.,  6., -1.,  8.,  3.,  8.,  3.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1., -1., -1.,  3.,  6.,  8., -1.,  8., -1.,
        -1., -1.,  8.,  3.,  8.,  8., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1., -1.,  8.,  3.,  8., -1., -1.,
         8., -1., -1.,  3.,  3.,  6.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000,
        0.9686, 1.0000, 0.0000, 0.6201, 0.8248, 0.9984, 0.0000, 0.7482, 0.0000,
        1.0000, 1.0000, 0.3498, 0.9945, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9998, 0.0824, 0.0580, 0.9067, 0.9999, 0.9470, 0.9855,
        0.0000, 0.6837, 0.9979, 1.0000, 0.9999, 1.0000, 0.9992, 1.0000, 0.9995,
        1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 0.9983, 1.0000, 0.0000, 0.0000, 0.9495, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.9999, 1.0000, 1.0000, 0.9994,
        0.0000, 1.0000, 0.5062, 1.0000, 1.0000, 1.0000, 1.0000, 0.2929, 1.0000,
        0.9929, 0.9999, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.2626, 1.0000, 0.9995, 1.0000, 1.0000, 1.0000, 1.0000, 0.9997, 0.9963,
        1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 0.0688, 0.1113, 0.7008, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0653, 1.0000, 0.0660, 1.0000,
        0.9982, 0.9760, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.6581, 0.9838, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9995, 1.0000, 1.0000, 0.0000, 1.0000,
        1.0000, 0.0972, 0.4411, 0.9991, 0.9988, 1.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.4135, 0.3345, 0.9644, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9998, 0.8755, 1.0000,
        0.9998, 0.9852, 1.0000, 1.0000, 0.1040, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9967, 0.0966, 0.8263, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.8136, 1.0000]), 'num_pos': 232}
2020-12-06 14:09:42,533 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.375000
2020-12-06 14:10:57,247 maskrcnn_benchmark.trainer INFO: eta: 3:15:52  iter: 580  loss: 15.1741 (18.9131)  loss_classifier: 0.6661 (1.1333)  loss_box_reg: 0.7069 (1.4428)  loss_objectness: 12.9798 (12.5500)  loss_rpn_box_reg: 0.3277 (3.7869)  time: 3.7329 (4.8562)  data: 0.1384 (1.2573)  lr: 0.000000  max mem: 1313
2020-12-06 14:12:11,860 maskrcnn_benchmark.trainer INFO: eta: 3:12:44  iter: 600  loss: 17.3181 (18.8813)  loss_classifier: 0.9105 (1.1400)  loss_box_reg: 0.7704 (1.4299)  loss_objectness: 12.9571 (12.5506)  loss_rpn_box_reg: 0.6407 (3.7609)  time: 3.7328 (4.8187)  data: 0.1327 (1.2199)  lr: 0.000000  max mem: 1313
2020-12-06 14:12:11,862 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:12:11,914 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:12:54,167 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.253274 (1.4570094470320076 s / img per device, on 1 devices)
2020-12-06 14:12:54,168 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.581208 (1.3993519914561305 s / img per device, on 1 devices)
2020-12-06 14:12:54,168 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:12:55,922 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:12:55,922 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.6404e-02, 4.5257e-02, 2.9057e-02, 2.5893e-02, 3.1493e-03, 2.8517e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 2.8070e-02,
        2.2541e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        6.0628e-02, 3.3378e-02, 2.3823e-02, 5.4292e-03, 3.2062e-03, 4.2084e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        8.3438e-02, 3.9245e-02, 9.8877e-03, 3.7105e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.1489e-01, 1.2497e-01, 6.4592e-02, 1.9793e-02,
        2.9615e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.5791e-02, 3.6148e-02, 9.8877e-03,
        3.1904e-03, 1.0127e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.7375e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 8.9237e-03,
        0.0000e+00, 0.0000e+00, 1.0607e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9960e-02,
        3.9258e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.1447e-02, 3.7950e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.3123e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4892e-02,
        2.1793e-02, 3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.6893e-02, 3.0074e-02, 3.9412e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.1477e-03, 0.0000e+00, 0.0000e+00,
        1.6433e-02, 0.0000e+00, 0.0000e+00, 3.0593e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        5.4617e-02, 2.9908e-02, 9.1809e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  3.,  6.,  8.,  8.,  3.,  8.,  8.,  6.,  8.,  8., -1., -1., -1.,
        -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  8., -1., -1.,
        -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  3.,  3.,  6.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1.,  3.,  5.,  8.,  8.,  8.,  6.,  3.,  6.,  8., -1.,
        -1., -1., -1., -1., -1.,  3.,  3.,  6.,  8.,  3.,  3.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1.,  6.,  8.,  8.,  8., -1., -1.,  3.,  8.,  8.,  5.,  8.,  8.,  3.,
         6.,  8., -1., -1., -1., -1., -1.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,
        -1., -1.,  8.,  3.,  5.,  5., -1., -1., -1.,  8.,  3.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1., -1.,  3.,  6.,  8.,  8., -1.,  8., -1.,
         3.,  8.,  8.,  6.,  8.,  8., -1.,  8.,  3.,  3.,  8.,  8.,  3.,  8.,
         8., -1., -1., -1.,  3.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  3.,  8.,  8.,  8., -1.,  8.,
         8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.0931, 0.7478, 0.8335, 1.0000, 0.9055, 1.0000, 0.7917, 0.0569,
        0.9980, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.3931, 1.0000, 1.0000,
        0.9996, 0.6649, 0.9440, 0.1075, 0.1402, 0.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.1165, 0.9986, 0.5827, 1.0000,
        0.9999, 0.9999, 1.0000, 1.0000, 0.5190, 1.0000, 0.0636, 0.0853, 0.3802,
        1.0000, 0.9612, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9977,
        1.0000, 0.0779, 0.9061, 0.9995, 0.9999, 0.0000, 0.0000, 0.9995, 0.0000,
        0.9994, 1.0000, 1.0000, 1.0000, 1.0000, 0.9780, 0.9995, 1.0000, 0.8144,
        0.0000, 0.0000, 0.9340, 0.1576, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.1666, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.9994, 1.0000, 1.0000, 1.0000, 0.2629, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.1021, 1.0000, 1.0000, 0.1498, 0.9580, 0.9999, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.9805, 0.9700, 1.0000, 0.9988, 0.5401,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9850,
        1.0000, 1.0000, 0.7239, 1.0000, 0.9997, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 0.9997, 0.9992, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9321, 0.9963, 0.2474, 0.0000, 0.0000,
        0.0000, 1.0000, 0.9998, 0.9999, 1.0000, 0.9432, 1.0000, 0.0000, 0.0000,
        0.9918, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.3053, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.7992, 1.0000, 0.0000,
        1.0000, 0.9731, 1.0000, 1.0000, 0.9999, 0.5688, 0.9618, 0.9979, 0.0000,
        0.0000, 0.0000, 0.0995, 0.9904, 1.0000, 1.0000, 1.0000, 1.0000, 0.9765,
        0.2588, 0.9024, 0.9792, 0.7210, 0.1067, 0.9997, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9943, 1.0000, 1.0000, 0.2352, 0.0000, 0.3083, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.7684, 1.0000, 0.2891]), 'num_pos': 232}
2020-12-06 14:12:55,950 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.387931
2020-12-06 14:14:10,581 maskrcnn_benchmark.trainer INFO: eta: 3:12:34  iter: 620  loss: 16.3916 (18.8350)  loss_classifier: 0.7132 (1.1463)  loss_box_reg: 0.7326 (1.4184)  loss_objectness: 13.0911 (12.5609)  loss_rpn_box_reg: 0.3093 (3.7093)  time: 3.7325 (4.8547)  data: 0.1352 (1.2561)  lr: 0.000000  max mem: 1313
2020-12-06 14:15:25,248 maskrcnn_benchmark.trainer INFO: eta: 3:09:34  iter: 640  loss: 15.5070 (18.7774)  loss_classifier: 0.5257 (1.1395)  loss_box_reg: 0.6843 (1.4008)  loss_objectness: 12.5305 (12.5630)  loss_rpn_box_reg: 0.3686 (3.6740)  time: 3.7344 (4.8197)  data: 0.1360 (1.2212)  lr: 0.000000  max mem: 1313
2020-12-06 14:15:25,251 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:15:25,301 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:16:07,569 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.267917 (1.4575143764758933 s / img per device, on 1 devices)
2020-12-06 14:16:07,569 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.600977 (1.4000337041657547 s / img per device, on 1 devices)
2020-12-06 14:16:07,570 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:16:09,241 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:16:09,242 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([1.7764e-02, 3.7784e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7950e-03,
        4.7867e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 1.5971e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0895e-02, 0.0000e+00, 0.0000e+00,
        4.6037e-02, 2.6525e-02, 9.8877e-03, 3.6457e-03, 3.2062e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.2123e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        1.4096e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        1.2510e-01, 5.2714e-02, 2.9861e-02, 3.7251e-03, 3.2062e-03, 3.8069e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.8807e-01, 8.0853e-02, 8.0396e-02, 4.9708e-02,
        2.6145e-02, 1.9843e-02, 2.8813e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 3.2155e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.2295e-02, 9.9207e-03, 3.5799e-03,
        1.5409e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.3461e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.3838e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.4685e-02,
        3.7522e-02, 3.3590e-02, 1.9960e-02, 3.2062e-03, 1.3063e-03, 4.0319e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3913e-02, 3.7950e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7184e-03, 3.2138e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.7139e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9791e-02, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 3.7628e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.7201e-02, 1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 3.,  3.,  6.,  6.,  8.,  6.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  6.,
         8.,  6.,  8.,  3.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  6.,  8.,  8.,  8.,
         3.,  8.,  3.,  8.,  8., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  8.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  5.,  8.,  8.,  8.,  8.,  6.,  3.,  6.,  8., -1.,
        -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
         3.,  6.,  8.,  8.,  8.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1., -1.,  8., -1.,  8.,  8.,  8.,  8.,  8.,
        -1., -1.,  3.,  3.,  3.,  8.,  8.,  8.,  8.,  8., -1.,  5.,  8.,  8.,
         8.,  8.,  8.,  3.,  6.,  8., -1., -1., -1.,  8.,  6.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1.,  3.,  5.,  6.,  8.,  8., -1.,  3.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8.,  3.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1., -1., -1.,  8., -1.,  3.,  6.]), 'best match scores': tensor([1.0000, 1.0000, 1.0000, 0.1232, 1.0000, 0.9992, 1.0000, 0.0851, 0.9970,
        0.9108, 0.9982, 0.0000, 0.8586, 0.9998, 1.0000, 1.0000, 0.3153, 0.8137,
        1.0000, 0.1414, 0.9996, 0.2378, 0.9579, 0.0000, 0.2580, 1.0000, 1.0000,
        1.0000, 0.1167, 0.9793, 0.9720, 0.9999, 0.9963, 0.0708, 1.0000, 1.0000,
        0.0000, 0.9978, 1.0000, 1.0000, 1.0000, 1.0000, 0.6728, 1.0000, 1.0000,
        1.0000, 0.0732, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.5705, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.7052, 1.0000, 0.5153, 0.2147, 1.0000, 1.0000, 1.0000, 0.5796, 1.0000,
        0.0573, 0.9998, 0.1878, 1.0000, 1.0000, 1.0000, 0.9568, 1.0000, 1.0000,
        0.9976, 0.7691, 0.0000, 0.0000, 0.2823, 1.0000, 1.0000, 0.9998, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.2969, 1.0000, 1.0000, 1.0000,
        0.9998, 1.0000, 0.9987, 0.3392, 0.9991, 0.9991, 1.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9749,
        1.0000, 1.0000, 1.0000, 1.0000, 0.3997, 1.0000, 1.0000, 0.5289, 0.4603,
        0.2458, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.9993, 0.9715, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.5639, 1.0000,
        0.9997, 1.0000, 1.0000, 1.0000, 0.0560, 1.0000, 0.0000, 0.9843, 1.0000,
        1.0000, 0.0509, 1.0000, 1.0000, 0.1686, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.9997, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.9446, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.7637, 0.9744, 1.0000, 0.1278, 1.0000, 1.0000, 1.0000, 1.0000, 0.9995,
        1.0000, 0.9957, 0.9999, 0.9821, 1.0000, 0.9246, 1.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.9974, 1.0000, 1.0000, 1.0000, 0.3563, 1.0000, 1.0000,
        0.6202, 0.2239, 0.8284, 0.7735, 0.9919, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.9943,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.9102, 1.0000]), 'num_pos': 232}
2020-12-06 14:16:09,268 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.478448
2020-12-06 14:17:23,884 maskrcnn_benchmark.trainer INFO: eta: 3:09:16  iter: 660  loss: 15.8328 (18.7209)  loss_classifier: 0.5931 (1.1462)  loss_box_reg: 0.6471 (1.3882)  loss_objectness: 12.6248 (12.5622)  loss_rpn_box_reg: 0.3594 (3.6243)  time: 3.7272 (4.8534)  data: 0.1356 (1.2550)  lr: 0.000000  max mem: 1313
2020-12-06 14:18:38,447 maskrcnn_benchmark.trainer INFO: eta: 3:06:23  iter: 680  loss: 14.8787 (18.6266)  loss_classifier: 0.5287 (1.1360)  loss_box_reg: 0.4883 (1.3688)  loss_objectness: 12.5774 (12.5745)  loss_rpn_box_reg: 0.1259 (3.5473)  time: 3.7200 (4.8203)  data: 0.1350 (1.2221)  lr: 0.000000  max mem: 1313
2020-12-06 14:18:38,449 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:18:38,502 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:19:20,751 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.248840 (1.4568565467308308 s / img per device, on 1 devices)
2020-12-06 14:19:20,751 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.583484 (1.3994304969392974 s / img per device, on 1 devices)
2020-12-06 14:19:20,751 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:19:22,503 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:19:22,503 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([7.0129e-02, 8.7279e-03, 3.7784e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7950e-03,
        1.0581e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 3.6423e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.6470e-03, 0.0000e+00, 0.0000e+00,
        8.3096e-02, 2.5981e-02, 9.8877e-03, 3.6823e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.3420e-01, 1.2052e-01, 7.7472e-02, 6.3832e-02,
        3.0997e-02, 2.2678e-02, 5.7136e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3637e-01, 5.3521e-02, 4.7704e-02,
        3.2043e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.5558e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.5657e-02,
        1.9960e-02, 9.2988e-03, 3.8660e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0864e-02, 1.2803e-02,
        1.1495e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 4.2918e-02, 1.7989e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0741e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.8228e-02, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6090e-02, 1.0038e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1., -1., -1.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  8., -1.,
         8.,  3.,  6.,  6.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1.,  3.,  8.,  8.,  8.,  6.,  3.,  8.,  8., -1.,
        -1., -1., -1.,  5.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1., -1.,  6.,  8.,  8.,  3., -1., -1., -1.,  8.,  8.,  3.,  6.,  8.,
         8.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8., -1., -1.,  3.,  8., -1., -1., -1.,  3.,
         5.,  8.,  8.,  3.,  5.,  8.,  3.,  5.,  8.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1.,  3.,  8.,  5.,  8.,  8., -1., -1., -1.,
        -1.,  8., -1., -1., -1.,  3., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8., -1.,  3.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1., -1., -1.,  8.,  8., -1., -1.,
         8., -1., -1., -1.,  8.,  3.,  3.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.0765, 1.0000, 0.2493, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9977, 1.0000, 0.0000, 0.0000, 0.9972, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.9495, 0.3437, 0.9974, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9837, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 0.9915,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.3969, 0.9991,
        1.0000, 0.8554, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.5066, 0.0000,
        0.0000, 1.0000, 0.3845, 0.9998, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.4577, 1.0000, 0.9589, 0.5423, 0.9963, 0.9999, 1.0000,
        0.0000, 0.0000, 0.0000, 0.9969, 0.9999, 1.0000, 1.0000, 0.9974, 0.9923,
        1.0000, 0.9927, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9935, 1.0000,
        1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9023, 0.4974,
        0.9651, 0.3438, 1.0000, 1.0000, 0.1065, 1.0000, 0.9996, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.3929, 0.8583,
        1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.8410, 1.0000,
        0.1482, 0.8256, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.7669, 0.0829, 0.4396, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.3569, 1.0000, 0.0000, 0.0000, 0.0000,
        0.3975, 0.9999, 0.9959, 1.0000, 1.0000, 1.0000, 1.0000, 0.1803, 0.7845,
        1.0000, 0.4611, 0.0527, 0.8182, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.9790, 0.9332, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9976, 0.0000,
        0.3129, 0.9939, 0.6871, 0.9985, 1.0000, 0.9848, 0.8672, 0.0862, 0.0000,
        1.0000, 0.0740, 1.0000, 1.0000, 1.0000, 1.0000, 0.9847, 1.0000, 0.9890,
        1.0000, 0.9997, 0.9998, 1.0000, 0.1265, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9160, 0.9903, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9932, 1.0000]), 'num_pos': 232}
2020-12-06 14:19:22,530 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.357759
2020-12-06 14:20:37,986 maskrcnn_benchmark.trainer INFO: eta: 3:06:02  iter: 700  loss: 14.6988 (18.5387)  loss_classifier: 0.6940 (1.1321)  loss_box_reg: 0.5840 (1.3513)  loss_objectness: 13.1142 (12.5866)  loss_rpn_box_reg: 0.2339 (3.4687)  time: 3.7398 (4.8533)  data: 0.1401 (1.2542)  lr: 0.000000  max mem: 1313
2020-12-06 14:21:53,278 maskrcnn_benchmark.trainer INFO: eta: 3:03:16  iter: 720  loss: 17.2306 (18.5226)  loss_classifier: 0.5875 (1.1436)  loss_box_reg: 0.9398 (1.3494)  loss_objectness: 12.6410 (12.5890)  loss_rpn_box_reg: 0.3469 (3.4407)  time: 3.7348 (4.8231)  data: 0.1350 (1.2232)  lr: 0.000000  max mem: 1313
2020-12-06 14:21:53,280 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:21:53,333 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:22:35,537 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.203353 (1.4552880402269035 s / img per device, on 1 devices)
2020-12-06 14:22:35,537 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.566812 (1.3988555957531106 s / img per device, on 1 devices)
2020-12-06 14:22:35,537 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:22:37,273 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:22:37,273 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0259, 0.0195, 0.0085, 0.0033, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0232, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0513, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000,
        0.0775, 0.0036, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0067, 0.0000, 0.0000,
        0.0444, 0.0237, 0.0036, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.2485, 0.0784, 0.0406, 0.0088, 0.0031, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0995, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0705, 0.0239, 0.0043, 0.0035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0043, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0803, 0.0198, 0.0039, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0583, 0.0038,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0210, 0.0000, 0.0000, 0.0524, 0.0197, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0274, 0.0086, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1.,  3.,  8.,  5.,  8.,  8.,  8.,  5.,  8.,  8., -1., -1., -1.,
        -1., -1.,  8.,  3.,  3.,  6.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  8., -1.,
         8., -1., -1.,  3.,  8., -1., -1., -1., -1., -1.,  8.,  5.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  3.,  8.,
         8.,  8., -1., -1., -1., -1.,  8.,  8.,  8., -1., -1.,  6.,  8., -1.,
        -1., -1., -1.,  5.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1., -1.,  3.,  5.,  8., -1., -1., -1., -1.,  8.,  8.,  8.,  8., -1.,
         3.,  8., -1., -1., -1., -1., -1.,  3.,  5.,  5.,  6.,  3.,  8.,  8.,
        -1., -1., -1.,  3.,  3.,  5.,  8.,  8.,  8.,  8., -1., -1., -1.,  8.,
        -1., -1.,  8., -1.,  3.,  8., -1.,  3., -1.,  8., -1., -1., -1.,  8.,
         8., -1., -1.,  8., -1., -1., -1., -1.,  3.,  6.,  8., -1., -1., -1.,
        -1., -1., -1.,  3.,  5.,  8., -1., -1., -1., -1., -1.,  8., -1.,  3.,
         8., -1., -1.,  8., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1., -1., -1.,  8., -1.,  3.,  8., -1.,  8.,
         8., -1., -1., -1., -1., -1.,  3.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 1.0000, 0.5866, 1.0000, 0.9992, 0.3073, 1.0000, 1.0000,
        0.5768, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.2464, 0.9597, 1.0000, 0.9261, 0.9736, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.1828, 1.0000, 1.0000, 0.9999, 0.2166,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9547, 0.0000, 1.0000, 0.0000, 0.0000,
        0.9996, 0.9999, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9929, 0.0642, 0.4000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.8201, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9893, 1.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.6988, 1.0000, 1.0000, 0.8330, 1.0000, 1.0000,
        0.8182, 1.0000, 1.0000, 0.3416, 0.3912, 0.3943, 0.8966, 0.9407, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.1979, 0.0000,
        0.0577, 0.9999, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1026, 1.0000,
        1.0000, 1.0000, 1.0000, 0.5467, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.8508, 1.0000, 1.0000, 0.1448, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.9995, 0.2330, 0.0000, 1.0000,
        0.0000, 0.9983, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.8114, 0.3714, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.8293, 0.4247, 0.9998, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9772, 0.0000, 0.0575, 0.0895, 0.0000,
        0.0000, 0.9998, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.6895,
        1.0000, 1.0000, 0.1013, 1.0000, 0.7582, 1.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9915, 0.0000, 1.0000, 0.9952, 0.0000, 0.7933, 0.9996,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0555, 0.9445]), 'num_pos': 232}
2020-12-06 14:22:37,299 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.275862
2020-12-06 14:23:52,221 maskrcnn_benchmark.trainer INFO: eta: 3:02:48  iter: 740  loss: 16.3459 (18.4825)  loss_classifier: 0.7538 (1.1526)  loss_box_reg: 1.0128 (1.3466)  loss_objectness: 12.8253 (12.5888)  loss_rpn_box_reg: 0.4128 (3.3946)  time: 3.7356 (4.8535)  data: 0.1349 (1.2534)  lr: 0.000000  max mem: 1313
2020-12-06 14:25:07,148 maskrcnn_benchmark.trainer INFO: eta: 3:00:06  iter: 760  loss: 18.7774 (18.5006)  loss_classifier: 1.2135 (1.1708)  loss_box_reg: 0.6324 (1.3389)  loss_objectness: 12.7319 (12.5849)  loss_rpn_box_reg: 0.4993 (3.4060)  time: 3.7338 (4.8243)  data: 0.1390 (1.2240)  lr: 0.000000  max mem: 1313
2020-12-06 14:25:07,150 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:25:07,203 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:25:50,509 maskrcnn_benchmark.inference INFO: Total run time: 0:00:43.305697 (1.4932999035407757 s / img per device, on 1 devices)
2020-12-06 14:25:50,509 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.563014 (1.4332073721392402 s / img per device, on 1 devices)
2020-12-06 14:25:50,509 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:25:52,340 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:25:52,340 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([3.7784e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        1.6010e-02, 3.7950e-03, 3.1412e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        8.2983e-02, 8.1138e-02, 2.6067e-02, 3.6216e-03, 3.2952e-03, 6.5354e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        6.7739e-02, 3.6879e-02, 3.6216e-03, 3.2893e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.3282e-01, 7.2609e-02, 4.6056e-02, 4.3509e-02,
        1.6164e-02, 2.9615e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.2378e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0416e-01, 4.9004e-02, 3.5442e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.8555e-03,
        9.8930e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7437e-02, 1.9707e-02,
        3.7950e-03, 1.6429e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 3.8030e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.4861e-02,
        1.9917e-02, 3.9949e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7184e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1., -1., -1., -1.,  8., -1., -1., -1.,  8., -1., -1.,  8.,
         8.,  3.,  8.,  3.,  6.,  8.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1.,  6.,  8.,  3.,  8.,  8.,  8.,  3.,  3.,  3.,  8.,  8.,
         8.,  8.,  3.,  5.,  8., -1., -1., -1., -1., -1.,  8., -1.,  3.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1., -1.,  6.,  8.,  8.,  8., -1.,
         8.,  8., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  6.,  3.,  8.,  8., -1.,
        -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  5.,  8.,  8., -1., -1., -1., -1., -1.,
        -1.,  3.,  6.,  8.,  8., -1., -1., -1., -1.,  8.,  8.,  8.,  3.,  5.,
         6.,  8., -1., -1., -1., -1., -1.,  8.,  3.,  8.,  8.,  6.,  8.,  8.,
        -1., -1., -1.,  3.,  3.,  8.,  8.,  8.,  8.,  3., -1., -1., -1., -1.,
        -1., -1.,  8., -1.,  8.,  8., -1.,  8., -1.,  8.,  3.,  8.,  3.,  6.,
         8., -1.,  3.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1.,
        -1.,  8.,  8., -1.,  3.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
         8., -1., -1.,  8., -1.,  3.,  3.,  6.,  8.,  8.,  8., -1.,  3.,  8.,
         8.,  8.,  8., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,
        -1., -1., -1., -1., -1.,  6.,  8.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.9297, 0.0000, 0.0000, 0.9661, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0709, 0.3646, 0.0803, 0.0000, 0.8920, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9888, 1.0000, 1.0000, 1.0000, 0.3449,
        1.0000, 0.3160, 1.0000, 1.0000, 0.2861, 1.0000, 1.0000, 1.0000, 0.9680,
        0.9914, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.9901, 0.9799, 0.1250, 1.0000, 1.0000, 0.0000, 0.0000, 0.9974, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.1918, 1.0000, 0.0000, 0.6722, 0.9997,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.2815,
        1.0000, 0.9881, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9885, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9996, 0.0873, 0.9532, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9880, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.8579, 1.0000, 0.9854, 1.0000, 0.9632,
        1.0000, 0.9919, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.2037, 0.9993, 1.0000, 0.0000, 0.0000, 0.0000, 0.1831,
        0.1032, 1.0000, 1.0000, 0.0652, 1.0000, 0.1116, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.5032,
        0.0000, 1.0000, 0.9970, 0.9927, 1.0000, 1.0000, 1.0000, 0.0000, 0.9999,
        1.0000, 0.0890, 0.9110, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.9720, 1.0000, 0.0000, 0.0733, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.9173, 1.0000, 1.0000, 0.9990, 1.0000, 0.9990,
        0.0000, 0.9871, 0.9999, 0.9996, 0.9967, 0.4223, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9904, 0.9984, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 14:25:52,368 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.336207
2020-12-06 14:27:10,326 maskrcnn_benchmark.trainer INFO: eta: 2:59:45  iter: 780  loss: 14.9050 (18.4381)  loss_classifier: 0.6220 (1.1699)  loss_box_reg: 0.3836 (1.3271)  loss_objectness: 12.3136 (12.5800)  loss_rpn_box_reg: 0.1070 (3.3611)  time: 3.9339 (4.8586)  data: 0.1464 (1.2545)  lr: 0.000000  max mem: 1313
2020-12-06 14:28:26,769 maskrcnn_benchmark.trainer INFO: eta: 2:57:11  iter: 800  loss: 16.5074 (18.4502)  loss_classifier: 1.1164 (1.1954)  loss_box_reg: 1.0499 (1.3290)  loss_objectness: 11.9643 (12.5723)  loss_rpn_box_reg: 0.3962 (3.3535)  time: 3.7692 (4.8326)  data: 0.1428 (1.2267)  lr: 0.000000  max mem: 1313
2020-12-06 14:28:26,771 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:28:26,836 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:29:09,958 maskrcnn_benchmark.inference INFO: Total run time: 0:00:43.121737 (1.4869564401692357 s / img per device, on 1 devices)
2020-12-06 14:29:09,958 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.366072 (1.4264162902174324 s / img per device, on 1 devices)
2020-12-06 14:29:09,959 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:29:11,722 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:29:11,723 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0360, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0249, 0.0199, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0056, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000,
        0.1037, 0.0492, 0.0427, 0.0032, 0.0005, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0038, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0228, 0.0000, 0.0000,
        0.0751, 0.0252, 0.0196, 0.0036, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.2278, 0.1042, 0.0252, 0.0031, 0.0030, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0056, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0434, 0.0239, 0.0036, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0470, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0061, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0915, 0.0039, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0231, 0.0038,
        0.0008, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0040,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0445,
        0.0207, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0099, 0.0000, 0.0000, 0.0018, 0.0000, 0.0000, 0.0636, 0.0265, 0.0037,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8., -1., -1., -1., -1., -1.,  8.,  6.,  6.,  8.,  8., -1.,  3.,  8.,
         5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
         3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  3.,  8.,  8.,  8.,
         3.,  5.,  8.,  6.,  8., -1., -1., -1., -1., -1.,  8., -1.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1.,  8.,  8.,  8.,  8.,  6.,  6.,  6.,  8., -1.,
         3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  5.,  6.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3., -1., -1.,  8., -1., -1.,
        -1., -1., -1.,  3.,  6.,  3., -1., -1., -1.,  8., -1.,  8., -1.,  6.,
         8.,  8., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1.,  8.,  8.,  5.,  8.,  8.,  3.,  3.,  6.,  8.,  8.,  8.,  3.,  8.,
         8., -1., -1.,  8., -1., -1.,  3.,  6.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  8., -1., -1.,  8.,  8.,  3., -1.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  3.,  8.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1., -1., -1.,  3.,  6.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.2552,
        1.0000, 1.0000, 0.0000, 0.9606, 1.0000, 0.9441, 0.6850, 0.1421, 1.0000,
        1.0000, 0.0544, 1.0000, 0.0875, 0.9959, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 0.9996, 0.9992, 0.1511, 1.0000, 0.8188,
        0.0000, 0.9426, 0.9925, 1.0000, 1.0000, 1.0000, 0.9999, 0.2430, 0.5358,
        0.9723, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 0.1213, 0.9992, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.0627, 1.0000, 1.0000, 0.3350, 0.7879, 0.3625,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 0.9971,
        1.0000, 0.9991, 0.0000, 0.9372, 0.9799, 1.0000, 0.9921, 1.0000, 1.0000,
        1.0000, 0.1126, 0.9970, 0.9973, 0.9994, 1.0000, 0.9984, 1.0000, 0.9474,
        0.9990, 1.0000, 1.0000, 0.9999, 0.4189, 0.9131, 1.0000, 0.5083, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9992, 1.0000,
        0.9900, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 1.0000,
        0.9998, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0594, 0.4370, 1.0000,
        1.0000, 1.0000, 0.8964, 0.8348, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.9940, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.9999, 1.0000, 0.1550, 0.6450, 1.0000,
        0.9828, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0590, 0.0000, 0.0000, 0.5193, 1.0000, 0.4645, 0.0627, 0.9992, 0.0000,
        0.0000, 0.0000, 0.0000, 0.6021, 0.0000, 0.0000, 0.9980, 1.0000, 0.9999,
        0.0000, 1.0000, 1.0000, 0.2767, 1.0000, 1.0000, 1.0000, 0.9995, 0.9418,
        0.9813, 1.0000, 1.0000, 0.6527, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.3498, 0.3642, 1.0000, 0.9940, 0.9999, 0.6754, 0.9973, 1.0000, 1.0000,
        1.0000, 1.0000, 0.8952, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.9997,
        0.0000, 0.0000, 0.0000, 1.0000, 0.1025, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 14:29:11,749 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.426724
2020-12-06 14:30:26,385 maskrcnn_benchmark.trainer INFO: eta: 2:56:36  iter: 820  loss: 15.2564 (18.4023)  loss_classifier: 0.7578 (1.1952)  loss_box_reg: 0.5292 (1.3140)  loss_objectness: 12.0389 (12.5743)  loss_rpn_box_reg: 0.2708 (3.3187)  time: 3.7296 (4.8606)  data: 0.1386 (1.2551)  lr: 0.000000  max mem: 1313
2020-12-06 14:31:40,977 maskrcnn_benchmark.trainer INFO: eta: 2:54:00  iter: 840  loss: 15.6267 (18.3774)  loss_classifier: 0.8211 (1.2030)  loss_box_reg: 0.5766 (1.3094)  loss_objectness: 12.3859 (12.5738)  loss_rpn_box_reg: 0.4484 (3.2913)  time: 3.7320 (4.8337)  data: 0.1385 (1.2285)  lr: 0.000000  max mem: 1313
2020-12-06 14:31:40,980 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:31:41,032 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:32:23,282 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.249820 (1.4568903363984207 s / img per device, on 1 devices)
2020-12-06 14:32:23,282 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.552866 (1.3983746725937416 s / img per device, on 1 devices)
2020-12-06 14:32:23,283 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:32:24,970 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:32:24,970 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([4.5052e-02, 4.0824e-02, 1.3897e-02, 3.7784e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.6269e-02,
        1.9871e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 7.3632e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.1912e-03, 0.0000e+00, 0.0000e+00,
        2.8775e-02, 9.8877e-03, 3.6216e-03, 3.2060e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        7.0597e-02, 2.5186e-02, 9.8877e-03, 3.6412e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.3503e-01, 1.1488e-01, 9.2964e-02, 5.6069e-02,
        5.3740e-02, 1.1796e-02, 5.9549e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.7100e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1475e-01, 5.7698e-02, 2.3927e-02,
        8.5234e-03, 3.5252e-03, 2.5350e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.6180e-03,
        0.0000e+00, 0.0000e+00, 4.1791e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9960e-02,
        3.8950e-03, 4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7950e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7626e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 3.5340e-02, 1.9707e-02, 3.7187e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8., -1., -1.,  8., -1., -1.,  8.,  8., -1.,  6.,  8., -1., -1.,  8.,
         8., -1.,  8., -1.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  8.,  3.,
         8.,  6.,  3.,  6.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1.,  3.,  8.,  8.,  8.,  6.,  3.,  6.,  8., -1.,
        -1., -1., -1., -1.,  8., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1.,  3.,  6.,  8.,  8.,  8., -1., -1.,  3.,  8.,  8.,  8.,  8., -1.,
         6.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,
        -1.,  5.,  8.,  3.,  8.,  8., -1., -1., -1.,  8., -1., -1.,  8.,  8.,
         8., -1., -1., -1.,  3.,  3.,  3.,  6.,  8.,  8.,  8., -1., -1.,  3.,
         3.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  8.,
         8., -1., -1.,  3.,  5.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1., -1., -1.,  8.,  8., -1.,  8., -1., -1.,
        -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.]), 'best match scores': tensor([0.9983, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.9997, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.3706, 0.0000,
        1.0000, 1.0000, 0.3094, 0.0669, 0.9424, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.8866, 1.0000, 0.9995, 0.1007, 1.0000, 1.0000, 1.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9987, 1.0000, 0.2252, 1.0000,
        1.0000, 0.9342, 0.0000, 0.0000, 0.0000, 0.0000, 0.2187, 0.8966, 0.7012,
        1.0000, 1.0000, 0.9998, 0.1505, 0.9997, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9990, 1.0000, 0.8439, 1.0000, 0.9986, 0.9742, 1.0000,
        0.0000, 0.0000, 0.0000, 0.6547, 1.0000, 1.0000, 1.0000, 0.9849, 1.0000,
        1.0000, 0.7452, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.6213, 0.9473, 1.0000, 1.0000, 0.9994, 0.9998, 1.0000, 1.0000,
        0.9986, 1.0000, 1.0000, 0.3362, 1.0000, 0.8662, 0.9999, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.4076,
        1.0000, 0.0000, 0.0000, 0.7787, 1.0000, 1.0000, 0.9834, 0.9604, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.6917, 1.0000, 1.0000,
        0.9998, 1.0000, 0.8634, 0.7778, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.7637, 1.0000, 1.0000, 0.9995, 0.9999, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9527, 1.0000, 0.9729, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.9973, 1.0000, 0.9967, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.9555, 0.9302, 0.9763, 1.0000, 1.0000, 0.9157, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9808, 1.0000, 0.3108, 0.9945, 0.0000,
        0.0000, 1.0000, 0.2365, 0.9983, 1.0000, 0.9998, 0.9984, 1.0000, 0.9618,
        1.0000, 0.4363, 1.0000, 0.9874, 0.9997, 1.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.7812, 1.0000, 0.0000, 0.9969, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9877, 1.0000, 0.9871, 0.6303, 0.4596, 0.9995]), 'num_pos': 232}
2020-12-06 14:32:24,995 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.370690
2020-12-06 14:33:39,530 maskrcnn_benchmark.trainer INFO: eta: 2:53:18  iter: 860  loss: 14.5340 (18.3151)  loss_classifier: 0.5746 (1.2053)  loss_box_reg: 0.7426 (1.3011)  loss_objectness: 12.9591 (12.5736)  loss_rpn_box_reg: 0.2224 (3.2350)  time: 3.7263 (4.8592)  data: 0.1353 (1.2543)  lr: 0.000000  max mem: 1313
2020-12-06 14:34:53,959 maskrcnn_benchmark.trainer INFO: eta: 2:50:46  iter: 880  loss: 15.3984 (18.2949)  loss_classifier: 0.5894 (1.2036)  loss_box_reg: 0.5261 (1.2883)  loss_objectness: 12.4529 (12.5669)  loss_rpn_box_reg: 0.3270 (3.2361)  time: 3.7183 (4.8333)  data: 0.1366 (1.2289)  lr: 0.000000  max mem: 1313
2020-12-06 14:34:53,961 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:34:54,013 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:35:36,225 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.211678 (1.4555750961961418 s / img per device, on 1 devices)
2020-12-06 14:35:36,225 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.536372 (1.39780592918396 s / img per device, on 1 devices)
2020-12-06 14:35:36,225 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:35:37,987 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:35:37,987 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([1.3581e-01, 8.8875e-02, 3.9096e-02, 5.4113e-03, 3.7784e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9922e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.9648e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        6.4982e-02, 4.5968e-02, 3.3184e-03, 3.9614e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 8.6378e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.0031e-05, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.5009e-02, 0.0000e+00, 0.0000e+00,
        5.1415e-02, 2.3713e-02, 3.6216e-03, 3.2062e-03, 3.9254e-04, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.3450e-01, 6.5350e-02, 4.0593e-02, 8.8860e-03,
        3.0755e-03, 2.9886e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.9536e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.7311e-02, 5.1184e-02, 4.9254e-02,
        4.6675e-02, 3.6147e-02, 3.2057e-03, 1.3116e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3886e-03,
        0.0000e+00, 0.0000e+00, 3.2949e-02, 3.6179e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3949e-02,
        1.9960e-02, 3.3359e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.0781e-02, 3.7950e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.0698e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.4510e-02,
        1.9917e-02, 3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.6418e-03, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 5.1022e-02, 3.7184e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8., -1., -1.,  8.,  8., -1.,  8.,  8.,  3.,  6.,  6., -1., -1., -1.,
        -1., -1.,  8., -1.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  5.,  5.,  6.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3., -1., -1.,  8., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,
         8.,  8., -1.,  6.,  6.,  3.,  8.,  8.,  8.,  6.,  8.,  8.,  8., -1.,
        -1., -1., -1.,  3.,  8.,  6.,  8.,  8.,  8.,  5.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,
         5.,  6.,  8.,  8.,  8.,  8.,  6.,  8.,  3.,  3.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1., -1.,  8., -1.,  3.,  8.,  8.,  8.,  3.,
        -1.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  5.,
         8.,  8.,  6.,  8.,  8.,  8., -1., -1., -1.,  8.,  3.,  8.,  6.,  8.,
         8., -1., -1.,  8., -1.,  3.,  3.,  6.,  8.,  8.,  8., -1.,  8., -1.,
        -1.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1., -1., -1.,  8., -1.,
         3., -1., -1.,  8., -1., -1.,  3.,  6.,  8.,  8.,  8., -1.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8., -1., -1.,
         8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.0000, 0.0000, 1.0000, 0.4117, 0.0000, 1.0000, 0.1026, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.8005, 0.0000,
        0.0928, 1.0000, 0.0549, 1.0000, 0.9992, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9950, 1.0000, 1.0000, 1.0000,
        0.9157, 0.0540, 0.6881, 1.0000, 0.9914, 1.0000, 1.0000, 0.9418, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0853, 0.9816, 1.0000,
        1.0000, 0.9999, 0.8309, 1.0000, 0.9460, 0.0000, 0.0000, 0.9971, 0.0000,
        0.1215, 0.9998, 1.0000, 1.0000, 1.0000, 0.9987, 1.0000, 0.1317, 1.0000,
        0.0000, 0.9995, 0.9996, 0.2213, 1.0000, 0.9412, 1.0000, 1.0000, 1.0000,
        0.9903, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.6399, 1.0000, 1.0000,
        0.1470, 0.9983, 1.0000, 1.0000, 0.9822, 1.0000, 0.9972, 1.0000, 1.0000,
        0.9817, 1.0000, 0.2004, 0.9834, 0.9815, 0.5395, 0.9984, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9974, 1.0000, 0.9998, 1.0000, 1.0000,
        0.9968, 1.0000, 0.9999, 1.0000, 0.1356, 0.9888, 1.0000, 0.9986, 0.9889,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.4995, 0.9961, 0.7754, 0.9998, 0.0602, 0.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 0.7956, 0.9998, 1.0000, 1.0000, 0.6399, 0.0000, 0.0000, 0.0000,
        0.8043, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 0.9464, 0.0000, 0.0000,
        1.0000, 0.0000, 0.9981, 0.9647, 1.0000, 0.9999, 0.9707, 1.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.1480, 0.5732, 0.0000, 0.0000, 0.4111, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.8641, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.9955, 1.0000, 1.0000, 0.6644, 0.3272,
        0.0000, 0.9801, 1.0000, 1.0000, 0.4242, 0.5974, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.9972,
        1.0000, 1.0000, 0.9972, 0.9990, 1.0000, 1.0000, 0.9987]), 'num_pos': 232}
2020-12-06 14:35:38,015 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.400862
2020-12-06 14:36:52,694 maskrcnn_benchmark.trainer INFO: eta: 2:50:01  iter: 900  loss: 14.8761 (18.2457)  loss_classifier: 0.4516 (1.2016)  loss_box_reg: 0.3976 (1.2759)  loss_objectness: 12.6666 (12.5713)  loss_rpn_box_reg: 0.3004 (3.1969)  time: 3.7367 (4.8578)  data: 0.1362 (1.2536)  lr: 0.000000  max mem: 1313
2020-12-06 14:38:07,288 maskrcnn_benchmark.trainer INFO: eta: 2:47:33  iter: 920  loss: 15.8230 (18.2030)  loss_classifier: 0.6271 (1.1954)  loss_box_reg: 0.8245 (1.2661)  loss_objectness: 11.9987 (12.5690)  loss_rpn_box_reg: 0.3998 (3.1725)  time: 3.7346 (4.8333)  data: 0.1353 (1.2293)  lr: 0.000000  max mem: 1313
2020-12-06 14:38:07,290 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:38:07,345 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:38:49,657 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.312122 (1.459038676886723 s / img per device, on 1 devices)
2020-12-06 14:38:49,657 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.606459 (1.4002227207710003 s / img per device, on 1 devices)
2020-12-06 14:38:49,657 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:38:51,351 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:38:51,351 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([4.4603e-02, 3.7784e-03, 2.1154e-03, 4.9167e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        1.9871e-02, 4.7867e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.9500e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        3.6216e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.2428e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0492e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.2749e-03, 0.0000e+00, 0.0000e+00,
        6.1767e-02, 4.2368e-02, 2.3713e-02, 3.2062e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.9128e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.9481e-01, 3.2345e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 8.9844e-02, 0.0000e+00, 0.0000e+00, 2.1330e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.6609e-02, 5.3050e-02, 1.1143e-02,
        3.5431e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0230e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.8264e-02,
        3.0410e-02, 1.9771e-02, 3.8555e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3055e-02, 3.8535e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.4101e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.0258e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.5112e-03, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  3.,  8.,  8.,  8.,  3.,  3.,  6., -1., -1.,  3.,
        -1., -1.,  8.,  3., -1., -1.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1., -1.,
         8., -1., -1.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1.,  3.,  8.,
         8.,  8.,  3., -1., -1.,  8., -1., -1., -1., -1., -1.,  6.,  8.,  8.,
         8.,  8., -1., -1., -1.,  8.,  8.,  8.,  8., -1., -1.,  6.,  8., -1.,
        -1., -1.,  3.,  5.,  8.,  6.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1.,  3.,
         5.,  6.,  8.,  8.,  8.,  8., -1.,  3.,  6.,  8.,  8.,  8.,  6.,  8.,
         8.,  8., -1., -1., -1., -1.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1., -1., -1.,  8.,  8.,  8., -1., -1., -1.,  8.,
         3.,  8.,  8.,  5.,  8.,  8., -1., -1., -1.,  8., -1.,  8., -1.,  8.,
         8., -1., -1.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1., -1., -1.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1., -1.,  8.,  3.,  6.,  8.,  3.,  3.,  8.,
         8.,  8.,  8., -1., -1., -1.,  3.,  3.,  6.,  8.,  8.,  8., -1., -1.,
        -1., -1., -1., -1., -1.,  3.,  6.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9998, 1.0000, 0.7676, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.9996,
        0.0000, 0.0000, 0.0981, 0.0704, 0.9998, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9284, 0.9999, 0.0990, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0536, 0.0000,
        1.0000, 1.0000, 0.0855, 1.0000, 0.8086, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9941, 1.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9995, 0.9945, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9997, 0.8807, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.3387, 1.0000, 1.0000, 0.9840, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.2827, 1.0000, 1.0000, 0.9955, 0.7173, 0.9992,
        1.0000, 0.0000, 1.0000, 0.9970, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999,
        1.0000, 0.0779, 0.0000, 0.0000, 0.0000, 0.0000, 0.7413, 0.2148, 0.9265,
        1.0000, 1.0000, 0.5698, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.5883, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9992, 1.0000, 0.0616, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.1288, 0.9997, 0.9772, 1.0000, 1.0000, 1.0000, 1.0000, 0.8378, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.1960, 0.8431, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9855, 1.0000, 0.9846, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9999, 0.4668, 1.0000, 1.0000, 0.8798, 1.0000, 0.0000, 0.0000, 0.0000,
        0.9954, 1.0000, 1.0000, 0.9861, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9979, 1.0000, 0.1685]), 'num_pos': 232}
2020-12-06 14:38:51,376 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.323276
2020-12-06 14:40:05,766 maskrcnn_benchmark.trainer INFO: eta: 2:46:44  iter: 940  loss: 15.1567 (18.1988)  loss_classifier: 0.7558 (1.1955)  loss_box_reg: 0.6204 (1.2558)  loss_objectness: 12.5768 (12.5733)  loss_rpn_box_reg: 0.3191 (3.1742)  time: 3.7214 (4.8565)  data: 0.1388 (1.2530)  lr: 0.000000  max mem: 1313
2020-12-06 14:41:20,360 maskrcnn_benchmark.trainer INFO: eta: 2:44:19  iter: 960  loss: 15.2098 (18.1527)  loss_classifier: 0.6643 (1.1978)  loss_box_reg: 0.5968 (1.2464)  loss_objectness: 12.7079 (12.5764)  loss_rpn_box_reg: 0.2157 (3.1322)  time: 3.7227 (4.8330)  data: 0.1364 (1.2298)  lr: 0.000000  max mem: 1313
2020-12-06 14:41:20,362 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:41:20,415 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:42:02,695 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.279180 (1.4579027521199193 s / img per device, on 1 devices)
2020-12-06 14:42:02,695 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.596179 (1.399868233450528 s / img per device, on 1 devices)
2020-12-06 14:42:02,695 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:42:04,447 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:42:04,447 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.5893e-02, 3.7784e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        8.3418e-02, 2.5833e-02, 8.3184e-03, 3.2062e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.1340e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 2.4000e-02,
        6.7942e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        6.8589e-02, 2.3713e-02, 9.8877e-03, 3.6466e-03, 3.1910e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.7484e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0118e-01, 8.0316e-02, 3.8685e-02, 2.8542e-02,
        1.9357e-02, 1.2138e-02, 2.8703e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.6418e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.6216e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.5419e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.8555e-03,
        4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2547e-02, 3.9120e-03,
        3.7092e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9699e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.7439e-02, 0.0000e+00, 0.0000e+00,
        3.9426e-03, 0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  3.,  3.,  8.,  3.,  6.,  8.,  8., -1., -1., -1.,
         8., -1.,  8.,  6.,  8.,  8.,  8.,  8.,  8., -1.,  8.,  3.,  5.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  5.,  6.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8.,  3., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  6.,  6.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,
         8., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1., -1.,  5.,  5.,  8., -1., -1., -1., -1., -1.,  3.,  8.,  3.,  6.,
         6.,  6., -1., -1., -1., -1., -1., -1.,  3.,  3.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1., -1.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1., -1.,  8.,  3., -1.,  6., -1., -1., -1.,  3.,  8.,  8.,  3.,  8.,
         8.,  3.,  3.,  8.,  3.,  3.,  6.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1., -1.,  8., -1.,
         8., -1., -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8., -1., -1.,
         8.,  3.,  3.,  5.,  6.,  8.,  8.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.8709, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.2930,
        1.0000, 0.9967, 0.9997, 0.0615, 1.0000, 0.0000, 1.0000, 0.9950, 0.6913,
        0.9972, 0.9979, 1.0000, 1.0000, 0.9983, 0.1551, 0.2873, 0.9998, 0.9864,
        0.0000, 0.9849, 1.0000, 1.0000, 0.9998, 1.0000, 0.8647, 0.9998, 1.0000,
        0.9984, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9998, 1.0000,
        1.0000, 0.2753, 0.9991, 0.9520, 0.9988, 0.0000, 0.6211, 1.0000, 0.0000,
        1.0000, 0.9833, 0.9999, 1.0000, 1.0000, 0.4736, 1.0000, 0.9661, 0.9978,
        1.0000, 0.5156, 1.0000, 1.0000, 0.9611, 0.3440, 0.9319, 0.9986, 1.0000,
        1.0000, 0.9950, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9980,
        1.0000, 1.0000, 0.8934, 1.0000, 1.0000, 1.0000, 0.9994, 0.7263, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0548, 0.0529, 0.9999, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9333, 1.0000, 0.9999,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.7775, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9998, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.9998, 0.9866, 0.1751, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9998, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.9986, 1.0000, 0.9841, 1.0000, 0.9676, 0.9881, 1.0000, 0.9997,
        1.0000, 1.0000, 0.9819, 1.0000, 0.0779, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.8934, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9827, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9985,
        0.9775, 1.0000, 0.0554, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 0.9412, 1.0000, 0.8026, 0.0854, 1.0000]), 'num_pos': 232}
2020-12-06 14:42:04,474 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.375000
2020-12-06 14:43:18,939 maskrcnn_benchmark.trainer INFO: eta: 2:43:27  iter: 980  loss: 16.1807 (18.1562)  loss_classifier: 0.8475 (1.2023)  loss_box_reg: 0.7471 (1.2419)  loss_objectness: 12.7930 (12.5698)  loss_rpn_box_reg: 0.6972 (3.1422)  time: 3.7235 (4.8554)  data: 0.1330 (1.2525)  lr: 0.000000  max mem: 1313
2020-12-06 14:44:33,484 maskrcnn_benchmark.trainer INFO: eta: 2:41:05  iter: 1000  loss: 16.0185 (18.1247)  loss_classifier: 1.1072 (1.2119)  loss_box_reg: 0.9743 (1.2361)  loss_objectness: 12.3824 (12.5739)  loss_rpn_box_reg: 0.4312 (3.1028)  time: 3.7278 (4.8328)  data: 0.1364 (1.2302)  lr: 0.000000  max mem: 1313
2020-12-06 14:44:33,487 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:44:33,551 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:45:15,828 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.277205 (1.4578346548409298 s / img per device, on 1 devices)
2020-12-06 14:45:15,829 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.577919 (1.3992385946471115 s / img per device, on 1 devices)
2020-12-06 14:45:15,829 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:45:17,586 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:45:17,586 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([7.6952e-02, 7.5088e-02, 6.8404e-02, 5.9582e-02, 2.7691e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.9555e-02,
        7.8332e-03, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 3.6477e-02,
        1.6550e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        5.3751e-03, 3.6512e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.5753e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        7.5186e-02, 6.5751e-02, 3.1502e-02, 3.2062e-03, 8.5470e-04, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.9371e-01, 2.7056e-02, 1.1470e-02, 3.2345e-03,
        3.0914e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.6984e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.3959e-02, 2.9163e-02, 2.3927e-02,
        3.6216e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.9997e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03,
        0.0000e+00, 0.0000e+00, 1.0710e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.1517e-02,
        3.8555e-03, 4.1153e-04, 4.0530e-04, 4.0319e-05, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.2791e-02, 3.8498e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3033e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7599e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.5370e-02, 0.0000e+00, 0.0000e+00,
        3.7866e-02, 0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  6.,  6.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8., -1., -1.,  8.,
         8., -1.,  8., -1.,  3.,  6.,  8.,  8.,  8., -1.,  8.,  8., -1., -1.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  6.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1.,  3.,  8.,
         8.,  8.,  8., -1., -1.,  8.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1.,  8.,  8.,  8.,  8., -1.,  3., -1.,  8., -1.,
        -1., -1., -1., -1.,  3.,  3.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1.,  3.,  8.,  8.,  8.,  8., -1., -1., -1.,  8., -1.,  8.,  8.,  3.,
         8.,  8., -1., -1.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8., -1., -1.,  3., -1., -1., -1., -1.,  8.,
         3.,  8.,  8.,  3.,  8.,  8., -1., -1.,  3.,  8.,  6.,  8.,  8.,  8.,
         8., -1., -1.,  8.,  3.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  3.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  3.,  8.,  8.,  8., -1., -1.,
         8., -1.,  3.,  3.,  6.,  8.,  8.,  8.]), 'best match scores': tensor([0.1753, 1.0000, 0.0544, 0.8501, 1.0000, 1.0000, 0.9998, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 0.9632, 0.9959, 0.9564, 1.0000, 0.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 0.9766, 0.9349, 1.0000, 0.9993, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.9033, 1.0000, 1.0000, 0.7744, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.3749, 1.0000, 1.0000, 0.9632, 1.0000, 1.0000, 1.0000, 0.9738, 1.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9768, 0.9994, 1.0000, 0.0000, 1.0000,
        0.0000, 0.0665, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9939,
        1.0000, 1.0000, 0.2181, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999,
        0.6816, 1.0000, 0.6713, 0.9960, 1.0000, 0.0554, 0.9999, 0.9998, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.6158, 1.0000, 1.0000, 1.0000,
        0.9999, 0.0000, 0.0000, 0.0000, 0.9992, 0.0000, 1.0000, 1.0000, 0.9860,
        0.0954, 0.7314, 0.0000, 0.0000, 0.9992, 0.9991, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9872, 0.9753, 0.1575, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.9772, 1.0000, 1.0000, 0.6869, 1.0000, 0.0000, 0.0000,
        0.2337, 0.9996, 0.8746, 1.0000, 1.0000, 0.1553, 1.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 0.9984, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.3262, 1.0000, 0.4448, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9999, 0.1701, 0.9999, 1.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9981,
        0.8643, 1.0000, 0.7681, 0.9930, 1.0000, 0.9988, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9735, 0.0000, 0.0000, 1.0000,
        0.0000, 0.9692, 0.4485, 1.0000, 1.0000, 0.5515, 0.9975]), 'num_pos': 232}
2020-12-06 14:45:17,613 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.400862
2020-12-06 14:46:32,170 maskrcnn_benchmark.trainer INFO: eta: 2:40:11  iter: 1020  loss: 16.3479 (18.1284)  loss_classifier: 0.8378 (1.2156)  loss_box_reg: 0.7738 (1.2274)  loss_objectness: 11.8675 (12.5657)  loss_rpn_box_reg: 0.3811 (3.1197)  time: 3.7261 (4.8544)  data: 0.1380 (1.2520)  lr: 0.000000  max mem: 1313
2020-12-06 14:47:46,611 maskrcnn_benchmark.trainer INFO: eta: 2:37:51  iter: 1040  loss: 15.1049 (18.0956)  loss_classifier: 0.6689 (1.2176)  loss_box_reg: 0.6727 (1.2193)  loss_objectness: 11.7460 (12.5542)  loss_rpn_box_reg: 0.4222 (3.1046)  time: 3.7219 (4.8327)  data: 0.1380 (1.2307)  lr: 0.000000  max mem: 1313
2020-12-06 14:47:46,613 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:47:46,667 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:48:28,917 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.250275 (1.45690603913932 s / img per device, on 1 devices)
2020-12-06 14:48:28,917 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.552778 (1.3983716553655163 s / img per device, on 1 devices)
2020-12-06 14:48:28,918 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:48:30,692 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:48:30,692 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([3.8017e-03, 2.5280e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        3.8036e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.7077e-02, 0.0000e+00, 0.0000e+00,
        5.5626e-02, 2.3823e-02, 2.2114e-02, 3.6525e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        2.5186e-02, 3.6392e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.1423e-01, 1.1764e-01, 8.2259e-02, 3.6098e-02,
        3.3527e-02, 3.0160e-02, 2.1334e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 8.0119e-02, 7.2474e-02, 5.1465e-02,
        2.2885e-02, 3.5553e-03, 8.0336e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.5885e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.4685e-03,
        0.0000e+00, 0.0000e+00, 7.4783e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5968e-02,
        2.2655e-02, 3.6216e-03, 8.1234e-04, 4.0319e-05, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.1427e-02, 3.1500e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.4547e-02,
        2.3483e-02, 3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 1.5566e-02, 5.9857e-03, 5.1899e-03,
        3.7184e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0084e-02, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 5.6751e-02, 4.4179e-02, 4.1982e-02,
        1.9203e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1., -1.,  3.,  3.,  8.,  6.,  8.,  8.,  8., -1., -1., -1.,
         8., -1.,  8., -1.,  5.,  6.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1., -1.,  3.,  6.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  8.,  8.,
         8.,  8., -1.,  6.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,  5.,
         8.,  8.,  8., -1., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1., -1.,  8., -1.,  8., -1.,  3.,  6.,  6., -1.,
        -1., -1., -1., -1.,  8., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
         3.,  3.,  3.,  3.,  6.,  8., -1.,  5.,  8.,  8.,  8.,  8.,  8.,  6.,
         8.,  8., -1.,  8., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,
         8.,  8.,  8.,  3.,  3.,  8., -1.,  8., -1.,  8., -1.,  8., -1., -1.,
         6., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1.,
        -1.,  8.,  8., -1.,  6.,  8.,  3.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,
         8.,  3.,  3.,  3.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8.,  8., -1.,  8.,  8.,  8.,  8.,  8., -1., -1.,
        -1., -1., -1.,  3.,  3.,  6.,  8.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0747, 1.0000, 1.0000, 1.0000,
        0.0836, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.9978, 0.0000,
        0.9834, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.8792, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9989, 1.0000, 0.9999, 1.0000, 0.9999, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9678, 1.0000, 1.0000, 0.9991, 0.0000,
        1.0000, 0.7917, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.7888, 0.9997, 0.9903, 0.4298, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9996, 1.0000, 0.9765, 1.0000, 0.1340, 1.0000, 0.9963,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9241, 0.0000, 1.0000, 0.0000, 0.9953,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.9969, 1.0000, 1.0000, 1.0000, 0.9998, 1.0000, 1.0000, 0.1810, 0.9712,
        0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 0.9991, 1.0000, 0.9992, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9957, 0.9993, 1.0000, 0.9999, 1.0000,
        0.9985, 0.0000, 1.0000, 1.0000, 0.2341, 1.0000, 1.0000, 0.9999, 1.0000,
        0.9999, 0.9941, 0.0000, 0.9997, 0.0000, 0.0000, 0.0000, 1.0000, 0.9891,
        1.0000, 0.4102, 0.1030, 0.4986, 0.9994, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.9967, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 0.9613, 1.0000, 0.8258, 0.0000, 0.9738,
        0.0000, 1.0000, 0.0000, 0.9974, 0.0000, 0.0000, 0.9999, 0.0000, 0.0000,
        0.0000, 0.9426, 1.0000, 1.0000, 0.9919, 0.0557, 0.9999, 1.0000, 0.0000,
        0.9846, 0.0000, 0.0000, 1.0000, 0.5767, 0.0000, 1.0000, 1.0000, 0.9584,
        1.0000, 1.0000, 0.9999, 1.0000, 0.9925, 1.0000, 1.0000, 0.9999, 0.9997,
        0.9773, 1.0000, 0.9999, 0.1302, 1.0000, 0.9997, 0.9998, 0.2101, 0.8696,
        1.0000, 0.7482, 1.0000, 0.1782, 1.0000, 0.4849, 0.0000, 0.9984, 1.0000,
        0.0000, 0.9998, 0.8373, 0.9503, 0.9984, 0.9541, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.5174, 1.0000, 1.0000, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 14:48:30,719 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.353448
2020-12-06 14:49:45,201 maskrcnn_benchmark.trainer INFO: eta: 2:36:55  iter: 1060  loss: 17.2596 (18.0942)  loss_classifier: 0.8019 (1.2130)  loss_box_reg: 0.6123 (1.2136)  loss_objectness: 13.0169 (12.5603)  loss_rpn_box_reg: 0.6603 (3.1072)  time: 3.7238 (4.8533)  data: 0.1399 (1.2517)  lr: 0.000000  max mem: 1313
2020-12-06 14:50:59,838 maskrcnn_benchmark.trainer INFO: eta: 2:34:38  iter: 1080  loss: 14.5793 (18.0544)  loss_classifier: 0.8255 (1.2120)  loss_box_reg: 0.6393 (1.2067)  loss_objectness: 12.8548 (12.5624)  loss_rpn_box_reg: 0.1518 (3.0733)  time: 3.7233 (4.8326)  data: 0.1381 (1.2312)  lr: 0.000000  max mem: 1313
2020-12-06 14:50:59,840 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:50:59,890 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:51:42,096 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.205918 (1.4553764770770896 s / img per device, on 1 devices)
2020-12-06 14:51:42,096 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.554370 (1.3984265656306827 s / img per device, on 1 devices)
2020-12-06 14:51:42,096 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:51:43,841 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:51:43,841 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([9.1344e-02, 7.9298e-02, 3.1323e-02, 2.3844e-02, 5.1836e-03, 3.3184e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.3363e-02,
        1.9871e-02, 1.2609e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7774e-02, 0.0000e+00, 0.0000e+00,
        3.0304e-02, 3.6216e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        2.5186e-02, 1.8078e-02, 3.2583e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.1702e-01, 1.3415e-01, 3.8685e-02, 2.0120e-02,
        2.9615e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.5235e-02, 2.3927e-02, 3.6216e-03,
        9.1549e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3258e-03,
        0.0000e+00, 0.0000e+00, 5.8318e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.4131e-02,
        8.6711e-03, 3.3184e-03, 4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.4944e-02, 3.4042e-02,
        1.9707e-02, 2.2740e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.2495e-02,
        4.0101e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.2413e-01, 3.7480e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.6418e-03, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7229e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  2.,
         3.,  3.,  8.,  3.,  6.,  8.,  3.,  8.,  8., -1.,  8., -1., -1., -1.,
         3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  8.,  3.,
         8.,  6.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1., -1.,  3.,  5.,  6.,  8.,  8.,
         8.,  8.,  3.,  3.,  3.,  8.,  8.,  6.,  8.,  6.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8., -1., -1.,  8.,  8., -1., -1.,  8.,  3.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1.,  6.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  3.,  8.,  6.,  8.,  6.,  3.,
         8.,  8., -1., -1., -1., -1.,  3.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8.,  6.,  8.,  8., -1., -1., -1.,  3.,  5.,
         8.,  8.,  8.,  3.,  8.,  8., -1.,  2.,  6.,  8.,  8.,  8.,  3.,  8.,
         8., -1., -1., -1., -1., -1., -1.,  3.,  3.,  6.,  8., -1., -1.,  3.,
         3.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  6.,  8.,  3.,  8.,  8.,
         8., -1., -1.,  8.,  3.,  3.,  5.,  8.,  8.,  8.,  8., -1., -1.,  8.,
         8.,  8.,  8., -1., -1.,  3.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1., -1., -1.,  3.,  6.,  8.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 1.0000, 1.0000, 0.9966, 1.0000, 1.0000, 0.9997, 0.9292,
        1.0000, 0.1039, 0.0000, 0.0000, 0.2256, 1.0000, 1.0000, 0.3916, 0.3728,
        0.9970, 1.0000, 1.0000, 1.0000, 0.1066, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.9999, 1.0000, 1.0000, 0.8399, 0.6342, 1.0000, 1.0000, 0.1391,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9997, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.6754, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.2012, 0.1106, 1.0000,
        0.0753, 1.0000, 1.0000, 0.8806, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.8571, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.9987, 1.0000, 0.0000, 0.0000, 1.0000, 0.3343, 1.0000, 1.0000,
        0.5170, 1.0000, 1.0000, 0.1971, 1.0000, 1.0000, 0.7213, 0.9998, 0.0000,
        0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.1341, 0.2185, 0.9994,
        0.2774, 0.0000, 0.0000, 0.9972, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000,
        1.0000, 0.8518, 0.0000, 0.0000, 0.0000, 0.0000, 0.9343, 0.0640, 0.1762,
        1.0000, 1.0000, 0.5305, 0.7851, 0.9996, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 0.9961, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.9338,
        1.0000, 1.0000, 0.9998, 1.0000, 0.2175, 0.9941, 0.9825, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.6981, 0.9985, 1.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0960, 0.7658, 0.9993, 0.9040, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9683, 1.0000, 1.0000, 1.0000, 1.0000, 0.9945, 0.0000,
        0.0000, 1.0000, 0.8860, 0.9981, 1.0000, 1.0000, 1.0000, 0.9998, 0.2670,
        0.0000, 0.0000, 1.0000, 1.0000, 0.7517, 0.9997, 0.0000, 0.0000, 1.0000,
        1.0000, 0.2179, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.9993,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9904, 0.9998, 0.9353]), 'num_pos': 232}
2020-12-06 14:51:43,868 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.379310
2020-12-06 14:52:58,326 maskrcnn_benchmark.trainer INFO: eta: 2:33:39  iter: 1100  loss: 15.8793 (18.0496)  loss_classifier: 0.7176 (1.2174)  loss_box_reg: 0.6820 (1.2014)  loss_objectness: 12.7304 (12.5623)  loss_rpn_box_reg: 0.3673 (3.0686)  time: 3.7293 (4.8524)  data: 0.1312 (1.2513)  lr: 0.000000  max mem: 1313
2020-12-06 14:54:12,646 maskrcnn_benchmark.trainer INFO: eta: 2:31:24  iter: 1120  loss: 16.1231 (18.0371)  loss_classifier: 0.8380 (1.2223)  loss_box_reg: 1.1468 (1.1987)  loss_objectness: 13.1712 (12.5657)  loss_rpn_box_reg: 0.3876 (3.0504)  time: 3.7174 (4.8321)  data: 0.1363 (1.2314)  lr: 0.000000  max mem: 1313
2020-12-06 14:54:12,648 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:54:12,700 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:54:55,023 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.322815 (1.4594074117726292 s / img per device, on 1 devices)
2020-12-06 14:54:55,023 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.547103 (1.3981759548187256 s / img per device, on 1 devices)
2020-12-06 14:54:55,023 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:54:56,780 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:54:56,780 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0062, 0.0038, 0.0021, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000,
        0.0264, 0.0156, 0.0037, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0078, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0095, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0212, 0.0000, 0.0000,
        0.0447, 0.0099, 0.0036, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.2778, 0.0410, 0.0406, 0.0069, 0.0031, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0355, 0.0214, 0.0036, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0141, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0068, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0750, 0.0411, 0.0196, 0.0039,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0580, 0.0476,
        0.0034, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0040,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0546,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0182, 0.0000, 0.0000, 0.0098, 0.0000, 0.0000, 0.0519, 0.0399, 0.0184,
        0.0028, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1.,  3.,  6.,  6.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,
         8., -1., -1.,  3.,  3.,  8.,  8.,  8.,  8., -1.,  3., -1., -1., -1.,
        -1.,  3.,  3.,  6.,  8.,  8.,  8.,  3., -1., -1., -1.,  6.,  8.,  6.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1., -1.,  8.,  6.,  8.,  6.,  3.,  8.,  8., -1.,
        -1., -1., -1., -1., -1., -1.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1.,  6.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  8.,  3.,
         6.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,  8., -1., -1., -1.,  8.,
         8., -1.,  8.,  3.,  5.,  8.,  4.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  3.,  8.,  3.,  5.,  6.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1.,  3.,
         8.,  3.,  3.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1.,  8., -1.,  8.,  8., -1.,  8., -1., -1.,
        -1., -1., -1.,  6.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 1.0000, 0.9409, 1.0000, 0.9996, 1.0000, 1.0000, 0.6082,
        1.0000, 1.0000, 0.0000, 0.0000, 0.9997, 1.0000, 0.0000, 0.0000, 1.0000,
        0.7689, 0.2114, 0.7713, 1.0000, 0.9706, 0.0000, 0.9995, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.9451, 1.0000, 0.9984, 0.9971, 0.9028, 1.0000,
        0.0000, 0.0000, 0.0000, 0.9921, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.2073, 0.0989, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9667, 0.0000,
        0.0000, 1.0000, 0.9975, 0.2188, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9973, 0.9994, 1.0000, 1.0000, 0.0756,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.0537, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9992, 0.0738, 1.0000, 1.0000, 0.6389, 1.0000, 1.0000, 0.2653, 0.9920,
        0.8707, 1.0000, 1.0000, 0.4411, 1.0000, 0.3227, 0.0533, 0.1772, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.8882, 0.9999, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9983, 0.7874, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1728, 1.0000, 0.8267,
        0.4711, 0.9990, 0.5203, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.9876, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.4341, 0.0000, 1.0000, 1.0000, 0.9913, 1.0000, 0.3576, 1.0000,
        1.0000, 1.0000, 1.0000, 0.1553, 1.0000, 1.0000, 1.0000, 0.9063, 0.7823,
        1.0000, 1.0000, 0.9889, 1.0000, 0.0908, 0.2155, 1.0000, 0.0643, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9997, 1.0000, 0.9999, 0.9947, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.7008, 0.0000, 0.2603, 0.0943, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9928, 1.0000, 1.0000,
        0.9885, 1.0000, 1.0000, 1.0000, 1.0000, 0.9973, 0.0000, 0.4365, 0.0000,
        1.0000, 0.0000, 0.1555, 1.0000, 0.0000, 0.3838, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.9998, 0.9950, 0.8506, 1.0000]), 'num_pos': 232}
2020-12-06 14:54:56,806 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.383621
2020-12-06 14:56:12,145 maskrcnn_benchmark.trainer INFO: eta: 2:30:25  iter: 1140  loss: 17.3329 (18.0445)  loss_classifier: 0.7654 (1.2265)  loss_box_reg: 0.6370 (1.1916)  loss_objectness: 12.1277 (12.5663)  loss_rpn_box_reg: 0.3234 (3.0601)  time: 3.7602 (4.8522)  data: 0.1388 (1.2511)  lr: 0.000000  max mem: 1313
2020-12-06 14:57:27,155 maskrcnn_benchmark.trainer INFO: eta: 2:28:13  iter: 1160  loss: 15.1081 (18.0277)  loss_classifier: 0.5966 (1.2226)  loss_box_reg: 0.8494 (1.1864)  loss_objectness: 13.5323 (12.5739)  loss_rpn_box_reg: 0.1480 (3.0448)  time: 3.7362 (4.8332)  data: 0.1386 (1.2320)  lr: 0.000000  max mem: 1313
2020-12-06 14:57:27,157 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 14:57:27,212 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 14:58:10,113 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.900038 (1.4793116717502988 s / img per device, on 1 devices)
2020-12-06 14:58:10,113 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.146497 (1.41884472452361 s / img per device, on 1 devices)
2020-12-06 14:58:10,113 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 14:58:11,858 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 14:58:11,858 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([3.4858e-02, 2.7434e-02, 3.3184e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.0855e-02,
        1.9871e-02, 1.2335e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 8.8934e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.2282e-03, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 1.7933e-02, 1.4277e-02, 8.7206e-03, 3.3184e-03, 3.2918e-03,
        1.0543e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.8277e-01,
        2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5722e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9331e-02, 0.0000e+00, 0.0000e+00,
        7.9713e-02, 2.3713e-02, 3.6216e-03, 3.2400e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3598e-02,
        1.9473e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.2640e-01, 1.1416e-01, 7.6965e-02, 2.9615e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 7.7138e-02, 0.0000e+00, 0.0000e+00, 1.5282e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8440e-02, 5.9711e-02, 4.9426e-02,
        9.0549e-03, 3.1803e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.3069e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03,
        0.0000e+00, 0.0000e+00, 2.3334e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9798e-02,
        3.9332e-02, 1.9771e-02, 3.8555e-03, 4.0319e-05, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3055e-02, 1.0864e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6545e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0081e-02,
        2.4856e-02, 3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.9411e-02, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.6418e-03, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8., -1.,  8.,  8.,  3.,  3.,  8.,  8., -1., -1.,  8.,
         3.,  6.,  8.,  4.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  6.,  6.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1.,  3.,  3.,  8.,  3.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  5.,  6.,  8., -1.,
         8., -1.,  3.,  3.,  8.,  6.,  8.,  8.,  8., -1., -1.,  8., -1.,  8.,
        -1.,  3.,  5.,  5.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  8.,  3.,  6.,
         8.,  8.,  8.,  8.,  8.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  6.,
         8.,  8.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  5.,  5.,  8.,
         8.,  8.,  8.,  3.,  8.,  8., -1., -1.,  8.,  8., -1.,  8.,  6.,  8.,
         8., -1.,  3.,  8.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  3.,  3.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1., -1., -1., -1.,  5.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  3.,  3.,  8., -1., -1.,
         8., -1., -1., -1.,  3.,  6.,  8.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.9988, 1.0000, 0.4391,
        1.0000, 0.4927, 0.0000, 0.0000, 1.0000, 0.1390, 0.9668, 0.0646, 0.9721,
        1.0000, 0.8610, 0.9845, 1.0000, 0.8723, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9487, 0.3668, 0.7903, 0.0852, 1.0000,
        0.9922, 0.9981, 1.0000, 1.0000, 1.0000, 1.0000, 0.9997, 0.1458, 0.9497,
        0.8890, 1.0000, 0.0000, 0.0000, 0.0000, 0.7224, 1.0000, 1.0000, 0.9983,
        1.0000, 0.9999, 0.9999, 0.2048, 1.0000, 0.0000, 0.0000, 0.0000, 0.9679,
        1.0000, 0.9676, 1.0000, 0.9995, 1.0000, 1.0000, 1.0000, 0.9891, 1.0000,
        0.0000, 0.0000, 0.0000, 0.3476, 0.1172, 1.0000, 1.0000, 1.0000, 0.9998,
        1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.8676, 1.0000, 0.9987, 1.0000,
        1.0000, 1.0000, 0.9887, 0.0000, 0.0000, 0.8804, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 0.8206, 1.0000, 0.9944, 0.9902, 0.1097, 0.0000,
        0.9999, 1.0000, 0.9985, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9999, 1.0000, 1.0000, 0.6284, 0.9990, 1.0000, 0.9990, 0.9963,
        0.0535, 0.9966, 0.3342, 1.0000, 1.0000, 1.0000, 1.0000, 0.1493, 1.0000,
        0.9855, 0.9988, 0.9989, 0.8757, 1.0000, 0.0000, 0.9970, 1.0000, 0.9846,
        1.0000, 1.0000, 0.9039, 1.0000, 1.0000, 0.8419, 0.9999, 0.9898, 1.0000,
        1.0000, 1.0000, 0.9983, 1.0000, 0.0710, 0.0580, 1.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.9997, 0.9486, 1.0000, 1.0000, 0.0000, 1.0000,
        0.8711, 0.9993, 0.5774, 1.0000, 1.0000, 0.8814, 0.1651, 1.0000, 1.0000,
        0.9669, 1.0000, 0.9957, 1.0000, 0.0581, 0.0625, 0.1038, 0.9885, 0.0000,
        0.0000, 0.0000, 1.0000, 0.2032, 1.0000, 0.7797, 0.4293, 0.0725, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9924, 1.0000, 0.9999, 1.0000, 1.0000,
        1.0000, 0.0889, 1.0000, 0.0513, 0.8300, 0.9983, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9999, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.9850,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9979, 0.9844, 0.9968]), 'num_pos': 232}
2020-12-06 14:58:11,886 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.452586
2020-12-06 14:59:27,566 maskrcnn_benchmark.trainer INFO: eta: 2:27:13  iter: 1180  loss: 15.0638 (18.0188)  loss_classifier: 0.5752 (1.2178)  loss_box_reg: 0.3504 (1.1748)  loss_objectness: 12.7874 (12.5751)  loss_rpn_box_reg: 0.1949 (3.0510)  time: 3.7446 (4.8533)  data: 0.1397 (1.2514)  lr: 0.000000  max mem: 1313
2020-12-06 15:00:43,436 maskrcnn_benchmark.trainer INFO: eta: 2:25:04  iter: 1200  loss: 14.1894 (17.9851)  loss_classifier: 0.5301 (1.2109)  loss_box_reg: 0.3869 (1.1656)  loss_objectness: 12.2964 (12.5695)  loss_rpn_box_reg: 0.0735 (3.0390)  time: 3.7685 (4.8357)  data: 0.1413 (1.2329)  lr: 0.000000  max mem: 1313
2020-12-06 15:00:43,438 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:00:43,488 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:01:26,221 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.732389 (1.4735306624708504 s / img per device, on 1 devices)
2020-12-06 15:01:26,221 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.997029 (1.4136906492299046 s / img per device, on 1 devices)
2020-12-06 15:01:26,222 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:01:27,976 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:01:27,977 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0916, 0.0273, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0232, 0.0124, 0.0102, 0.0085, 0.0038, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000,
        0.0856, 0.0715, 0.0710, 0.0340, 0.0054, 0.0032, 0.0018, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0359, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0399, 0.0000, 0.0000,
        0.0741, 0.0397, 0.0092, 0.0037, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0523, 0.0195, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1069, 0.0654, 0.0305, 0.0151, 0.0031, 0.0010, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0103, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.1254, 0.0561, 0.0232, 0.0036, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0043, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0630, 0.0435, 0.0434, 0.0039,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0684, 0.0258,
        0.0038, 0.0009, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0645, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0631,
        0.0199, 0.0040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0268,
        0.0172, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0099, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000, 0.0167, 0.0037, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0510, 0.0243, 0.0158,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8., -1.,  3.,  3.,  3.,  5.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  2.,  3.,  8.,  8.,  3.,  3.,  8., -1.,  8., -1., -1., -1.,
         3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,
         8.,  8.,  3.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  3.,  6.,  8.,
         8.,  8.,  8.,  3.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,
         8., -1., -1., -1.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
         3.,  6.,  8.,  8.,  8.,  8.,  3.,  6.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1.,  3.,  3.,  3.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8.,  3.,  8.,  8.,  8., -1., -1., -1., -1.,
         8.,  8.,  8., -1., -1.,  6.,  6.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,
         8., -1.,  3.,  8., -1.,  5.,  6.,  8.,  8.,  8.,  8., -1.,  8., -1.,
        -1.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1.,  3.,  6.,  8.,  8.,  8.,
         8.,  3.,  3.,  8.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  3.,  8., -1.,  3.,
         8., -1., -1., -1.,  8.,  6.,  8.,  8.]), 'best match scores': tensor([0.9998, 0.0000, 0.3626, 0.9982, 1.0000, 0.2282, 1.0000, 1.0000, 0.9998,
        0.7376, 1.0000, 0.9997, 0.9554, 1.0000, 1.0000, 1.0000, 0.7323, 0.4971,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.9986, 0.0000, 0.0000,
        0.0000, 1.0000, 0.1798, 0.9995, 1.0000, 0.3046, 0.9704, 0.8464, 0.9988,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9938, 1.0000, 1.0000, 1.0000, 0.5125,
        1.0000, 1.0000, 0.9997, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9993,
        1.0000, 1.0000, 1.0000, 0.9886, 1.0000, 1.0000, 0.3926, 1.0000, 0.0759,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.8678, 1.0000, 1.0000,
        0.0000, 0.0000, 0.9991, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9636,
        1.0000, 0.9983, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9990, 0.9804,
        1.0000, 0.3249, 0.9956, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9998,
        0.9672, 1.0000, 0.9985, 0.3085, 0.9948, 0.2226, 0.9983, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0542, 1.0000, 0.9978, 1.0000, 0.4556, 0.8364, 1.0000,
        1.0000, 0.9511, 0.0000, 0.0000, 0.0833, 0.7994, 0.9982, 1.0000, 1.0000,
        0.8450, 1.0000, 1.0000, 1.0000, 0.9997, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.4142, 0.3945, 1.0000, 0.0000, 0.0000, 1.0000, 0.9925, 1.0000,
        1.0000, 1.0000, 1.0000, 0.0683, 1.0000, 0.6540, 1.0000, 0.0000, 0.9998,
        0.6028, 0.0000, 0.9731, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 1.0000, 0.5960, 0.1731, 1.0000, 1.0000, 0.0000,
        1.0000, 0.0000, 1.0000, 0.9998, 0.3718, 0.9999, 0.9999, 1.0000, 0.9988,
        0.9617, 0.9926, 0.9727, 0.4835, 1.0000, 0.9647, 0.9985, 0.1043, 1.0000,
        0.6280, 1.0000, 0.9901, 0.9999, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9980, 0.0000, 1.0000, 0.9990,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9945, 0.5528]), 'num_pos': 232}
2020-12-06 15:01:28,004 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.465517
2020-12-06 15:02:43,996 maskrcnn_benchmark.trainer INFO: eta: 2:24:02  iter: 1220  loss: 14.2997 (17.9481)  loss_classifier: 0.7171 (1.2072)  loss_box_reg: 0.5553 (1.1595)  loss_objectness: 12.2136 (12.5653)  loss_rpn_box_reg: 0.2570 (3.0161)  time: 3.7533 (4.8552)  data: 0.1402 (1.2515)  lr: 0.000000  max mem: 1313
2020-12-06 15:03:59,048 maskrcnn_benchmark.trainer INFO: eta: 2:21:53  iter: 1240  loss: 16.2464 (17.9404)  loss_classifier: 1.2156 (1.2137)  loss_box_reg: 0.9385 (1.1558)  loss_objectness: 12.1510 (12.5595)  loss_rpn_box_reg: 0.3637 (3.0113)  time: 3.7325 (4.8374)  data: 0.1343 (1.2336)  lr: 0.000000  max mem: 1313
2020-12-06 15:03:59,050 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:03:59,102 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:04:41,668 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.566115 (1.4677970820459827 s / img per device, on 1 devices)
2020-12-06 15:04:41,669 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.836434 (1.4081529091144431 s / img per device, on 1 devices)
2020-12-06 15:04:41,669 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:04:43,410 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:04:43,411 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.2983e-02, 3.5795e-02, 3.3184e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.8608e-02,
        1.9871e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 2.0727e-02, 9.8877e-03, 3.6216e-03, 3.4125e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.5261e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        3.6094e-02, 6.6014e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.3910e-01, 6.3662e-02, 1.5499e-02, 9.9501e-03,
        8.8664e-03, 4.5358e-03, 2.8703e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.9451e-02, 0.0000e+00, 0.0000e+00, 1.2556e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.2707e-02, 2.3927e-02, 3.6532e-03,
        3.1609e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.1411e-02,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.7965e-02,
        1.0885e-02, 3.6395e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.8749e-03, 1.6857e-03,
        4.9949e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9699e-03,
        1.1481e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.4959e-02, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        1.7187e-02, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7184e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 3.,  3.,  5.,  6.,  8.,  8.,  8.,  6.,  6.,  8.,  8., -1.,  3.,  2.,
         8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
         3.,  3.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  8.,  8.,
         8.,  8.,  3.,  3.,  3., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  3.,  5.,  6.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1., -1.,  8.,  3.,  3.,  8.,  6.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,  3.,  3.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,
         3.,  8.,  6.,  8.,  8., -1., -1., -1.,  8.,  8.,  8.,  8., -1., -1.,
        -1.,  3., -1., -1., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,
        -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,
        -1.,  8.,  8.,  5.,  6.,  8., -1.,  3.,  8.,  8.,  8.,  8.,  3.,  8.,
         8., -1., -1.,  8., -1.,  3.,  6.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  8.,  3.,  8.,  8.,  8., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1.,  3.,  5.,  3.,  8.,  8.,  8.]), 'best match scores': tensor([0.1980, 0.7159, 0.3323, 0.9749, 1.0000, 1.0000, 0.7347, 0.6671, 0.9911,
        1.0000, 1.0000, 0.0000, 0.9999, 0.4922, 0.8831, 0.4921, 1.0000, 1.0000,
        1.0000, 1.0000, 0.4014, 0.0876, 0.9864, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.9654, 0.9669, 1.0000, 1.0000, 0.9917, 1.0000, 0.9922, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9995,
        0.9828, 0.9975, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.4089, 0.9998,
        0.0864, 1.0000, 0.9983, 0.9476, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 0.9929, 0.0900, 0.6769, 0.9274, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.7227, 0.4074, 0.9995, 0.9090, 1.0000,
        1.0000, 0.9994, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.0593, 0.6465, 1.0000, 1.0000, 0.1056, 1.0000, 1.0000, 1.0000, 0.6324,
        0.0749, 0.9997, 0.6148, 0.7955, 0.5685, 0.9776, 0.9992, 0.1787, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9260, 1.0000, 1.0000, 0.2595, 1.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.7895, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.7103, 0.6770, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 0.0644, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0549, 0.7173, 1.0000, 1.0000, 0.0000, 0.9749,
        0.8335, 1.0000, 1.0000, 0.2652, 0.9777, 1.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9996, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.6343, 1.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.2280, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9995, 0.7747, 0.8127, 1.0000, 1.0000, 0.9992, 0.0000, 0.0000, 0.0000,
        0.9311, 1.0000, 1.0000, 0.7471, 1.0000, 1.0000, 0.0000, 0.0000, 0.9996,
        0.0000, 0.2048, 1.0000, 0.8434, 1.0000, 0.9975, 1.0000]), 'num_pos': 232}
2020-12-06 15:04:43,437 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.383621
2020-12-06 15:05:57,926 maskrcnn_benchmark.trainer INFO: eta: 2:20:47  iter: 1260  loss: 15.6757 (17.9356)  loss_classifier: 1.3263 (1.2233)  loss_box_reg: 1.0789 (1.1527)  loss_objectness: 11.5198 (12.5464)  loss_rpn_box_reg: 0.6659 (3.0132)  time: 3.7270 (4.8550)  data: 0.1390 (1.2514)  lr: 0.000000  max mem: 1313
2020-12-06 15:07:13,060 maskrcnn_benchmark.trainer INFO: eta: 2:18:41  iter: 1280  loss: 15.0289 (17.9112)  loss_classifier: 1.1915 (1.2290)  loss_box_reg: 0.5494 (1.1479)  loss_objectness: 12.9502 (12.5520)  loss_rpn_box_reg: 0.1791 (2.9824)  time: 3.7350 (4.8378)  data: 0.1349 (1.2341)  lr: 0.000000  max mem: 1313
2020-12-06 15:07:13,062 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:07:13,117 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:07:56,239 maskrcnn_benchmark.inference INFO: Total run time: 0:00:43.121752 (1.4869569581130455 s / img per device, on 1 devices)
2020-12-06 15:07:56,239 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.328052 (1.425105251114944 s / img per device, on 1 devices)
2020-12-06 15:07:56,239 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:07:58,060 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:07:58,060 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([4.5753e-02, 4.3071e-02, 3.7784e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.4695e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.5518e-02, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        9.8877e-03, 3.6322e-03, 3.4017e-03, 3.3185e-03, 3.2025e-04, 1.4502e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.0207e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.0144e-02, 0.0000e+00, 0.0000e+00, 5.1658e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0447e-02, 0.0000e+00, 0.0000e+00,
        5.3146e-02, 2.3713e-02, 9.8877e-03, 3.7622e-03, 3.2277e-03, 7.9112e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0932e-01, 7.6201e-02, 7.5471e-02, 3.8685e-02,
        2.8703e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 8.1510e-02, 2.8394e-02, 1.0074e-02,
        3.5240e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 7.9209e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03,
        0.0000e+00, 0.0000e+00, 8.4971e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.9755e-02,
        3.2795e-02, 1.9960e-02, 3.8746e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4515e-02, 6.9999e-03,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 5.1875e-02, 4.4220e-02, 1.5751e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0026e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 5.2938e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1.,  3.,  5.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  6.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3., -1., -1., -1.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  3.,  8.,  8.,
         8.,  8.,  3.,  6.,  8., -1., -1., -1., -1., -1.,  8., -1., -1., -1.,
         8.,  8.,  8.,  3.,  5.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,
        -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  3.,  3.,  8.,  8.,  8.,
         3.,  3.,  5.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1., -1.,  6.,  8.,  8., -1.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  8.,
        -1.,  8.,  8.,  5.,  8.,  8., -1.,  8., -1.,  8., -1.,  8.,  3.,  6.,
         8., -1.,  8.,  8., -1.,  3.,  3.,  8.,  3.,  6.,  8., -1., -1., -1.,
        -1.,  8.,  8., -1.,  6.,  8., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,
         8., -1., -1., -1., -1., -1.,  3.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,
         5.,  8.,  8., -1., -1., -1., -1.,  3.,  8.,  5.,  8.,  8., -1., -1.,
        -1., -1., -1., -1., -1.,  6.,  8.,  8.]), 'best match scores': tensor([0.0000, 1.0000, 0.8427, 1.0000, 1.0000, 1.0000, 1.0000, 0.9996, 1.0000,
        1.0000, 0.9994, 0.0000, 0.9858, 1.0000, 1.0000, 0.9994, 0.9396, 0.9958,
        0.1622, 1.0000, 1.0000, 0.5758, 0.9943, 0.0000, 0.2228, 0.0000, 0.0000,
        0.0000, 1.0000, 0.9364, 1.0000, 0.9900, 1.0000, 0.3575, 0.9978, 1.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9924,
        1.0000, 0.9123, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.7077, 0.0000,
        0.0000, 0.0000, 0.8573, 1.0000, 1.0000, 0.9997, 1.0000, 1.0000, 1.0000,
        0.9896, 1.0000, 0.6646, 1.0000, 1.0000, 0.9994, 0.9985, 0.9640, 0.9999,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9999,
        0.9806, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 0.9678,
        0.9971, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.1833, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9874, 1.0000,
        0.0000, 1.0000, 0.5880, 1.0000, 1.0000, 1.0000, 0.5887, 0.9999, 0.3365,
        0.5532, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9995, 1.0000, 1.0000,
        0.8739, 0.9999, 0.9002, 0.9943, 1.0000, 0.0000, 0.9999, 0.5987, 1.0000,
        0.0984, 0.9992, 1.0000, 0.1073, 0.9989, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 1.0000,
        0.0000, 1.0000, 0.0000, 0.9999, 1.0000, 0.9997, 0.9667, 0.0000, 1.0000,
        1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9960, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0966, 1.0000, 1.0000, 1.0000, 0.8385, 0.9958, 0.9982, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9871, 0.9983, 0.9416, 1.0000, 1.0000,
        0.1097, 0.3004, 1.0000, 0.6549, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.2087, 0.7913, 0.9336, 1.0000, 0.0617, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9713, 1.0000]), 'num_pos': 232}
2020-12-06 15:07:58,089 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.418103
2020-12-06 15:09:13,145 maskrcnn_benchmark.trainer INFO: eta: 2:17:34  iter: 1300  loss: 14.9834 (17.8909)  loss_classifier: 0.9291 (1.2357)  loss_box_reg: 0.5577 (1.1400)  loss_objectness: 12.8119 (12.5548)  loss_rpn_box_reg: 0.2157 (2.9603)  time: 3.7392 (4.8558)  data: 0.1383 (1.2518)  lr: 0.000000  max mem: 1313
2020-12-06 15:10:28,035 maskrcnn_benchmark.trainer INFO: eta: 2:15:29  iter: 1320  loss: 15.5887 (17.8778)  loss_classifier: 0.6630 (1.2306)  loss_box_reg: 0.3892 (1.1333)  loss_objectness: 12.1483 (12.5505)  loss_rpn_box_reg: 0.3241 (2.9634)  time: 3.7294 (4.8389)  data: 0.1362 (1.2351)  lr: 0.000000  max mem: 1313
2020-12-06 15:10:28,037 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:10:28,090 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:11:10,350 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.260243 (1.4572497482957512 s / img per device, on 1 devices)
2020-12-06 15:11:10,350 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.596236 (1.3998701901271426 s / img per device, on 1 devices)
2020-12-06 15:11:10,351 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:11:12,083 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:11:12,083 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0259, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0126, 0.0039, 0.0037, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0554, 0.0033, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0231, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0042, 0.0000, 0.0000, 0.0165, 0.0158, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0655, 0.0549, 0.0036, 0.0011, 0.0008, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1204, 0.1177, 0.0502, 0.0377, 0.0030, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0561, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0620, 0.0134, 0.0099, 0.0035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0210, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0058, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0753, 0.0404, 0.0272, 0.0039,
        0.0034, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0634, 0.0240,
        0.0052, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0037,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0056, 0.0000, 0.0000, 0.0039, 0.0000, 0.0000, 0.0207, 0.0037, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0181, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8., -1., -1.,  8.,  3.,  3.,  3.,  6., -1., -1., -1.,
         3., -1.,  8.,  3., -1.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,
         8.,  3.,  6.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1., -1., -1.,
         8.,  8.,  8., -1.,  3.,  8., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  4.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8., -1., -1., -1.,  8.,  3.,  3.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
         3.,  6.,  8.,  8.,  8., -1., -1., -1., -1.,  8.,  8.,  8., -1.,  3.,
        -1.,  6., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,
        -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  5.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1.,  8.,  8.,  8., -1.,  8.,  6.,  8.,
         8., -1., -1., -1., -1., -1., -1., -1., -1.,  3.,  6., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,
         8., -1., -1.,  8.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  3.,  6., -1., -1.,
         8., -1., -1., -1.,  3.,  8.,  8.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.1037,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.6268, 0.0000, 1.0000, 0.9938,
        0.0000, 1.0000, 0.4792, 0.2447, 0.9971, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9999, 0.8225, 1.0000, 0.9989, 1.0000, 0.9999, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9997, 0.0000,
        0.0000, 0.0000, 1.0000, 0.5157, 0.4241, 0.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.3458, 0.9553, 1.0000, 0.9149, 0.1593, 0.1023,
        0.0000, 0.0000, 0.0000, 1.0000, 0.7306, 1.0000, 1.0000, 0.6883, 0.2779,
        1.0000, 0.7218, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9685,
        1.0000, 1.0000, 1.0000, 0.3124, 0.0759, 0.9928, 0.0705, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0632, 1.0000, 1.0000, 0.9986, 0.9368,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9820, 0.9996, 0.0604, 0.0000, 0.4337,
        0.0000, 0.9997, 0.0000, 0.0000, 0.0000, 0.0000, 0.9997, 1.0000, 0.1119,
        1.0000, 0.1436, 0.1775, 1.0000, 0.0955, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9979, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 0.0000, 0.0563, 1.0000,
        0.1966, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9883, 0.0000, 1.0000,
        0.9996, 0.6723, 0.0000, 0.0534, 0.2354, 0.9688, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.8182, 0.0000, 0.0000, 0.6606, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9997, 1.0000, 0.2255, 1.0000, 0.7983, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 0.7336,
        0.9995, 0.9974, 1.0000, 0.6294, 0.4895, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.4337, 1.0000, 0.6298, 1.0000, 0.5791, 0.0000, 0.0000, 0.8792,
        0.0000, 0.0000, 0.0000, 0.9939, 0.1195, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 15:11:12,109 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.340517
2020-12-06 15:12:27,141 maskrcnn_benchmark.trainer INFO: eta: 2:14:20  iter: 1340  loss: 15.6682 (17.8580)  loss_classifier: 0.7064 (1.2383)  loss_box_reg: 0.7672 (1.1309)  loss_objectness: 12.5300 (12.5551)  loss_rpn_box_reg: 0.1141 (2.9336)  time: 3.7295 (4.8556)  data: 0.1370 (1.2516)  lr: 0.000000  max mem: 1313
2020-12-06 15:13:43,155 maskrcnn_benchmark.trainer INFO: eta: 2:12:17  iter: 1360  loss: 16.7191 (17.8482)  loss_classifier: 0.8410 (1.2380)  loss_box_reg: 0.5393 (1.1251)  loss_objectness: 11.1947 (12.5417)  loss_rpn_box_reg: 0.3135 (2.9434)  time: 3.7911 (4.8401)  data: 0.1398 (1.2353)  lr: 0.000000  max mem: 1313
2020-12-06 15:13:43,157 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:13:43,210 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:14:26,438 maskrcnn_benchmark.inference INFO: Total run time: 0:00:43.227735 (1.4906115531921387 s / img per device, on 1 devices)
2020-12-06 15:14:26,438 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.512098 (1.4314516659440666 s / img per device, on 1 devices)
2020-12-06 15:14:26,438 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:14:28,222 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:14:28,222 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0895, 0.0342, 0.0038, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0232, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0525, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0112, 0.0000, 0.0000,
        0.0404, 0.0099, 0.0037, 0.0033, 0.0033, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0243, 0.0055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0095, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0096, 0.0000, 0.0000,
        0.0466, 0.0331, 0.0051, 0.0033, 0.0005, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1121, 0.0867, 0.0658, 0.0406, 0.0043, 0.0037, 0.0029,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0103, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0577, 0.0239, 0.0099, 0.0036, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0568, 0.0195, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0116, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0938, 0.0400, 0.0200, 0.0039,
        0.0033, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0450, 0.0197,
        0.0038, 0.0020, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0258, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0216,
        0.0094, 0.0067, 0.0037, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165,
        0.0158, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0099, 0.0000, 0.0000, 0.0104, 0.0000, 0.0000, 0.0207, 0.0037, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 3.,  3.,  3.,  8.,  8.,  6.,  8.,  6.,  8.,  8.,  8., -1., -1., -1.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  6.,  6.,  8.,  8.,  8.,  3.,
         8.,  8.,  3.,  8.,  8., -1.,  8., -1., -1., -1.,  3.,  3.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1.,  3.,
         6.,  8.,  8.,  8.,  8., -1.,  3.,  6.,  3.,  8.,  8.,  8.,  6.,  3.,
         8.,  8., -1.,  8., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  8.,
         3.,  8.,  8., -1.,  8.,  8., -1.,  8.,  8.,  8., -1.,  8., -1.,  6.,
         8., -1.,  8., -1., -1.,  3.,  3.,  3.,  5.,  6.,  8., -1., -1., -1.,
        -1.,  8.,  8., -1., -1.,  8., -1.,  8., -1., -1.,  8.,  8.,  8.,  3.,
         3., -1., -1.,  8., -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1., -1.,  3.,  3.,  6.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.9871, 0.9995, 1.0000, 1.0000, 0.9998, 1.0000, 1.0000, 0.0688,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9910, 1.0000, 0.3669,
        1.0000, 0.9714, 0.9937, 0.9993, 0.9871, 0.0000, 0.0000, 0.0000, 0.0000,
        0.1526, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9997,
        0.9994, 1.0000, 0.9984, 1.0000, 1.0000, 0.9809, 1.0000, 1.0000, 0.9991,
        1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9689, 1.0000,
        0.2643, 1.0000, 1.0000, 0.2932, 1.0000, 0.0000, 0.0000, 0.4018, 0.9977,
        1.0000, 0.5611, 1.0000, 1.0000, 0.3640, 1.0000, 1.0000, 0.8742, 1.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.5349, 0.9126, 1.0000,
        1.0000, 1.0000, 0.9681, 1.0000, 1.0000, 1.0000, 1.0000, 0.9994, 0.6512,
        1.0000, 1.0000, 1.0000, 0.0861, 1.0000, 0.1546, 0.1506, 0.0660, 0.0000,
        0.0000, 1.0000, 0.0000, 0.9995, 1.0000, 0.9752, 1.0000, 1.0000, 0.9998,
        0.0000, 1.0000, 1.0000, 1.0000, 0.2012, 1.0000, 1.0000, 0.9897, 0.7988,
        1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.1631, 0.9045, 0.6284, 0.9993, 0.5618, 0.0000, 0.0000, 0.1091, 0.8909,
        1.0000, 0.8202, 0.9992, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.5465, 1.0000, 1.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000,
        0.1561, 1.0000, 0.0000, 0.7730, 0.0000, 0.9969, 1.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.0630, 0.6725, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.9968, 0.0000,
        1.0000, 0.0000, 0.0000, 0.1132, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.3148, 1.0000, 1.0000, 0.1764,
        0.4065, 0.9742, 1.0000, 0.9999, 0.9564, 0.9962, 0.0000, 0.0000, 0.0000,
        0.1921, 0.9984, 1.0000, 0.9822, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.9999, 1.0000, 1.0000, 0.6453, 0.0693]), 'num_pos': 232}
2020-12-06 15:14:28,250 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.439655
2020-12-06 15:15:44,421 maskrcnn_benchmark.trainer INFO: eta: 2:11:09  iter: 1380  loss: 15.0580 (17.8254)  loss_classifier: 0.7473 (1.2430)  loss_box_reg: 0.5040 (1.1200)  loss_objectness: 12.7941 (12.5480)  loss_rpn_box_reg: 0.3355 (2.9144)  time: 3.7972 (4.8578)  data: 0.1417 (1.2522)  lr: 0.000000  max mem: 1313
2020-12-06 15:17:00,456 maskrcnn_benchmark.trainer INFO: eta: 2:09:08  iter: 1400  loss: 14.8408 (17.7882)  loss_classifier: 0.7970 (1.2390)  loss_box_reg: 0.5533 (1.1124)  loss_objectness: 12.4614 (12.5494)  loss_rpn_box_reg: 0.0758 (2.8874)  time: 3.8162 (4.8427)  data: 0.1412 (1.2363)  lr: 0.000000  max mem: 1313
2020-12-06 15:17:00,458 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:17:00,511 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:17:43,405 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.894188 (1.4791099203043971 s / img per device, on 1 devices)
2020-12-06 15:17:43,405 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.198675 (1.4206439708841259 s / img per device, on 1 devices)
2020-12-06 15:17:43,405 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:17:45,231 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:17:45,231 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.5532e-02, 2.9043e-02, 3.7997e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 9.8877e-03, 3.6216e-03, 4.0096e-05, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.4489e-03, 0.0000e+00, 0.0000e+00, 8.6959e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        8.4248e-02, 3.2415e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.1465e-01, 7.2886e-02, 5.1277e-02, 4.0593e-02,
        2.7016e-02, 8.8036e-03, 2.8703e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.6418e-03, 0.0000e+00, 0.0000e+00, 4.8443e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.2417e-02, 3.6216e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.6736e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0173e-02,
        2.8365e-02, 3.8992e-03, 4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.3688e-02, 1.9707e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.2607e-02, 0.0000e+00, 0.0000e+00,
        2.8488e-02, 0.0000e+00, 0.0000e+00, 2.8662e-02, 3.7184e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8., -1.,  8.,  8.,  3.,  3.,  5.,  8., -1.,  6.,  8.,
         3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1.,  3.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  3.,  8.,  3.,
         8.,  6.,  3.,  8.,  8., -1., -1., -1., -1., -1., -1., -1.,  5.,  8.,
         8.,  8.,  8., -1.,  8., -1., -1., -1., -1., -1., -1.,  3.,  8.,  8.,
         8.,  8., -1., -1.,  5.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1.,  3.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,  8.,  8.,
         8.,  3., -1.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1.,  3.,
         8.,  8.,  8.,  8.,  8., -1., -1.,  3.,  3.,  8.,  5.,  8.,  6.,  8.,
         8.,  8., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1., -1.,  3.,  8.,  8.,  8., -1., -1., -1.,  8.,
        -1., -1.,  8.,  3., -1.,  5., -1.,  8., -1.,  8.,  8.,  8.,  8.,  8.,
         8., -1.,  3.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1., -1.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  3.,  8.,
         8., -1.,  3.,  3.,  3.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3., -1., -1.,  5.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,
        -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 0.1463, 0.0526,
        0.9960, 1.0000, 0.0000, 0.9599, 1.0000, 0.5314, 1.0000, 0.9997, 0.8485,
        1.0000, 0.9988, 1.0000, 0.9955, 0.9997, 0.0000, 1.0000, 0.0000, 0.8791,
        1.0000, 0.1207, 0.9999, 0.0519, 1.0000, 1.0000, 0.9998, 0.9398, 0.8602,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9974, 1.0000, 1.0000, 1.0000, 1.0000,
        0.0643, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0917, 1.0000, 0.9999, 0.9981, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0939, 1.0000, 1.0000, 1.0000, 0.9999,
        0.0000, 0.0000, 0.7830, 1.0000, 0.5164, 1.0000, 1.0000, 1.0000, 0.3160,
        0.9956, 1.0000, 0.0000, 0.0000, 0.0000, 0.9637, 0.8192, 1.0000, 1.0000,
        1.0000, 0.0940, 1.0000, 0.0000, 0.0000, 0.9998, 1.0000, 1.0000, 0.7128,
        1.0000, 0.0000, 0.7858, 1.0000, 0.9998, 0.1251, 0.1037, 0.6619, 0.0000,
        0.0000, 1.0000, 0.0000, 0.7418, 0.9994, 0.9729, 0.9991, 0.9995, 0.2516,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 0.9988, 1.0000,
        1.0000, 0.9966, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9373, 0.9943,
        1.0000, 0.9990, 0.0868, 1.0000, 0.3851, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1880, 1.0000, 0.9994, 0.9998, 0.0000, 0.0000, 0.0000,
        0.9999, 0.0000, 0.0000, 1.0000, 0.8418, 0.0000, 0.9995, 0.0000, 1.0000,
        0.0000, 1.0000, 0.9978, 1.0000, 1.0000, 0.8453, 1.0000, 0.0000, 1.0000,
        0.9995, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.1395, 0.9757, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9999, 1.0000, 0.9966, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.1212, 0.0824, 0.9984, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.1690, 1.0000, 1.0000, 0.9988, 0.9999, 0.0000, 0.0000, 0.9992,
        0.0521, 0.9675, 1.0000, 1.0000, 1.0000, 0.1817, 0.0000, 0.0000, 0.0000,
        0.0000, 0.1209, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 15:17:45,261 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.400862
2020-12-06 15:19:00,300 maskrcnn_benchmark.trainer INFO: eta: 2:07:57  iter: 1420  loss: 14.9151 (17.7760)  loss_classifier: 0.6704 (1.2433)  loss_box_reg: 0.6757 (1.1069)  loss_objectness: 12.2077 (12.5474)  loss_rpn_box_reg: 0.1354 (2.8783)  time: 3.7293 (4.8589)  data: 0.1406 (1.2524)  lr: 0.000000  max mem: 1313
2020-12-06 15:20:15,064 maskrcnn_benchmark.trainer INFO: eta: 2:05:55  iter: 1440  loss: 14.5170 (17.7510)  loss_classifier: 0.6595 (1.2438)  loss_box_reg: 0.7156 (1.1040)  loss_objectness: 12.4948 (12.5482)  loss_rpn_box_reg: 0.0705 (2.8550)  time: 3.7139 (4.8433)  data: 0.1366 (1.2370)  lr: 0.000000  max mem: 1313
2020-12-06 15:20:15,066 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:20:15,117 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:20:57,364 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.246031 (1.4567596994597336 s / img per device, on 1 devices)
2020-12-06 15:20:57,364 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.575815 (1.3991660414070919 s / img per device, on 1 devices)
2020-12-06 15:20:57,364 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:20:59,134 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:20:59,135 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([9.8995e-02, 4.9255e-02, 4.8611e-02, 2.0427e-02, 3.3184e-03, 2.2150e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9668e-02,
        1.3436e-02, 1.2335e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.7100e-02, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        2.7633e-02, 1.3889e-02, 3.3184e-03, 1.1856e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.3816e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0819e-02, 0.0000e+00, 0.0000e+00,
        7.8884e-02, 7.2835e-02, 5.7510e-02, 4.6670e-02, 2.2471e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1899e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.6683e-01, 6.2916e-02, 2.6274e-02, 2.9615e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.8488e-02, 0.0000e+00, 0.0000e+00, 4.0770e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 8.2644e-02, 5.4112e-02, 4.9223e-02,
        2.0295e-02, 9.8877e-03, 3.2043e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.4743e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03,
        0.0000e+00, 0.0000e+00, 1.1622e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9960e-02,
        3.8555e-03, 4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0575e-02, 2.4508e-02,
        1.2286e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.6222e-02,
        1.9917e-02, 1.1820e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.6564e-02, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7184e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        4.6788e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  6.,  6.,  8., -1.,  3.,  3.,
         8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  3., -1.,  8., -1., -1., -1.,
        -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  3.,  8.,  8.,
         8.,  8.,  5.,  6.,  8., -1., -1., -1., -1., -1., -1.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  5.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8.,  5.,  8.,  8.,  8.,  3.,  3.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1.,  3.,  6.,  8.,  8.,  8.,  3.,  3.,  3.,  8.,  8.,  8.,  8.,  3.,
         6.,  6., -1., -1., -1., -1.,  3.,  8.,  3.,  3.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8.,  3.,  8.,  8.,  8., -1., -1., -1., -1.,
        -1., -1.,  8.,  3., -1.,  5., -1.,  3.,  3.,  8.,  8.,  8.,  3.,  8.,
         8.,  3.,  3.,  3.,  3.,  3.,  6.,  8.,  8.,  8.,  8., -1.,  8., -1.,
         8., -1.,  8., -1., -1.,  8., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1.,  3.,  3.,  8.,  8.,  6.,  8., -1., -1.,
         8., -1., -1., -1., -1.,  6.,  8.,  8.]), 'best match scores': tensor([0.9916, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9988, 0.9657,
        0.9998, 1.0000, 0.0000, 1.0000, 0.9976, 1.0000, 0.0729, 0.5815, 0.8320,
        0.9959, 1.0000, 0.9552, 1.0000, 0.9994, 0.0000, 0.7804, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9208, 1.0000, 0.0792, 1.0000, 0.9953, 0.2927, 1.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 0.9998, 1.0000, 0.9999, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0541, 0.9879, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0854,
        1.0000, 1.0000, 0.9959, 1.0000, 1.0000, 0.2502, 1.0000, 1.0000, 0.9838,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9915, 0.9994,
        1.0000, 1.0000, 0.2349, 0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9997, 1.0000, 1.0000, 0.6085, 1.0000, 1.0000, 0.1495, 1.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9948, 1.0000, 0.9942, 0.9947,
        1.0000, 0.0847, 1.0000, 0.0627, 1.0000, 0.9956, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1359, 1.0000, 0.7386,
        0.6913, 0.0583, 0.9994, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.8002, 1.0000, 0.9977, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.9865,
        0.9521, 1.0000, 1.0000, 1.0000, 1.0000, 0.9984, 1.0000, 1.0000, 0.9996,
        0.3727, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        1.0000, 0.0000, 1.0000, 0.0000, 0.2071, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0748, 0.9999, 0.9969, 0.9997, 0.8943, 0.0000,
        0.0000, 0.9999, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.7550,
        1.0000, 1.0000, 0.1361, 0.3285, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.8412, 0.0819, 1.0000, 1.0000, 1.0000, 0.9995, 0.0000, 0.0000, 0.9931,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 15:20:59,163 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.370690
2020-12-06 15:22:15,153 maskrcnn_benchmark.trainer INFO: eta: 2:04:43  iter: 1460  loss: 15.8673 (17.7468)  loss_classifier: 0.8619 (1.2456)  loss_box_reg: 0.4544 (1.0996)  loss_objectness: 12.3316 (12.5468)  loss_rpn_box_reg: 0.3359 (2.8548)  time: 3.8066 (4.8592)  data: 0.1458 (1.2522)  lr: 0.000000  max mem: 1313
2020-12-06 15:23:31,105 maskrcnn_benchmark.trainer INFO: eta: 2:02:44  iter: 1480  loss: 18.4844 (17.7631)  loss_classifier: 1.5917 (1.2575)  loss_box_reg: 0.8841 (1.0993)  loss_objectness: 12.0483 (12.5434)  loss_rpn_box_reg: 0.3993 (2.8630)  time: 3.7929 (4.8449)  data: 0.1376 (1.2372)  lr: 0.000000  max mem: 1313
2020-12-06 15:23:31,107 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:23:31,160 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:24:14,189 maskrcnn_benchmark.inference INFO: Total run time: 0:00:43.029523 (1.4837766433584278 s / img per device, on 1 devices)
2020-12-06 15:24:14,190 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.254359 (1.4225641119069066 s / img per device, on 1 devices)
2020-12-06 15:24:14,190 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:24:15,970 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:24:15,970 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0837, 0.0622, 0.0259, 0.0038, 0.0032, 0.0025, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0431, 0.0199, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0056, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0003, 0.0000, 0.0000,
        0.0724, 0.0595, 0.0238, 0.0238, 0.0032, 0.0017, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1104, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0095, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000,
        0.1124, 0.0558, 0.0276, 0.0032, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0195, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.2415, 0.1381, 0.0387, 0.0158, 0.0082, 0.0030, 0.0022,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0625, 0.0580, 0.0236, 0.0037, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0292, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0305, 0.0000, 0.0000, 0.0214, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0388, 0.0342, 0.0230, 0.0198,
        0.0033, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0164, 0.0040,
        0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0573,
        0.0199, 0.0040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0099, 0.0000, 0.0000, 0.0072, 0.0000, 0.0000, 0.0508, 0.0037, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  6.,  6.,  8., -1.,  3.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  3.,  8.,  8.,  8.,
         8.,  5.,  3.,  5.,  8.,  3., -1., -1., -1., -1.,  8.,  3.,  3.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  6.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         3.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,
         5.,  6.,  8.,  8.,  8.,  8., -1., -1.,  8.,  8.,  3.,  8., -1., -1.,
         8.,  8., -1.,  8., -1.,  3.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8.,  3.,  6.,  8.,  3., -1., -1., -1.,  8.,
         8.,  8.,  8., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,
         8., -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  3.,
         8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8.,  3.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         3.,  8.,  8., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1.,  3.,  3.,  3.,  6.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.0000, 1.0000, 1.0000, 0.3204, 1.0000, 1.0000, 0.5487, 0.9658,
        1.0000, 0.7840, 0.0000, 0.4251, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.6314, 0.9685, 0.3637, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9929, 1.0000, 0.9940, 1.0000, 0.9999, 0.9993, 1.0000,
        1.0000, 0.7761, 0.9745, 1.0000, 0.9995, 1.0000, 1.0000, 0.6464, 0.7733,
        0.9982, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.5531, 1.0000, 1.0000, 0.9998, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.5896, 1.0000, 0.9421,
        1.0000, 0.9999, 1.0000, 1.0000, 0.8759, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9943, 1.0000, 0.9999, 0.0963, 0.9921, 0.2642, 1.0000, 0.9718, 1.0000,
        0.0934, 0.7358, 1.0000, 1.0000, 0.9978, 0.9989, 0.1026, 1.0000, 0.0509,
        0.4182, 1.0000, 1.0000, 0.1119, 1.0000, 0.0882, 1.0000, 0.9965, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9998, 1.0000, 1.0000, 0.2894, 0.3855, 1.0000,
        0.8828, 0.0000, 0.0000, 1.0000, 0.9998, 1.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 0.7963, 0.0000, 0.2078, 0.0000, 0.9318, 0.7856, 1.0000, 1.0000,
        0.9866, 1.0000, 1.0000, 0.7149, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.5319, 1.0000, 0.1846, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.9686, 1.0000, 0.0000, 0.0000, 1.0000, 0.3068, 0.9998,
        1.0000, 1.0000, 0.7862, 1.0000, 0.9615, 1.0000, 0.1396, 0.0000, 0.0000,
        0.9998, 1.0000, 1.0000, 0.7202, 0.7085, 1.0000, 0.6448, 1.0000, 1.0000,
        1.0000, 0.1755, 0.5126, 0.8768, 0.1556, 0.9997, 1.0000, 0.8243, 1.0000,
        0.2696, 1.0000, 1.0000, 0.2984, 1.0000, 1.0000, 0.8847, 0.9289, 0.0000,
        0.0000, 1.0000, 0.9834, 0.9996, 1.0000, 0.9999, 1.0000, 1.0000, 0.9999,
        0.9918, 1.0000, 0.8491, 0.2434, 1.0000, 1.0000, 0.0000, 0.0000, 0.9971,
        1.0000, 1.0000, 0.6493, 0.9997, 1.0000, 0.0603, 0.0000, 0.0000, 0.0688,
        0.0000, 0.9997, 1.0000, 0.9999, 1.0000, 0.1129, 0.9994]), 'num_pos': 232}
2020-12-06 15:24:15,998 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.478448
2020-12-06 15:25:30,483 maskrcnn_benchmark.trainer INFO: eta: 2:01:29  iter: 1500  loss: 15.5098 (17.7529)  loss_classifier: 0.8939 (1.2571)  loss_box_reg: 0.5850 (1.0935)  loss_objectness: 13.1893 (12.5458)  loss_rpn_box_reg: 0.2484 (2.8565)  time: 3.7188 (4.8599)  data: 0.1420 (1.2525)  lr: 0.000000  max mem: 1313
2020-12-06 15:26:44,955 maskrcnn_benchmark.trainer INFO: eta: 1:59:30  iter: 1520  loss: 16.3278 (17.7606)  loss_classifier: 0.7284 (1.2555)  loss_box_reg: 0.7601 (1.0914)  loss_objectness: 12.4785 (12.5417)  loss_rpn_box_reg: 0.3239 (2.8720)  time: 3.7245 (4.8449)  data: 0.1394 (1.2379)  lr: 0.000000  max mem: 1313
2020-12-06 15:26:44,957 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:26:45,010 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:27:27,377 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.366825 (1.4609249953565926 s / img per device, on 1 devices)
2020-12-06 15:27:27,377 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.622535 (1.400777085074063 s / img per device, on 1 devices)
2020-12-06 15:27:27,377 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:27:29,157 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:27:29,157 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([6.3036e-02, 2.9764e-02, 1.6786e-02, 3.1493e-03, 2.8212e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.2866e-02,
        1.9871e-02, 3.7950e-03, 4.7867e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.8705e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 1.9809e-02, 3.3184e-03, 3.2062e-03, 2.3177e-03, 7.4840e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1650e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2239e-02, 0.0000e+00, 0.0000e+00,
        7.4961e-02, 6.0275e-02, 5.7191e-02, 2.2471e-02, 1.2972e-02, 3.1693e-03,
        2.8042e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.5255e-01, 9.3894e-02, 6.4644e-02, 3.8685e-02,
        2.8703e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 8.1424e-02, 0.0000e+00, 0.0000e+00, 4.1444e-02,
        1.5751e-02, 1.0306e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.1672e-02, 5.0910e-02, 2.3191e-02,
        1.1804e-02, 3.1609e-03, 1.5687e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.5259e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0826e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.6697e-02,
        2.2259e-02, 1.9771e-02, 3.8555e-03, 3.3979e-03, 7.1655e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.9949e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 3.9356e-02, 3.3514e-02, 1.5627e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9699e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7693e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7478e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        8.9808e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  3.,  5.,  8.,  3.,  8.,  8.,  6.,  6.,  8.,  8., -1., -1.,  8.,
         8.,  6.,  8.,  3.,  8.,  8.,  8.,  8.,  3.,  3.,  3.,  6.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  6.,  3.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1.,  3.,  6.,
         8.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,
        -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  3.,  8.,  8.,  8.,
         5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1., -1.,  3.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1., -1.,  3.,  3.,  8.,  8.,  5.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  8.,  8., -1., -1.,  3.,  3.,  6.,  8.,  3.,  8.,
         8.,  3.,  8.,  8.,  3.,  6.,  8.,  3.,  8.,  8.,  8., -1., -1., -1.,
         3.,  8.,  3.,  6.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  3.,
         6., -1., -1.,  8.,  5.,  5.,  6.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  5.,  8., -1., -1.,
         8., -1.,  3.,  3.,  5.,  6.,  8.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 0.8749, 1.0000, 0.2425, 1.0000, 0.9834, 1.0000, 1.0000,
        0.7172, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.8099, 1.0000, 0.9853,
        1.0000, 0.0616, 0.5409, 0.6852, 0.9942, 0.4805, 0.9887, 1.0000, 0.5195,
        0.9999, 1.0000, 0.9983, 1.0000, 0.3638, 1.0000, 0.8071, 0.9988, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 0.9999, 0.9980, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 0.9763, 0.9788, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9816, 0.5191, 0.9282,
        1.0000, 0.9875, 1.0000, 1.0000, 0.9986, 1.0000, 0.9999, 1.0000, 0.1411,
        1.0000, 0.3088, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.0825,
        1.0000, 1.0000, 1.0000, 0.9993, 0.9979, 1.0000, 1.0000, 1.0000, 0.9533,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0835, 1.0000, 0.4339, 1.0000,
        1.0000, 1.0000, 0.9992, 0.9994, 1.0000, 0.9993, 1.0000, 1.0000, 0.6579,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9742, 0.7216,
        0.9994, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.6510, 1.0000, 0.9996,
        0.9999, 0.2740, 1.0000, 0.9434, 0.9998, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.2754, 0.1050, 1.0000, 0.8684, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9993, 0.8997, 1.0000, 1.0000, 1.0000, 0.0512, 0.0000, 0.0000,
        0.9645, 1.0000, 0.9982, 1.0000, 0.9950, 1.0000, 1.0000, 0.9997, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.4515, 0.9487, 0.8972, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9999, 0.9943, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9984, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9904, 1.0000, 1.0000,
        0.3623, 0.9239, 1.0000, 0.1272, 1.0000, 0.9961, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9999, 1.0000, 0.9976, 1.0000, 0.0000, 0.0000, 0.9229,
        0.0000, 1.0000, 0.9997, 1.0000, 0.9406, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 15:27:29,186 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.443966
2020-12-06 15:28:43,537 maskrcnn_benchmark.trainer INFO: eta: 1:58:14  iter: 1540  loss: 15.1613 (17.7427)  loss_classifier: 1.0663 (1.2561)  loss_box_reg: 0.4618 (1.0849)  loss_objectness: 12.3741 (12.5360)  loss_rpn_box_reg: 0.2485 (2.8657)  time: 3.7175 (4.8590)  data: 0.1389 (1.2524)  lr: 0.000000  max mem: 1313
2020-12-06 15:29:58,533 maskrcnn_benchmark.trainer INFO: eta: 1:56:16  iter: 1560  loss: 14.7622 (17.7188)  loss_classifier: 0.8323 (1.2545)  loss_box_reg: 0.6482 (1.0795)  loss_objectness: 12.4746 (12.5373)  loss_rpn_box_reg: 0.0807 (2.8476)  time: 3.7321 (4.8448)  data: 0.1399 (1.2381)  lr: 0.000000  max mem: 1313
2020-12-06 15:29:58,535 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:29:58,593 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:30:41,727 maskrcnn_benchmark.inference INFO: Total run time: 0:00:43.133781 (1.4873717571127003 s / img per device, on 1 devices)
2020-12-06 15:30:41,728 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.363192 (1.4263169518832504 s / img per device, on 1 devices)
2020-12-06 15:30:41,728 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:30:43,563 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:30:43,564 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0420, 0.0394, 0.0038, 0.0034, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0565, 0.0199, 0.0166, 0.0038, 0.0005, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0493, 0.0426, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0041, 0.0000, 0.0000,
        0.0728, 0.0482, 0.0374, 0.0265, 0.0032, 0.0020, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0095, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0064, 0.0000, 0.0000,
        0.0632, 0.0252, 0.0099, 0.0036, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1764, 0.0406, 0.0134, 0.0031, 0.0017, 0.0004, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0164, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0644, 0.0239, 0.0035, 0.0030, 0.0028, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0054, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0210, 0.0039, 0.0031, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0346, 0.0064,
        0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0260,
        0.0040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0428, 0.0000, 0.0000, 0.0056, 0.0000, 0.0000, 0.0207, 0.0037, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1.,  3.,  8.,  8.,  8.,  8.,  3.,  6.,  6.,  8., -1.,  8.,  3.,
         8., -1.,  8.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  6.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  3.,  3.,  8.,  8.,
         8.,  8.,  8., -1.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  5.,  6.,  6.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,
        -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  3.,  3.,  8.,  5.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,  5.,  6.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  3.,
         6.,  6., -1., -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8.,  3.,  8.,  8.,  8., -1., -1., -1., -1.,
        -1.,  8.,  8.,  3.,  5.,  6., -1., -1.,  8.,  8., -1.,  8., -1., -1.,
         6., -1., -1., -1.,  3.,  5.,  6.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  8.,  8., -1.,  3.,  8., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,
         8., -1., -1.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  3.,  8.,  5.,  6.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 1.0000, 0.9773, 1.0000, 1.0000, 1.0000, 0.9997, 0.9999,
        0.5233, 0.9686, 0.0000, 1.0000, 0.9887, 1.0000, 0.0000, 1.0000, 1.0000,
        0.1869, 0.1113, 0.0851, 1.0000, 0.9738, 0.1638, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.1131, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9998,
        0.9991, 0.0000, 1.0000, 1.0000, 0.9930, 1.0000, 0.9947, 0.8433, 0.9999,
        0.9598, 0.1675, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1231, 0.9742,
        1.0000, 0.9990, 0.9961, 0.3956, 0.9683, 0.0000, 0.3563, 1.0000, 1.0000,
        1.0000, 0.4857, 0.9902, 1.0000, 0.9989, 1.0000, 0.8511, 0.1673, 1.0000,
        0.1267, 1.0000, 1.0000, 0.6314, 1.0000, 0.8617, 1.0000, 0.2873, 0.9497,
        0.0576, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 0.9330, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9637, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9996, 0.7837, 0.9377, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.2648, 0.3259,
        0.9976, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9974, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.5880, 0.9986, 0.9875, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.9999, 0.2263, 1.0000, 0.0000, 0.0000,
        0.9999, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0750, 0.0000, 0.0000,
        0.0000, 0.9983, 0.2838, 1.0000, 1.0000, 1.0000, 0.9895, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9999, 1.0000, 1.0000, 0.9857, 0.8911, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.9673, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0808, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.8250, 1.0000, 0.9788, 1.0000, 0.9999,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0540]), 'num_pos': 232}
2020-12-06 15:30:43,591 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.443966
2020-12-06 15:31:58,350 maskrcnn_benchmark.trainer INFO: eta: 1:55:00  iter: 1580  loss: 15.5690 (17.6989)  loss_classifier: 1.1000 (1.2609)  loss_box_reg: 0.6625 (1.0768)  loss_objectness: 12.6209 (12.5357)  loss_rpn_box_reg: 0.2672 (2.8255)  time: 3.7213 (4.8593)  data: 0.1423 (1.2528)  lr: 0.000000  max mem: 1313
2020-12-06 15:33:13,385 maskrcnn_benchmark.trainer INFO: eta: 1:53:03  iter: 1600  loss: 16.9168 (17.6963)  loss_classifier: 1.7921 (1.2730)  loss_box_reg: 1.0546 (1.0786)  loss_objectness: 12.4802 (12.5330)  loss_rpn_box_reg: 0.4651 (2.8117)  time: 3.7245 (4.8455)  data: 0.1383 (1.2388)  lr: 0.000000  max mem: 1313
2020-12-06 15:33:13,386 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:33:13,443 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:33:55,994 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.551107 (1.4672795657453865 s / img per device, on 1 devices)
2020-12-06 15:33:55,995 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.791036 (1.4065874609453926 s / img per device, on 1 devices)
2020-12-06 15:33:55,995 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:33:57,770 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:33:57,770 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0259, 0.0038, 0.0012, 0.0004, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0681, 0.0349, 0.0315, 0.0031, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0072, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0410, 0.0000, 0.0000,
        0.0264, 0.0099, 0.0036, 0.0033, 0.0012, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0202, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0422, 0.0000, 0.0000, 0.0108, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0053, 0.0000, 0.0000,
        0.0842, 0.0301, 0.0100, 0.0036, 0.0022, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1069, 0.0335, 0.0032, 0.0001, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0103, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0551, 0.0239, 0.0099, 0.0036, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0267, 0.0195, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0106, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0584, 0.0217, 0.0039, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0681, 0.0596,
        0.0197, 0.0091, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0175,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0104,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0126, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000, 0.0037, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1., -1.,  3.,  6.,  8.,  3.,  8.,  8., -1.,  3.,  4.,  8.,  8.,  5.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1., -1., -1.,
         8.,  8.,  8., -1., -1.,  8., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1.,  3.,  8.,  3.,  8.,  8.,  3.,  8.,  8., -1.,
         3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  3.,  3.,
         3.,  8.,  3.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  8.,  8.,  8.,  3.,  3.,
         3.,  8., -1.,  8., -1., -1., -1.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8.,  3.,  8.,  8.,  8., -1., -1., -1.,  8.,
        -1.,  5.,  8.,  5.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,
         8., -1.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1., -1.,  8.,  3.,  6.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,
         8., -1., -1.,  8.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1., -1.,  8.,  3.,  8., -1., -1.,
         8., -1., -1., -1.,  6.,  8.,  8.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 0.6538, 0.9999, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9987, 0.9998, 1.0000, 0.4893, 0.9998, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9714, 1.0000, 1.0000, 0.9998, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9999, 1.0000, 0.9993, 0.0514, 1.0000, 0.0779,
        0.0000, 0.9999, 0.9955, 1.0000, 1.0000, 0.1784, 1.0000, 0.1511, 0.3994,
        0.9973, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.7271, 1.0000, 0.0000, 0.0000, 0.9944, 0.0000,
        0.0000, 0.0000, 0.9999, 1.0000, 0.4795, 1.0000, 1.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.9131, 0.9968, 0.0706, 1.0000, 0.7153, 1.0000,
        1.0000, 1.0000, 0.0000, 0.8314, 0.3561, 1.0000, 1.0000, 0.1144, 1.0000,
        0.9999, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9415, 0.7627, 0.9968,
        0.0843, 1.0000, 0.9119, 1.0000, 1.0000, 0.7331, 0.4236, 0.9599, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.7246, 0.9989,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.6239, 1.0000, 1.0000,
        0.6700, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9505, 0.6797,
        0.6192, 0.9995, 1.0000, 0.9996, 0.9275, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9991, 0.0614, 0.8287, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 1.0000, 1.0000, 0.9976, 1.0000, 1.0000, 0.9995, 1.0000,
        1.0000, 1.0000, 0.2764, 0.7236, 0.9987, 1.0000, 1.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 0.3324, 1.0000, 1.0000, 0.7056, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9989, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.5684, 1.0000, 0.9999, 1.0000, 0.9337, 0.0000,
        0.0000, 0.9998, 0.9662, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 0.9998,
        0.3963, 0.9999, 0.8534, 1.0000, 0.0859, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9707, 0.9927, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9999, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 15:33:57,796 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.400862
2020-12-06 15:35:12,677 maskrcnn_benchmark.trainer INFO: eta: 1:51:45  iter: 1620  loss: 16.3269 (17.6869)  loss_classifier: 0.8181 (1.2715)  loss_box_reg: 0.7459 (1.0787)  loss_objectness: 13.5766 (12.5431)  loss_rpn_box_reg: 0.1046 (2.7936)  time: 3.7153 (4.8593)  data: 0.1423 (1.2527)  lr: 0.000000  max mem: 1313
2020-12-06 15:36:26,835 maskrcnn_benchmark.trainer INFO: eta: 1:49:49  iter: 1640  loss: 15.7755 (17.6823)  loss_classifier: 0.6906 (1.2761)  loss_box_reg: 0.6492 (1.0754)  loss_objectness: 13.0741 (12.5420)  loss_rpn_box_reg: 0.0288 (2.7887)  time: 3.7072 (4.8452)  data: 0.1374 (1.2391)  lr: 0.000000  max mem: 1313
2020-12-06 15:36:26,837 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:36:26,890 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:37:09,149 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.259023 (1.457207704412526 s / img per device, on 1 devices)
2020-12-06 15:37:09,150 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.598020 (1.3999317267845417 s / img per device, on 1 devices)
2020-12-06 15:37:09,150 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:37:10,899 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:37:10,899 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.7485e-02, 4.5496e-02, 2.5809e-02, 3.8049e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.8217e-02,
        1.9871e-02, 3.7950e-03, 4.7867e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.1588e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 9.8877e-03, 3.6536e-03, 3.2550e-03, 2.9483e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.5327e-03, 0.0000e+00, 0.0000e+00,
        7.6070e-02, 2.4975e-02, 9.8877e-03, 3.6216e-03, 3.2062e-03, 1.3513e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.2607e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.4028e-01, 1.2843e-01, 5.6086e-02, 4.2395e-02,
        4.0978e-02, 8.8036e-03, 2.9615e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.5348e-02, 2.3927e-02, 7.3445e-03,
        6.9766e-03, 3.1609e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.7062e-03,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.5994e-02,
        1.9960e-02, 4.0037e-03, 3.3184e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2286e-02, 9.3528e-03,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9699e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7327e-02, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.2942e-02, 0.0000e+00, 0.0000e+00,
        6.4681e-03, 0.0000e+00, 0.0000e+00, 1.8432e-02, 8.9869e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8., -1., -1.,  8., -1.,  8.,  8.,  3.,  8.,  8.,  8., -1., -1.,  8.,
         8., -1.,  8.,  3.,  6.,  8.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  5.,  8.,  8.,  8.,
         8.,  5.,  3.,  6.,  8., -1., -1., -1., -1., -1., -1., -1.,  3.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  3.,  8.,  8.,  8.,  6.,  3.,  8.,  8., -1.,
        -1., -1.,  3.,  5.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
         3.,  6.,  8.,  8.,  8., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,
         8.,  8.,  8.,  5.,  8.,  8., -1., -1.,  8.,  8., -1., -1.,  3.,  8.,
         8., -1., -1., -1., -1., -1., -1., -1.,  3.,  6.,  8., -1., -1., -1.,
        -1.,  8., -1., -1., -1.,  8., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  6.,  8., -1., -1.,
        -1., -1., -1.,  5.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9125,
        0.1966, 1.0000, 0.0000, 0.0000, 1.0000, 0.9089, 0.0000, 1.0000, 0.6198,
        1.0000, 0.6561, 1.0000, 0.6498, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.9994, 1.0000, 0.9739, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0514, 1.0000, 1.0000, 1.0000, 1.0000, 0.4983, 1.0000,
        1.0000, 0.9343, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.8860, 0.9967, 0.3339, 0.9998, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9652, 1.0000, 1.0000, 0.7773, 0.9918, 1.0000, 0.1905, 1.0000,
        0.6817, 0.0000, 0.0000, 1.0000, 0.9861, 1.0000, 1.0000, 1.0000, 1.0000,
        0.8931, 0.6899, 0.0000, 0.0000, 0.0000, 0.9989, 0.5353, 0.9999, 1.0000,
        1.0000, 0.9999, 1.0000, 1.0000, 0.9975, 1.0000, 0.6699, 1.0000, 0.9961,
        1.0000, 0.0542, 1.0000, 1.0000, 0.9886, 0.0919, 1.0000, 0.3614, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9793, 0.8297, 0.9998,
        0.3488, 1.0000, 0.0000, 0.0000, 0.2641, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.7020, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.5799, 1.0000, 1.0000, 0.2990, 1.0000, 0.4967, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.4763, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.1342, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9980, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9999, 1.0000, 0.9245, 0.4512, 0.0000,
        0.0000, 1.0000, 0.0000, 1.0000, 0.2463, 1.0000, 1.0000, 0.9104, 0.9999,
        1.0000, 0.0740, 0.4658, 0.3467, 0.8788, 0.9022, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9922, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9996, 0.0558, 0.9997, 0.9985, 1.0000]), 'num_pos': 232}
2020-12-06 15:37:10,927 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.392241
2020-12-06 15:38:26,826 maskrcnn_benchmark.trainer INFO: eta: 1:48:31  iter: 1660  loss: 16.4436 (17.6873)  loss_classifier: 1.4846 (1.2847)  loss_box_reg: 0.6831 (1.0721)  loss_objectness: 11.9086 (12.5385)  loss_rpn_box_reg: 0.6011 (2.7921)  time: 3.7717 (4.8591)  data: 0.1419 (1.2525)  lr: 0.000000  max mem: 1313
2020-12-06 15:39:41,527 maskrcnn_benchmark.trainer INFO: eta: 1:46:36  iter: 1680  loss: 15.8612 (17.6807)  loss_classifier: 0.8797 (1.2832)  loss_box_reg: 0.5295 (1.0672)  loss_objectness: 12.9113 (12.5415)  loss_rpn_box_reg: 0.2847 (2.7888)  time: 3.7210 (4.8458)  data: 0.1441 (1.2393)  lr: 0.000000  max mem: 1313
2020-12-06 15:39:41,529 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:39:41,590 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:40:25,104 maskrcnn_benchmark.inference INFO: Total run time: 0:00:43.514485 (1.5004994787018875 s / img per device, on 1 devices)
2020-12-06 15:40:25,105 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.749977 (1.439654383166083 s / img per device, on 1 devices)
2020-12-06 15:40:25,105 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:40:26,911 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:40:26,911 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.6586e-02, 3.3637e-02, 3.8319e-03, 3.1731e-03, 1.2669e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        1.8094e-02, 3.7950e-03, 4.7867e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 1.0144e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.6246e-03, 0.0000e+00, 0.0000e+00,
        5.5333e-02, 4.1073e-02, 2.3823e-02, 3.2784e-03, 3.1375e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.7949e-02,
        5.4299e-02, 1.8535e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.6220e-03, 0.0000e+00, 0.0000e+00,
        7.9502e-02, 6.6217e-02, 5.0589e-02, 2.9360e-02, 2.2471e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.1053e-01, 1.0689e-01, 3.1729e-02, 8.8036e-03,
        3.0755e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.4715e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1874e-01, 5.8147e-02, 4.9971e-02,
        2.2885e-02, 9.8877e-03, 3.5240e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 1.7371e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.8027e-03,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.9818e-02,
        1.9960e-02, 3.6301e-03, 1.2856e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.9314e-02, 5.3078e-02,
        2.2753e-02, 1.2286e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.9597e-02,
        2.3046e-02, 3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.9807e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        4.1168e-02, 0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.0833e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  6.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,
         8.,  3.,  8.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  3.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1.,  3.,  8.,  8.,  6.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8.,  3.,  3.,  8.,  8., -1., -1.,  8.,  3.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,  3.,  3.,
         5.,  6.,  8.,  8.,  8.,  3.,  3.,  3.,  8.,  8.,  8.,  8.,  6.,  3.,
         8.,  8.,  8., -1., -1., -1., -1.,  8.,  3.,  8.,  8.,  8.,  8.,  3.,
        -1., -1., -1., -1., -1.,  8.,  3.,  8.,  8.,  8., -1., -1.,  3.,  3.,
         8.,  8.,  8.,  5.,  6.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,
         8.,  3.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1.,
        -1.,  8.,  8., -1.,  8.,  8., -1., -1., -1., -1., -1.,  3.,  8.,  6.,
         8., -1., -1.,  8., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  3.,  8.,  3.,  8., -1., -1.,
         8., -1., -1.,  3.,  5.,  6.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.0926, 1.0000, 0.9907, 0.9878, 1.0000, 1.0000, 0.9998, 1.0000,
        1.0000, 0.9989, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.1833, 0.9914, 0.9999, 0.2486, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9998, 0.4426, 0.3039,
        1.0000, 1.0000, 1.0000, 0.9673, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.1963, 0.0000, 0.0000, 0.5767, 0.9205, 1.0000,
        1.0000, 0.0923, 0.9979, 0.9800, 0.9953, 0.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 0.9998, 1.0000, 0.5178, 0.9999, 1.0000, 1.0000,
        0.8532, 1.0000, 1.0000, 1.0000, 0.9998, 1.0000, 1.0000, 1.0000, 0.9990,
        1.0000, 0.9999, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9461, 1.0000,
        0.9371, 0.3255, 0.9921, 0.0000, 0.0000, 1.0000, 0.9532, 0.8888, 0.9963,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.7869, 0.0000,
        0.0000, 1.0000, 0.9438, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9999, 1.0000, 0.9626, 1.0000, 1.0000, 0.8753, 0.9999,
        1.0000, 1.0000, 0.3814, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9998, 1.0000, 0.1007, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9896, 0.3011, 1.0000, 0.3745, 1.0000, 0.0000, 0.0000, 0.9980,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9978, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 0.8121, 0.9997, 1.0000,
        0.9814, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.9985, 0.9980, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9207, 1.0000, 0.9999, 1.0000, 0.0000,
        0.0000, 0.0514, 0.0000, 1.0000, 0.3675, 1.0000, 1.0000, 1.0000, 1.0000,
        0.2963, 0.9996, 0.7075, 0.9973, 1.0000, 0.9987, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9788, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.9869, 0.9985, 1.0000, 0.9998, 0.9966]), 'num_pos': 232}
2020-12-06 15:40:26,940 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.452586
2020-12-06 15:41:43,898 maskrcnn_benchmark.trainer INFO: eta: 1:45:18  iter: 1700  loss: 16.2231 (17.6918)  loss_classifier: 1.0872 (1.2862)  loss_box_reg: 0.6607 (1.0663)  loss_objectness: 11.8900 (12.5335)  loss_rpn_box_reg: 0.4435 (2.8059)  time: 3.8567 (4.8607)  data: 0.1404 (1.2532)  lr: 0.000000  max mem: 1313
2020-12-06 15:43:00,806 maskrcnn_benchmark.trainer INFO: eta: 1:43:26  iter: 1720  loss: 15.7365 (17.6966)  loss_classifier: 0.7062 (1.2883)  loss_box_reg: 0.6248 (1.0629)  loss_objectness: 13.4204 (12.5384)  loss_rpn_box_reg: 0.0692 (2.8071)  time: 3.8536 (4.8489)  data: 0.1487 (1.2404)  lr: 0.000000  max mem: 1313
2020-12-06 15:43:00,808 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:43:00,863 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:43:44,453 maskrcnn_benchmark.inference INFO: Total run time: 0:00:43.589539 (1.5030875617060169 s / img per device, on 1 devices)
2020-12-06 15:43:44,453 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.814813 (1.4418901081742912 s / img per device, on 1 devices)
2020-12-06 15:43:44,453 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:43:46,189 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:43:46,189 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([1.8083e-02, 3.8553e-03, 3.2180e-03, 2.2752e-03, 2.1154e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.2626e-02,
        3.7950e-03, 4.7867e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 7.3386e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.8215e-03, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 9.8877e-03, 3.6216e-03, 3.4049e-03, 3.2130e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.8139e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        6.5501e-02, 2.8864e-02, 2.5186e-02, 3.3184e-03, 3.2438e-03, 2.4424e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.7739e-01, 7.1984e-02, 6.9465e-02, 4.0593e-02,
        2.7981e-02, 3.0755e-03, 2.5306e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.8459e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.5413e-02, 6.3849e-02, 5.9280e-02,
        2.2885e-02, 3.5240e-03, 2.8904e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3258e-03,
        0.0000e+00, 0.0000e+00, 1.0338e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.8912e-02,
        6.2105e-02, 2.2755e-02, 3.8555e-03, 4.0319e-05, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.8306e-02, 5.2360e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 4.2144e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.5146e-02,
        3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.4805e-02, 3.4864e-02, 1.6408e-02, 3.7184e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.4733e-02, 0.0000e+00, 0.0000e+00,
        8.9011e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7184e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        4.6592e-02, 2.7751e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1., -1., -1.,
         8.,  6.,  8.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  6.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1., -1., -1.,  3.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1.,  8.,  8.,  3.,  8.,  8.,  3.,  3.,  8., -1.,
        -1.,  3.,  3.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1.,  5.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,  8.,  8.,  8.,  3.,  3.,
         6.,  6., -1., -1., -1., -1., -1., -1., -1.,  8.,  8.,  6.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8., -1., -1.,  3.,  8., -1.,  5.,  6.,  8.,
         8.,  8.,  8.,  3.,  8.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8., -1.,  8., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8., -1.,  3., -1.,
        -1.,  8., -1., -1.,  8.,  8.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8., -1.,  8., -1.,  8.,
         8., -1., -1., -1., -1., -1.,  8.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0520, 1.0000, 0.9990, 1.0000, 1.0000, 1.0000, 0.5973,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.7567, 0.0986, 1.0000,
        1.0000, 0.9995, 0.0572, 0.9416, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.2324, 0.7658, 0.9990, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9553, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.9975, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0596, 0.6179, 1.0000, 1.0000, 0.8929, 1.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.1764, 0.9857, 1.0000, 0.2674,
        0.2185, 1.0000, 0.0000, 0.0000, 0.9434, 0.1194, 1.0000, 1.0000, 1.0000,
        0.1927, 0.3032, 1.0000, 1.0000, 1.0000, 1.0000, 0.8406, 1.0000, 1.0000,
        0.3729, 1.0000, 0.9849, 0.9996, 0.9835, 1.0000, 0.5367, 0.7242, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0855, 1.0000, 0.8849, 1.0000, 1.0000, 1.0000,
        0.1000, 0.0000, 0.0000, 0.9983, 0.9195, 1.0000, 1.0000, 0.9989, 0.9745,
        1.0000, 0.0516, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0648, 1.0000, 0.9999, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.1487, 1.0000, 0.0000, 1.0000, 0.9768,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.3270, 0.0000, 0.0000,
        0.9997, 1.0000, 0.0699, 1.0000, 0.9961, 1.0000, 0.9998, 0.0000, 1.0000,
        0.0000, 0.0000, 0.9993, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.2611, 0.0000, 0.0000, 0.5269, 0.0000, 0.0000, 1.0000, 1.0000, 0.4444,
        1.0000, 0.9991, 0.5556, 0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.9927, 1.0000, 1.0000, 0.9998, 1.0000,
        1.0000, 0.1223, 1.0000, 0.2259, 0.5712, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 15:43:46,216 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.413793
2020-12-06 15:45:02,486 maskrcnn_benchmark.trainer INFO: eta: 1:42:07  iter: 1740  loss: 15.7447 (17.6865)  loss_classifier: 0.7938 (1.2879)  loss_box_reg: 0.5145 (1.0578)  loss_objectness: 12.8253 (12.5438)  loss_rpn_box_reg: 0.1309 (2.7970)  time: 3.8332 (4.8631)  data: 0.1393 (1.2538)  lr: 0.000000  max mem: 1313
2020-12-06 15:46:18,029 maskrcnn_benchmark.trainer INFO: eta: 1:40:14  iter: 1760  loss: 15.0799 (17.6780)  loss_classifier: 0.6649 (1.2855)  loss_box_reg: 0.6919 (1.0549)  loss_objectness: 12.4900 (12.5429)  loss_rpn_box_reg: 0.0802 (2.7947)  time: 3.7728 (4.8508)  data: 0.1403 (1.2411)  lr: 0.000000  max mem: 1313
2020-12-06 15:46:18,031 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:46:18,082 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:47:01,747 maskrcnn_benchmark.inference INFO: Total run time: 0:00:43.664580 (1.5056751760943183 s / img per device, on 1 devices)
2020-12-06 15:47:01,747 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.853393 (1.4432204591816868 s / img per device, on 1 devices)
2020-12-06 15:47:01,747 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:47:03,495 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:47:03,495 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0648, 0.0591, 0.0204, 0.0200, 0.0032, 0.0031, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0528, 0.0199, 0.0072, 0.0038, 0.0005, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0070, 0.0000, 0.0000, 0.0286, 0.0165, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000,
        0.1244, 0.0693, 0.0429, 0.0238, 0.0033, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0155, 0.0000, 0.0000, 0.0419, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0290, 0.0000, 0.0000,
        0.0429, 0.0237, 0.0037, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1456, 0.0871, 0.0173, 0.0030, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0328, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0503, 0.0327, 0.0248, 0.0099, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0044, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0058, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0655, 0.0502, 0.0198, 0.0039,
        0.0033, 0.0003, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0963, 0.0197,
        0.0123, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0572, 0.0158,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0040,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0037, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0186, 0.0000, 0.0000, 0.0039, 0.0000, 0.0000, 0.0207, 0.0037, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0410, 0.0165, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  6.,  6.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  3.,  3.,  8.,
         8.,  8.,  8.,  3.,  6.,  8.,  8.,  8.,  8., -1.,  8.,  8., -1., -1.,
        -1., -1.,  6.,  8.,  8.,  8.,  8.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1., -1., -1.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1.,  3.,  8.,  8.,  8.,  6.,  6.,  6.,  8., -1.,
        -1., -1., -1., -1.,  8., -1., -1.,  8., -1., -1., -1.,  8., -1.,  8.,
         3.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  8.,  3.,  6.,
         8.,  8.,  8.,  8.,  8.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1.,  3., -1., -1., -1.,  8., -1., -1.,  8.,  8.,  8.,  8.,
        -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  5.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1.,  8.,  3.,  3.,  3.,  6.,
         8., -1., -1.,  8.,  3.,  5.,  6.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  8., -1.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  6.,
         8., -1., -1.,  8.,  3.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  3.,  8., -1., -1.,
         8.,  3.,  3.,  3.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 0.8364, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.4222, 1.0000, 0.9462,
        0.9997, 0.8948, 0.0614, 0.9996, 1.0000, 0.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9965, 1.0000,
        1.0000, 1.0000, 0.9171, 0.0585, 0.9991, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9989, 1.0000, 0.9426, 0.7431, 0.6204, 0.0000, 0.0000, 1.0000, 0.1977,
        1.0000, 0.6631, 0.9846, 0.2046, 1.0000, 0.1671, 1.0000, 0.9963, 0.9733,
        0.0000, 0.0000, 0.0000, 0.5032, 1.0000, 0.9999, 1.0000, 0.9999, 0.9997,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0539, 0.0000, 1.0000, 0.0631,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.5411, 0.8958, 1.0000, 0.0000,
        0.1581, 1.0000, 1.0000, 1.0000, 0.8419, 1.0000, 1.0000, 1.0000, 0.9999,
        0.4429, 0.9998, 1.0000, 1.0000, 0.9672, 0.9902, 1.0000, 1.0000, 0.9997,
        0.1285, 1.0000, 0.0000, 0.0814, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.9854, 0.1328, 0.9161, 0.0000, 0.0000, 1.0000, 1.0000,
        0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 0.7705, 1.0000, 0.9979, 1.0000,
        1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 0.9948, 1.0000, 0.0000, 0.9988,
        0.0000, 1.0000, 0.9801, 1.0000, 0.5538, 1.0000, 1.0000, 0.0000, 0.0000,
        0.9253, 1.0000, 0.9975, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 0.9900, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.8312, 1.0000, 1.0000, 1.0000, 0.1688, 1.0000, 0.9988,
        0.0921, 1.0000, 1.0000, 0.1367, 0.9993, 0.9990, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 0.9702, 0.9938, 1.0000, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 15:47:03,522 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.435345
2020-12-06 15:48:19,646 maskrcnn_benchmark.trainer INFO: eta: 1:38:54  iter: 1780  loss: 15.6222 (17.6628)  loss_classifier: 0.8993 (1.2889)  loss_box_reg: 0.6527 (1.0516)  loss_objectness: 11.8356 (12.5383)  loss_rpn_box_reg: 0.1746 (2.7840)  time: 3.7871 (4.8646)  data: 0.1428 (1.2544)  lr: 0.000000  max mem: 1313
2020-12-06 15:49:35,231 maskrcnn_benchmark.trainer INFO: eta: 1:37:03  iter: 1800  loss: 15.9417 (17.6643)  loss_classifier: 0.9445 (1.2904)  loss_box_reg: 0.7299 (1.0507)  loss_objectness: 12.0399 (12.5329)  loss_rpn_box_reg: 0.1273 (2.7902)  time: 3.7793 (4.8525)  data: 0.1401 (1.2420)  lr: 0.000000  max mem: 1313
2020-12-06 15:49:35,233 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:49:35,289 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:50:19,292 maskrcnn_benchmark.inference INFO: Total run time: 0:00:44.002513 (1.5173280485745133 s / img per device, on 1 devices)
2020-12-06 15:50:19,292 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:42.142724 (1.4531973723707527 s / img per device, on 1 devices)
2020-12-06 15:50:19,293 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:50:21,211 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:50:21,211 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.5893e-02, 4.9932e-03, 3.7784e-03, 3.2168e-03, 3.1493e-03, 5.0765e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.3617e-02,
        2.0367e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 4.7933e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        3.5225e-02, 2.3823e-02, 2.3707e-02, 9.8877e-03, 3.2556e-03, 3.1704e-03,
        1.2500e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.6893e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3184e-02, 0.0000e+00, 0.0000e+00,
        9.8877e-03, 3.6216e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.5038e-01, 8.2952e-02, 6.2223e-02, 5.5700e-02,
        4.6612e-02, 9.6297e-03, 9.3173e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 1.8088e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.2016e-02, 2.3927e-02, 1.9589e-02,
        9.8877e-03, 3.5620e-03, 1.0589e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8510e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.0733e-02,
        3.8555e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.6951e-01, 2.3055e-02,
        1.2286e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9699e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7184e-03, 2.0881e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.9654e-02, 0.0000e+00, 0.0000e+00,
        1.5091e-02, 0.0000e+00, 0.0000e+00, 2.0677e-02, 1.6617e-02, 3.7184e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 3.,  6.,  6.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8., -1.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,
         3.,  8.,  3.,  8.,  8., -1., -1., -1.,  3.,  3.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1.,  3.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1., -1., -1., -1.,  8.,  6.,  3.,  8.,  8., -1.,
        -1., -1., -1., -1.,  3.,  3.,  8.,  8.,  8.,  5.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,  3.,  3.,
         6.,  8.,  8.,  8.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1.,  5.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  8.,
        -1., -1.,  8., -1.,  8.,  8.,  3.,  6.,  6.,  8.,  3.,  8.,  3.,  8.,
         8., -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  3.,  8.,  8.,  8.,  8., -1.,  8., -1., -1.,  5.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  3.,  5.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1., -1., -1., -1.,  6.,  8.,  8.]), 'best match scores': tensor([0.0537, 0.7591, 0.5673, 1.0000, 1.0000, 1.0000, 1.0000, 0.9998, 0.2753,
        1.0000, 0.1725, 0.0000, 1.0000, 0.3751, 1.0000, 1.0000, 1.0000, 0.7789,
        0.9770, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.1812, 0.0000,
        0.0000, 1.0000, 0.0566, 0.5506, 1.0000, 1.0000, 1.0000, 0.1020, 0.9999,
        1.0000, 1.0000, 1.0000, 1.0000, 0.2029, 0.1958, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9383, 0.0000, 0.0000, 0.0000, 0.9866, 0.9840, 0.0535, 0.9986,
        1.0000, 0.9998, 0.9895, 0.9138, 1.0000, 0.0000, 0.9991, 0.0000, 0.9999,
        1.0000, 0.9399, 1.0000, 0.0859, 1.0000, 0.0625, 0.9951, 0.1075, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000,
        0.9999, 0.8564, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.2970,
        0.9675, 0.9060, 0.9997, 1.0000, 1.0000, 1.0000, 0.9997, 1.0000, 0.0594,
        1.0000, 1.0000, 1.0000, 0.0572, 1.0000, 0.1204, 1.0000, 1.0000, 0.0000,
        0.0000, 0.9929, 0.9994, 1.0000, 1.0000, 0.9848, 1.0000, 1.0000, 1.0000,
        0.9549, 1.0000, 1.0000, 0.9911, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000,
        0.3392, 1.0000, 0.0000, 0.0000, 0.0000, 0.7680, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 0.0000, 0.0000, 0.9998, 0.9998,
        1.0000, 0.6026, 0.9969, 0.9836, 0.8134, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 0.9906, 0.9805,
        0.9996, 1.0000, 0.9998, 1.0000, 1.0000, 1.0000, 0.9999, 0.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9984, 1.0000, 1.0000, 0.9438, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0894, 1.0000, 1.0000, 0.3560, 0.8657, 0.0000,
        0.9943, 0.0000, 0.0000, 0.9996, 1.0000, 1.0000, 0.9936, 0.5296, 0.0000,
        0.0000, 1.0000, 0.0000, 1.0000, 0.9909, 1.0000, 1.0000, 1.0000, 0.8318,
        0.3298, 1.0000, 0.8950, 0.9366, 0.9221, 0.9703, 0.0000, 0.8062, 0.6389,
        1.0000, 0.8982, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.9999,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.8154, 1.0000]), 'num_pos': 232}
2020-12-06 15:50:21,241 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.461207
2020-12-06 15:51:38,780 maskrcnn_benchmark.trainer INFO: eta: 1:35:43  iter: 1820  loss: 16.5646 (17.6686)  loss_classifier: 1.1963 (1.2927)  loss_box_reg: 0.7967 (1.0499)  loss_objectness: 12.5244 (12.5325)  loss_rpn_box_reg: 0.3576 (2.7935)  time: 3.8482 (4.8671)  data: 0.1479 (1.2557)  lr: 0.000000  max mem: 1313
2020-12-06 15:52:52,935 maskrcnn_benchmark.trainer INFO: eta: 1:33:51  iter: 1840  loss: 15.4125 (17.6522)  loss_classifier: 0.8200 (1.2923)  loss_box_reg: 0.6557 (1.0482)  loss_objectness: 12.5620 (12.5360)  loss_rpn_box_reg: 0.0113 (2.7757)  time: 3.7008 (4.8545)  data: 0.1362 (1.2435)  lr: 0.000000  max mem: 1313
2020-12-06 15:52:52,937 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:52:52,987 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:53:35,204 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.216769 (1.4557506544836636 s / img per device, on 1 devices)
2020-12-06 15:53:35,205 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.557803 (1.3985449445658718 s / img per device, on 1 devices)
2020-12-06 15:53:35,205 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:53:36,979 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:53:36,979 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.4896e-02, 4.6158e-02, 3.8043e-03, 1.4328e-04, 5.1318e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.0124e-02,
        1.9871e-02, 3.7950e-03, 3.1412e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3041e-02, 0.0000e+00, 0.0000e+00,
        4.1519e-02, 3.7139e-03, 3.2518e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 5.8043e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4345e-03, 0.0000e+00, 0.0000e+00,
        5.3376e-02, 2.9607e-02, 3.6216e-03, 9.8616e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.1639e-01, 7.3833e-02, 6.0327e-02, 3.0755e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3927e-02, 3.1950e-03, 1.5571e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3258e-03,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.2598e-02,
        3.9791e-02, 1.9647e-02, 3.2710e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.8388e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3950e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        6.3177e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7184e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 3.,  3.,  5.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8., -1.,  3.,  8.,
         8.,  6.,  8.,  3.,  8.,  8.,  3.,  3.,  8., -1.,  8.,  3.,  3.,  6.,
         8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1., -1.,  3.,  8.,  8.,  6.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1., -1.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1., -1.,  8., -1.,  3.,  6.,  8.,
         8.,  8., -1., -1., -1.,  3.,  8.,  8.,  8.,  3.,  3.,  6.,  8., -1.,
        -1., -1., -1., -1.,  8., -1., -1.,  8.,  8., -1., -1.,  8.,  3.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1., -1.,  6.,  8.,  8., -1., -1., -1.,  8.,  8.,  3.,  3.,  3.,  3.,
         6.,  8., -1., -1., -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,  8.,
         8., -1., -1., -1.,  8.,  8., -1., -1., -1.,  8.,  3.,  8.,  8.,  8.,
         8., -1., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8., -1., -1., -1.,
        -1., -1., -1.,  8.,  8.,  8., -1., -1., -1., -1., -1., -1., -1.,  8.,
         8., -1., -1.,  8., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8., -1.,  6.]), 'best match scores': tensor([0.9909, 0.9874, 0.7583, 0.9983, 1.0000, 0.9941, 1.0000, 0.5684, 0.1341,
        0.7162, 1.0000, 0.0000, 0.1712, 1.0000, 1.0000, 0.9570, 0.0630, 0.9370,
        0.1714, 0.8288, 0.9999, 1.0000, 1.0000, 0.0000, 1.0000, 0.9902, 0.8600,
        1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000, 0.9143, 0.9906, 0.9641,
        0.0000, 0.0000, 0.9495, 1.0000, 1.0000, 1.0000, 1.0000, 0.1017, 0.0596,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.7551, 0.9952, 0.4733, 0.9821, 1.0000, 0.0000, 0.0000, 0.9601, 0.0000,
        0.0000, 0.0000, 0.7175, 0.0000, 0.9866, 1.0000, 1.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0688, 1.0000, 1.0000, 1.0000, 0.9473, 0.9995,
        1.0000, 0.2053, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.6677, 0.0000,
        0.0000, 0.9977, 1.0000, 0.0000, 0.0000, 1.0000, 0.9568, 1.0000, 0.9919,
        1.0000, 1.0000, 1.0000, 1.0000, 0.8523, 0.9998, 0.9982, 0.9363, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9998,
        0.9994, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.9989, 0.4177, 0.9822, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9844, 1.0000, 1.0000, 1.0000, 0.1506, 0.0000, 0.0000, 1.0000,
        0.9996, 1.0000, 0.0000, 0.0000, 0.0000, 0.9967, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.9995, 0.9999, 1.0000, 1.0000, 0.1897, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9995, 1.0000, 0.2455, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9539, 0.9874, 0.0000,
        0.0000, 0.0837, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9998,
        1.0000, 0.9774, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.4190, 0.9868, 0.0000, 1.0000]), 'num_pos': 222}
2020-12-06 15:53:37,005 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.355856
2020-12-06 15:54:51,268 maskrcnn_benchmark.trainer INFO: eta: 1:32:27  iter: 1860  loss: 15.5060 (17.6629)  loss_classifier: 1.0870 (1.2922)  loss_box_reg: 0.6419 (1.0458)  loss_objectness: 12.6469 (12.5308)  loss_rpn_box_reg: 0.1922 (2.7941)  time: 3.7127 (4.8659)  data: 0.1344 (1.2554)  lr: 0.000000  max mem: 1313
2020-12-06 15:56:05,692 maskrcnn_benchmark.trainer INFO: eta: 1:30:36  iter: 1880  loss: 15.9229 (17.6661)  loss_classifier: 1.2443 (1.2971)  loss_box_reg: 0.6282 (1.0457)  loss_objectness: 12.6841 (12.5345)  loss_rpn_box_reg: 0.3954 (2.7888)  time: 3.7190 (4.8537)  data: 0.1353 (1.2435)  lr: 0.000000  max mem: 1313
2020-12-06 15:56:05,694 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:56:05,746 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 15:56:47,974 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.227353 (1.4561156322216164 s / img per device, on 1 devices)
2020-12-06 15:56:47,974 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.566650 (1.3988500052484973 s / img per device, on 1 devices)
2020-12-06 15:56:47,974 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 15:56:49,736 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 15:56:49,737 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0541, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0232, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0100, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000,
        0.0853, 0.0238, 0.0099, 0.0037, 0.0032, 0.0032, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0095, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000,
        0.0409, 0.0036, 0.0007, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1069, 0.0593, 0.0164, 0.0133, 0.0029, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0137, 0.0000, 0.0000, 0.0148,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0501, 0.0476, 0.0281, 0.0229, 0.0036, 0.0024, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0470, 0.0008, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0087, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0621, 0.0250, 0.0093, 0.0039,
        0.0017, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0046, 0.0038,
        0.0025, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0065, 0.0040, 0.0037, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0037, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0474,
        0.0158, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0099, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000, 0.0207, 0.0037, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 7,
        7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 5, 7,
        7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8,
        8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1., -1.,  8.,  3.,  8.,  6.,  8.,  8.,  8., -1., -1., -1.,
         8., -1.,  8., -1., -1.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1.,  3.,  5.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  3.,  3.,  6.,  8.,  8.,  8.,
         6.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  5.,  8.,
         3.,  3.,  8.,  8.,  3.,  3.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1.,  8.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  6.,  6.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  8.,  3.,
         6.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,
         8., -1.,  3.,  5.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1., -1.,  8.,
         8., -1., -1.,  3.,  8.,  8., -1., -1., -1., -1., -1., -1.,  3.,  6.,
         8.,  8., -1.,  8., -1.,  6.,  8.,  8.,  3.,  8.,  8., -1., -1., -1.,
         3.,  3.,  8.,  8.,  6.,  8., -1., -1.,  8., -1., -1., -1.,  8., -1.,
         3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,
         8.,  6.,  8., -1., -1.,  8., -1.,  3.,  3.,  6.,  8.,  8.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.8677,
        0.9980, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.9995, 1.0000, 1.0000, 0.9985, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.9529, 1.0000, 1.0000, 1.0000, 0.1073, 0.2240, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.3158, 1.0000, 1.0000, 1.0000, 0.6695,
        1.0000, 1.0000, 0.5269, 0.8039, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.9365, 0.8277, 1.0000, 1.0000, 0.0635, 1.0000, 1.0000, 0.2678, 1.0000,
        0.9997, 0.6128, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.6515,
        0.9801, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.4001, 1.0000, 1.0000, 1.0000, 0.9954, 0.4619,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.6395, 0.9848, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9996, 1.0000, 1.0000,
        0.7306, 0.9814, 1.0000, 1.0000, 0.8740, 1.0000, 0.7107, 1.0000, 1.0000,
        1.0000, 0.9994, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9986, 0.9998,
        1.0000, 0.9739, 0.9998, 1.0000, 0.7646, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.2104, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9884, 0.5221, 1.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.9994, 1.0000, 0.4553, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9992, 1.0000, 1.0000, 0.0000,
        0.9999, 0.0000, 0.2623, 1.0000, 1.0000, 0.9213, 1.0000, 0.9974, 0.0000,
        0.0000, 0.0000, 0.6418, 1.0000, 1.0000, 0.8937, 0.9997, 0.4913, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9672, 0.0000, 0.0593, 0.8688,
        1.0000, 0.9669, 0.9999, 1.0000, 0.8153, 0.8345, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.9982, 0.9205, 1.0000, 0.0000, 0.0000, 0.9760,
        0.0000, 0.9998, 1.0000, 1.0000, 0.9999, 0.9802, 1.0000]), 'num_pos': 223}
2020-12-06 15:56:49,763 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.390135
2020-12-06 15:58:03,905 maskrcnn_benchmark.trainer INFO: eta: 1:29:11  iter: 1900  loss: 16.4068 (17.6649)  loss_classifier: 1.1767 (1.3076)  loss_box_reg: 1.0732 (1.0459)  loss_objectness: 12.6489 (12.5333)  loss_rpn_box_reg: 0.4118 (2.7780)  time: 3.7035 (4.8649)  data: 0.1353 (1.2550)  lr: 0.000000  max mem: 1313
2020-12-06 15:59:18,047 maskrcnn_benchmark.trainer INFO: eta: 1:27:21  iter: 1920  loss: 15.0943 (17.6526)  loss_classifier: 0.9477 (1.3098)  loss_box_reg: 0.4793 (1.0419)  loss_objectness: 12.4807 (12.5278)  loss_rpn_box_reg: 0.2644 (2.7731)  time: 3.7044 (4.8528)  data: 0.1343 (1.2434)  lr: 0.000000  max mem: 1313
2020-12-06 15:59:18,049 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 15:59:18,102 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:00:00,338 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.236023 (1.4564145762344887 s / img per device, on 1 devices)
2020-12-06 16:00:00,339 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.571240 (1.3990082740783691 s / img per device, on 1 devices)
2020-12-06 16:00:00,339 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:00:02,103 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:00:02,104 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.0782e-02, 3.9073e-03, 3.3184e-03, 4.9790e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        2.8843e-02, 9.8877e-03, 3.2720e-03, 1.5355e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.6062e-03,
        4.1853e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 4.1538e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.1635e-03, 0.0000e+00, 0.0000e+00,
        1.3734e-01, 7.3608e-02, 6.8963e-02, 5.5619e-03, 3.6216e-03, 3.2757e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.7620e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.0180e-01, 1.2423e-01, 8.6903e-02, 5.7408e-02,
        3.0997e-02, 3.0097e-03, 4.8668e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7580e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.1023e-02, 4.0478e-02, 2.7253e-02,
        2.3927e-02, 6.6146e-03, 3.2196e-03, 2.5247e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.5645e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 9.9300e-03,
        0.0000e+00, 0.0000e+00, 1.4794e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.6490e-02,
        2.9201e-02, 3.9702e-03, 3.7610e-03, 3.3309e-03, 4.0319e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3055e-02, 3.7950e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.1383e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0791e-02, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 2.6536e-02, 3.7184e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
         8., -1.,  8.,  3.,  6.,  8.,  8.,  8.,  8., -1.,  8., -1., -1.,  3.,
         3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8.,  8., -1., -1., -1., -1.,  8., -1., -1.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  3.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1., -1.,  8., -1.,  6.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8., -1.,  3.,  8.,  8., -1., -1., -1.,  8.,
         8.,  8.,  8.,  3.,  8.,  8., -1., -1.,  3.,  8.,  3.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1.,  5.,  6.,  8.,  8.,  8.,  8., -1., -1., -1.,
         3.,  8.,  8.,  3.,  8.,  8., -1.,  3.,  3.,  3.,  8.,  8.,  8.,  8.,
         8., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  6.,  8., -1., -1.,
        -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([0.0734, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.3265, 0.9264,
        0.9804, 0.9999, 0.0000, 0.0000, 0.0000, 0.4593, 0.0000, 1.0000, 0.4742,
        0.4448, 0.0709, 0.9998, 0.1123, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.3225, 1.0000, 1.0000, 0.6775, 0.9994, 0.9993, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.4850, 1.0000,
        1.0000, 1.0000, 0.9998, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.1605, 0.9865, 0.5212, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.6264, 1.0000, 1.0000, 1.0000, 1.0000, 0.9945, 0.9946, 1.0000,
        0.9939, 0.0735, 1.0000, 0.9291, 0.9845, 0.9994, 1.0000, 0.9672, 0.9942,
        0.9804, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.7635,
        0.8734, 1.0000, 0.9979, 1.0000, 1.0000, 0.4783, 1.0000, 1.0000, 0.6703,
        0.9724, 0.5261, 0.1026, 0.9996, 0.0722, 1.0000, 0.6711, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9999, 1.0000, 0.9888, 1.0000, 0.9736, 1.0000, 1.0000, 0.0830,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 0.0807, 0.9989, 0.0678, 0.7595, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.4935, 1.0000, 0.0899, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9997, 0.9997, 0.0000, 0.0000,
        0.9949, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.7714, 0.9952, 0.0912, 0.9993, 1.0000, 1.0000, 0.0000,
        0.9510, 0.4686, 1.0000, 0.7269, 1.0000, 0.5638, 1.0000, 0.2067, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.8872, 1.0000,
        0.0625, 0.8827, 1.0000, 1.0000, 1.0000, 0.9951, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.9399, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 0.7040, 1.0000, 0.7697]), 'num_pos': 232}
2020-12-06 16:00:02,131 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.443966
2020-12-06 16:01:16,384 maskrcnn_benchmark.trainer INFO: eta: 1:25:55  iter: 1940  loss: 16.0603 (17.6639)  loss_classifier: 1.3479 (1.3210)  loss_box_reg: 0.7005 (1.0394)  loss_objectness: 12.5598 (12.5265)  loss_rpn_box_reg: 0.2877 (2.7771)  time: 3.7039 (4.8638)  data: 0.1386 (1.2547)  lr: 0.000000  max mem: 1313
2020-12-06 16:02:30,676 maskrcnn_benchmark.trainer INFO: eta: 1:24:06  iter: 1960  loss: 15.6879 (17.6572)  loss_classifier: 1.6837 (1.3278)  loss_box_reg: 0.7728 (1.0365)  loss_objectness: 12.0024 (12.5210)  loss_rpn_box_reg: 0.3678 (2.7719)  time: 3.7168 (4.8521)  data: 0.1341 (1.2433)  lr: 0.000000  max mem: 1313
2020-12-06 16:02:30,678 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:02:30,729 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:03:12,966 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.236214 (1.456421186184061 s / img per device, on 1 devices)
2020-12-06 16:03:12,966 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.580947 (1.3993429973207672 s / img per device, on 1 devices)
2020-12-06 16:03:12,966 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:03:14,734 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:03:14,735 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([7.6424e-02, 2.5893e-02, 3.9566e-03, 3.4220e-03, 1.2268e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.2286e-03, 0.0000e+00, 0.0000e+00, 2.6164e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.2231e-02, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 1.1943e-02, 1.0651e-02, 9.8877e-03, 3.3666e-03, 2.8818e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.3161e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        2.0689e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.1178e-03, 0.0000e+00, 0.0000e+00,
        3.8157e-02, 9.5240e-03, 3.6216e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.4091e-01, 8.1146e-02, 6.6166e-02, 4.9781e-02,
        1.2241e-02, 3.0755e-03, 2.9124e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 4.6551e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.4929e-02, 6.3941e-02, 3.4470e-02,
        8.1114e-03, 3.6675e-03, 3.2957e-03, 3.1609e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.3612e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.6422e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.7720e-02,
        2.9559e-02, 3.8555e-03, 3.4061e-03, 1.0537e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3055e-02, 3.7950e-03,
        4.9949e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0229e-02,
        1.6243e-02, 3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.8073e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.3437e-02, 0.0000e+00, 0.0000e+00,
        5.6434e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.8617e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
         8., -1.,  8., -1., -1., -1.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1., -1.,  3.,  8.,  8.,
         8.,  8.,  8., -1.,  8.,  8., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1.,  3.,  3.,  8.,  5.,  8.,  8.,  6.,  8.,  8., -1.,
        -1., -1., -1., -1., -1., -1., -1.,  8.,  8., -1.,  3.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  8.,  3.,  6.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8., -1., -1.,  8.,  8.,
         8.,  5.,  8.,  5.,  8.,  8., -1., -1., -1.,  8., -1.,  8.,  3., -1.,
        -1., -1., -1., -1., -1.,  3.,  3.,  3.,  8.,  8.,  8., -1.,  8., -1.,
        -1.,  8.,  8.,  3.,  6.,  8., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,
         8., -1.,  8., -1., -1., -1., -1.,  3.,  3.,  3.,  8.,  8.,  8.,  8.,
         3.,  8.,  3., -1.,  8., -1., -1., -1.,  8., -1.,  3.,  8., -1., -1.,
         8., -1., -1., -1.,  3.,  6.,  8.,  8.]), 'best match scores': tensor([0.9929, 0.7803, 1.0000, 0.9997, 0.9995, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9996, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9948, 1.0000, 0.9915, 0.0000, 0.0000, 0.9774, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9991, 0.9999, 0.8857, 0.9983, 0.2227, 1.0000,
        0.4190, 1.0000, 1.0000, 1.0000, 1.0000, 0.9993, 0.1712, 1.0000, 0.9753,
        1.0000, 0.1015, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 0.9999, 1.0000, 0.2303, 1.0000, 0.0000, 0.8703, 1.0000, 0.0000,
        0.1297, 1.0000, 1.0000, 1.0000, 0.9834, 1.0000, 1.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 1.0000, 0.9953, 1.0000, 0.7416, 0.9263, 0.6262, 1.0000,
        0.6401, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9177, 1.0000, 0.0000, 1.0000, 0.9396, 0.9692, 1.0000, 0.9996,
        0.1603, 0.9991, 1.0000, 1.0000, 1.0000, 0.1781, 0.0808, 1.0000, 0.0000,
        1.0000, 0.3724, 0.8603, 0.9973, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.5985, 0.2967, 1.0000, 1.0000, 0.9998, 1.0000, 0.9898, 0.9866, 0.9996,
        1.0000, 0.9995, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.3272, 0.9654, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.9603, 0.0736, 1.0000, 0.0000, 0.0000, 0.9994,
        1.0000, 1.0000, 1.0000, 1.0000, 0.7379, 1.0000, 0.9999, 0.0000, 0.0000,
        0.0000, 0.9668, 0.0000, 1.0000, 0.9862, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0737, 0.9588, 0.9888, 1.0000, 1.0000, 1.0000, 0.0000,
        0.9995, 0.0000, 0.0000, 1.0000, 0.9999, 1.0000, 0.9982, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9995, 0.8839, 1.0000, 0.9997, 0.0000,
        0.9998, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.5455, 1.0000, 1.0000, 1.0000, 0.8670, 0.8604, 0.0000, 0.9913, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.9983, 1.0000, 0.9619, 1.0000]), 'num_pos': 232}
2020-12-06 16:03:14,763 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.396552
2020-12-06 16:04:28,959 maskrcnn_benchmark.trainer INFO: eta: 1:22:40  iter: 1980  loss: 16.1252 (17.6569)  loss_classifier: 0.8196 (1.3282)  loss_box_reg: 0.6935 (1.0354)  loss_objectness: 12.4624 (12.5204)  loss_rpn_box_reg: 0.1421 (2.7728)  time: 3.7084 (4.8628)  data: 0.1383 (1.2544)  lr: 0.000000  max mem: 1313
2020-12-06 16:05:43,208 maskrcnn_benchmark.trainer INFO: eta: 1:20:51  iter: 2000  loss: 15.6950 (17.6524)  loss_classifier: 0.7350 (1.3287)  loss_box_reg: 0.7747 (1.0345)  loss_objectness: 13.0576 (12.5248)  loss_rpn_box_reg: 0.1098 (2.7644)  time: 3.7132 (4.8513)  data: 0.1403 (1.2433)  lr: 0.000000  max mem: 1313
2020-12-06 16:05:43,210 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:05:43,262 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:06:25,938 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.675236 (1.471559869832006 s / img per device, on 1 devices)
2020-12-06 16:06:25,938 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.954260 (1.4122158576702248 s / img per device, on 1 devices)
2020-12-06 16:06:25,938 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:06:27,692 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:06:27,692 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0259, 0.0039, 0.0012, 0.0009, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0038, 0.0002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0058, 0.0000, 0.0000, 0.0583, 0.0018, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0041, 0.0000, 0.0000,
        0.1057, 0.0756, 0.0610, 0.0339, 0.0037, 0.0032, 0.0029, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0095, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000,
        0.0574, 0.0558, 0.0256, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1410, 0.1069, 0.0901, 0.0162, 0.0032, 0.0029, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0109, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0239, 0.0052, 0.0051, 0.0037, 0.0035, 0.0032, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0054, 0.0000, 0.0000, 0.0415, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0729, 0.0441, 0.0207, 0.0048,
        0.0032, 0.0017, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0645, 0.0197,
        0.0051, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0101,
        0.0040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0415,
        0.0037, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0449,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0099, 0.0000, 0.0000, 0.0123, 0.0000, 0.0000, 0.1170, 0.0197, 0.0075,
        0.0037, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0138, 0.0117, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
         8., -1.,  6.,  3.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  3.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1., -1.,  8., -1., -1., -1.,  3.,  8.,  8.,
        -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  3.,  8.,  6.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1.,  3.,  3.,  3.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  8.,  8.,  3.,  8.,  8., -1., -1., -1.,  8.,  8.,  8.,  3.,  8.,
         8., -1.,  3.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         3.,  8.,  8., -1.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8.,
         8., -1.,  3.,  3.,  6.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0809, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.4512, 0.9653, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.6637, 1.0000, 0.9990, 1.0000, 0.5410, 1.0000, 1.0000,
        0.1684, 0.1120, 0.9907, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.9991, 0.5929, 0.9459, 1.0000, 1.0000,
        0.9998, 1.0000, 1.0000, 0.5999, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.1682,
        1.0000, 1.0000, 0.3471, 1.0000, 1.0000, 1.0000, 0.4330, 1.0000, 0.9168,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.4847, 1.0000, 0.1500,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9987, 0.9999, 0.9976, 0.0911,
        0.9987, 1.0000, 1.0000, 0.9980, 1.0000, 0.9901, 0.0605, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9878, 0.9979, 1.0000,
        0.7683, 1.0000, 0.8760, 0.9881, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9979, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9120, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9972, 0.9997, 0.9083, 1.0000, 0.6531, 1.0000, 0.9998, 1.0000, 1.0000,
        0.4320, 1.0000, 1.0000, 0.0865, 1.0000, 0.9628, 0.0956, 0.0000, 0.0000,
        1.0000, 0.0000, 0.9999, 1.0000, 0.9993, 1.0000, 1.0000, 0.6491, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9892, 1.0000, 0.9820, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.6941, 0.0721, 0.9751, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9277,
        1.0000, 0.9319, 1.0000, 1.0000, 1.0000, 0.9999, 0.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.7762, 0.9936,
        0.0000, 0.7043, 0.9998, 1.0000, 1.0000, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 16:06:27,720 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.530172
2020-12-06 16:06:27,722 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./_best_acc_r1.pth
2020-12-06 16:06:31,540 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: _best_acc_r1
2020-12-06 16:07:45,802 maskrcnn_benchmark.trainer INFO: eta: 1:19:26  iter: 2020  loss: 17.2277 (17.6601)  loss_classifier: 1.2273 (1.3393)  loss_box_reg: 0.9148 (1.0340)  loss_objectness: 12.1958 (12.5262)  loss_rpn_box_reg: 0.2106 (2.7607)  time: 3.6953 (4.8639)  data: 0.1339 (1.2564)  lr: 0.000000  max mem: 1313
2020-12-06 16:08:59,796 maskrcnn_benchmark.trainer INFO: eta: 1:17:38  iter: 2040  loss: 15.6837 (17.6495)  loss_classifier: 0.7948 (1.3394)  loss_box_reg: 0.7370 (1.0319)  loss_objectness: 12.7959 (12.5273)  loss_rpn_box_reg: 0.1357 (2.7509)  time: 3.6986 (4.8525)  data: 0.1320 (1.2454)  lr: 0.000000  max mem: 1313
2020-12-06 16:08:59,797 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:08:59,850 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:09:42,063 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.212763 (1.4556125032490697 s / img per device, on 1 devices)
2020-12-06 16:09:42,063 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.582395 (1.399392925459763 s / img per device, on 1 devices)
2020-12-06 16:09:42,064 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:09:43,777 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:09:43,777 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([6.3836e-02, 5.5048e-02, 2.5893e-02, 3.9559e-03, 3.4170e-03, 3.2044e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        1.6806e-02, 3.8489e-03, 3.1412e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.0260e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.0929e-03, 0.0000e+00, 0.0000e+00,
        2.9155e-02, 6.4484e-03, 3.7211e-03, 3.3274e-03, 3.2857e-03, 3.2116e-03,
        1.4136e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.1300e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.4446e-03, 0.0000e+00, 0.0000e+00,
        7.3277e-02, 6.8832e-02, 5.8979e-02, 9.8877e-03, 3.6603e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.5882e-01, 5.1746e-02, 5.0958e-02, 4.0593e-02,
        8.9258e-03, 3.0090e-03, 2.8822e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.9275e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.7794e-02, 5.0355e-02, 1.8724e-02,
        1.0360e-02, 9.9687e-03, 3.6106e-03, 3.2330e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 9.3813e-03,
        0.0000e+00, 0.0000e+00, 4.3373e-02, 2.0095e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.4839e-02,
        2.3304e-02, 3.9412e-03, 4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.4865e-02, 2.4725e-02,
        1.2286e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.5373e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.6732e-02,
        1.6481e-02, 2.0406e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.0503e-02, 0.0000e+00, 0.0000e+00,
        8.0665e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7517e-03, 3.7193e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 1.4780e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,
         3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3., -1.,  8., -1., -1., -1.,
        -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1.,  8.,  8.,  8., -1.,  3.,  6.,  8., -1.,
        -1., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  5.,  6.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1.,  8., -1., -1.,  3.,  8.,  6.,  8.,  8.,  8., -1., -1.,  3.,  5.,
         8.,  8.,  8.,  3.,  8.,  8.,  3.,  3.,  8.,  8.,  8.,  8.,  3.,  8.,
         8., -1., -1.,  8., -1.,  3.,  6.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1., -1., -1., -1.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1.,  3.,
         8., -1.,  8.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1., -1., -1.,  8.,  3.,  6.,  8.,  3.,  8.,
         3.,  3.,  3.,  6.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([0.6533, 0.1725, 0.1335, 1.0000, 0.7761, 1.0000, 1.0000, 0.4019, 1.0000,
        0.9993, 1.0000, 0.9663, 0.9983, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.9694, 1.0000, 0.9989, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9785, 1.0000,
        0.1803, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.9999, 0.9982, 0.9981, 1.0000, 0.9122, 0.0000, 0.0000, 0.2396, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.4316, 1.0000, 1.0000,
        0.9999, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9538, 0.0000, 0.9980,
        0.9814, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.9575, 0.1147, 1.0000, 1.0000, 1.0000, 0.9510, 1.0000, 1.0000, 1.0000,
        0.9968, 0.9958, 1.0000, 0.9104, 0.9179, 1.0000, 0.7737, 0.9999, 0.0000,
        0.5304, 0.9978, 1.0000, 1.0000, 1.0000, 0.9990, 1.0000, 0.4696, 1.0000,
        0.9899, 1.0000, 0.5981, 0.9923, 1.0000, 1.0000, 1.0000, 1.0000, 0.6869,
        1.0000, 0.6352, 0.0000, 0.0000, 0.0000, 0.9384, 1.0000, 1.0000, 1.0000,
        0.9786, 0.0749, 0.4369, 0.7237, 0.9887, 0.0000, 1.0000, 0.0000, 0.0000,
        0.9354, 0.9991, 1.0000, 0.9998, 1.0000, 1.0000, 0.0000, 0.0000, 0.5610,
        1.0000, 1.0000, 0.6879, 1.0000, 0.9993, 1.0000, 1.0000, 1.0000, 0.9955,
        0.9991, 1.0000, 0.7557, 1.0000, 0.8877, 1.0000, 0.1191, 0.0000, 0.0000,
        1.0000, 0.0000, 1.0000, 1.0000, 0.9874, 1.0000, 1.0000, 0.9999, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9999, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.9994, 1.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.1234, 0.9986, 0.9995, 0.8956,
        0.9543, 1.0000, 0.9403, 0.0829, 0.8141, 0.2689, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9998, 0.6748, 1.0000, 1.0000, 0.9916, 1.0000, 0.3158,
        0.3780, 0.0648, 1.0000, 0.9988, 0.6220, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 16:09:43,804 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.465517
2020-12-06 16:10:57,894 maskrcnn_benchmark.trainer INFO: eta: 1:16:10  iter: 2060  loss: 16.8520 (17.6562)  loss_classifier: 1.5730 (1.3430)  loss_box_reg: 0.7938 (1.0303)  loss_objectness: 12.9668 (12.5306)  loss_rpn_box_reg: 0.1252 (2.7523)  time: 3.7010 (4.8627)  data: 0.1328 (1.2560)  lr: 0.000000  max mem: 1313
2020-12-06 16:12:12,077 maskrcnn_benchmark.trainer INFO: eta: 1:14:23  iter: 2080  loss: 19.0499 (17.6821)  loss_classifier: 1.8961 (1.3546)  loss_box_reg: 0.7115 (1.0294)  loss_objectness: 11.3807 (12.5256)  loss_rpn_box_reg: 0.5308 (2.7726)  time: 3.6979 (4.8516)  data: 0.1356 (1.2452)  lr: 0.000000  max mem: 1313
2020-12-06 16:12:12,079 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:12:12,136 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:12:54,445 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.308645 (1.4589187770054257 s / img per device, on 1 devices)
2020-12-06 16:12:54,445 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.550941 (1.3983082935727875 s / img per device, on 1 devices)
2020-12-06 16:12:54,445 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:12:56,150 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:12:56,150 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([8.9251e-02, 3.3446e-02, 3.8642e-03, 2.7996e-03, 1.3417e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.6174e-02,
        5.0073e-02, 2.5067e-02, 1.9707e-02, 9.6787e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.3243e-02,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        6.6896e-02, 2.6365e-02, 3.3184e-03, 5.4235e-05, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.7977e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        4.4972e-02, 3.5184e-02, 1.7872e-02, 3.1597e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.3593e-01, 1.0583e-01, 4.9889e-02, 3.0997e-02,
        4.1379e-03, 2.9759e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.4411e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3927e-02, 1.2668e-02, 9.9155e-03,
        3.6312e-03, 3.6146e-03, 3.2622e-03, 5.9404e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.2108e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.7742e-03,
        0.0000e+00, 0.0000e+00, 1.2438e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.6074e-02,
        3.8904e-03, 2.8177e-03, 1.4253e-03, 2.2963e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3055e-02, 1.2917e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.2321e-02,
        3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0845e-01, 2.0184e-02, 3.3697e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        8.7308e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7184e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.2674e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  3.,
         8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8., -1.,  8.,  8., -1., -1.,
        -1.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         3.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  8.,  8.,  6.,  8.,  6.,  8.,  8.,  8., -1.,
        -1.,  3.,  3.,  5.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,  3.,  3.,
         6.,  8.,  8.,  8.,  8.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1., -1.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8., -1.,  3.,  5.,  8.,  8.,
         6.,  8.,  8.,  8.,  8.,  8.,  3.,  3.,  3.,  8.,  3.,  8.,  8.,  8.,
         8.,  3.,  3.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  8.,  8.,  6.,  8.,  8., -1.,  8., -1., -1.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8.,  3.,  3.,  6.,  3.,  8.,  8.,  8.,  3.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  6.,  8., -1., -1.,
         8., -1., -1.,  3.,  3.,  6.,  8.,  8.]), 'best match scores': tensor([0.5096, 0.0000, 1.0000, 0.9997, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9994, 1.0000, 0.5722, 1.0000, 0.7258, 0.9994, 1.0000, 0.9949, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.3922, 0.0000, 0.2429, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9956, 0.6918, 1.0000, 1.0000, 0.9999, 0.9983, 1.0000,
        0.9999, 1.0000, 0.7348, 1.0000, 1.0000, 1.0000, 0.9997, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.9980, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9980, 1.0000,
        1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999,
        1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.9897, 0.3814, 1.0000, 0.8285,
        0.0819, 0.8879, 0.9996, 1.0000, 1.0000, 0.9963, 1.0000, 1.0000, 0.4390,
        1.0000, 1.0000, 1.0000, 0.9991, 1.0000, 0.0627, 0.3775, 1.0000, 0.0000,
        0.0000, 1.0000, 0.8980, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9956,
        0.0510, 1.0000, 1.0000, 0.9734, 1.0000, 0.8874, 1.0000, 1.0000, 0.9961,
        0.9448, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 0.1241, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.9997, 0.8545, 0.9999, 0.0000, 1.0000, 0.5415, 1.0000,
        1.0000, 0.4585, 0.1649, 0.9760, 1.0000, 0.9569, 0.9998, 1.0000, 1.0000,
        0.9992, 1.0000, 1.0000, 1.0000, 0.1444, 1.0000, 1.0000, 0.9999, 0.0547,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9998, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 0.0000,
        0.1987, 0.0000, 0.0000, 1.0000, 1.0000, 0.9560, 0.0542, 0.9177, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9313, 1.0000, 1.0000, 0.9644,
        1.0000, 1.0000, 1.0000, 0.0630, 0.3539, 0.4876, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9961, 1.0000, 1.0000, 1.0000, 0.9715, 0.0000, 0.0000, 0.9980,
        0.0000, 0.0000, 1.0000, 0.0867, 1.0000, 0.9133, 0.3803]), 'num_pos': 232}
2020-12-06 16:12:56,177 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.465517
2020-12-06 16:14:10,415 maskrcnn_benchmark.trainer INFO: eta: 1:12:55  iter: 2100  loss: 17.0314 (17.6770)  loss_classifier: 1.2288 (1.3572)  loss_box_reg: 0.6191 (1.0282)  loss_objectness: 12.8179 (12.5286)  loss_rpn_box_reg: 0.0876 (2.7630)  time: 3.7050 (4.8618)  data: 0.1357 (1.2557)  lr: 0.000000  max mem: 1313
2020-12-06 16:15:24,226 maskrcnn_benchmark.trainer INFO: eta: 1:11:08  iter: 2120  loss: 16.7049 (17.6841)  loss_classifier: 0.8542 (1.3591)  loss_box_reg: 0.6547 (1.0289)  loss_objectness: 12.1589 (12.5270)  loss_rpn_box_reg: 0.1398 (2.7691)  time: 3.6848 (4.8507)  data: 0.1311 (1.2451)  lr: 0.000000  max mem: 1313
2020-12-06 16:15:24,228 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:15:24,280 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:16:06,550 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.270290 (1.4575962033765069 s / img per device, on 1 devices)
2020-12-06 16:16:06,550 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.594603 (1.3998138986784836 s / img per device, on 1 devices)
2020-12-06 16:16:06,551 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:16:08,292 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:16:08,293 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.5877e-02, 2.8669e-02, 3.3312e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.8760e-03, 0.0000e+00, 0.0000e+00, 4.7142e-02,
        4.7043e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        8.1130e-02, 2.4844e-02, 3.6216e-03, 3.2913e-03, 1.2588e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.3195e-02, 0.0000e+00, 0.0000e+00, 5.9030e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        4.3417e-02, 3.0360e-02, 3.6216e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5920e-02,
        1.8971e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0689e-01, 8.8036e-03, 3.2345e-03, 2.0375e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.5326e-02, 6.8595e-03, 4.4404e-03,
        4.0966e-03, 3.5607e-03, 3.1994e-03, 2.7308e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0229e-02, 1.4604e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 9.2449e-03,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9960e-02,
        3.8555e-03, 2.9596e-03, 4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.4024e-02, 2.0466e-02,
        9.6278e-03, 3.7950e-03, 8.8978e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3354e-02,
        3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.3387e-02, 3.7677e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6585e-02, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 1.8361e-02, 3.7184e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.5145e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1.,  3.,  3.,  8.,  3.,  8.,  8.,  6.,  8.,  8.,  8., -1., -1., -1.,
        -1., -1.,  8., -1.,  6.,  8.,  8.,  8.,  8., -1.,  8.,  8., -1., -1.,
        -1., -1.,  3.,  6.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1., -1., -1.,  8.,  8.,
         8.,  8.,  8.,  3.,  5.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1.,  6.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
         8., -1., -1., -1.,  8.,  5.,  8.,  8.,  8., -1., -1.,  8.,  3.,  3.,
         3.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  3.,  3.,  8.,  3.,  5.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1.,  8., -1., -1., -1.,  8., -1.,  3.,  8.,  8.,  8.,  8.,
        -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  5.,  8.,
         6.,  8.,  8.,  3.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,
         8., -1., -1.,  8., -1.,  5.,  5.,  6.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  8., -1.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  3.,  6., -1.,  3.,
         8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([0.0000, 0.7977, 0.9998, 1.0000, 0.1993, 1.0000, 0.8007, 0.9193, 0.9973,
        1.0000, 0.9970, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.5319, 0.9007, 0.5025, 1.0000, 1.0000, 0.0000, 0.9999, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.2591, 1.0000, 1.0000, 1.0000, 1.0000, 0.9996,
        1.0000, 1.0000, 1.0000, 1.0000, 0.1042, 1.0000, 1.0000, 1.0000, 0.3617,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9999, 1.0000, 0.1001, 1.0000, 1.0000, 1.0000, 0.9801, 0.9867, 1.0000,
        0.9885, 1.0000, 0.8109, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.0747, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.2034,
        0.9999, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.7820, 0.9999,
        1.0000, 1.0000, 0.9928, 1.0000, 1.0000, 0.9917, 0.9876, 0.9778, 1.0000,
        1.0000, 1.0000, 0.0608, 0.1062, 1.0000, 1.0000, 0.6357, 1.0000, 1.0000,
        1.0000, 0.0504, 1.0000, 1.0000, 1.0000, 0.9998, 0.9778, 1.0000, 0.8412,
        0.2249, 0.2879, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9974, 0.0000,
        1.0000, 0.9113, 0.9997, 0.0611, 0.2681, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 0.9998, 0.9976, 0.9922, 1.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 0.9506, 1.0000,
        0.8669, 1.0000, 0.6016, 1.0000, 0.1278, 0.9998, 0.5801, 0.0000, 0.0000,
        1.0000, 0.0000, 1.0000, 0.9975, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.6493, 1.0000, 0.9221, 0.0000,
        0.2858, 0.0000, 0.0000, 0.0000, 0.2060, 1.0000, 1.0000, 0.9846, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.9962, 0.9678, 1.0000, 1.0000, 0.9918,
        1.0000, 0.9440, 0.9883, 0.7612, 0.9936, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.5622, 1.0000, 0.0000, 0.3792, 0.9987,
        0.9978, 1.0000, 1.0000, 1.0000, 0.1374, 0.6208, 1.0000]), 'num_pos': 232}
2020-12-06 16:16:08,320 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.448276
2020-12-06 16:17:22,331 maskrcnn_benchmark.trainer INFO: eta: 1:09:40  iter: 2140  loss: 15.2791 (17.6814)  loss_classifier: 0.7572 (1.3682)  loss_box_reg: 0.4704 (1.0250)  loss_objectness: 12.5430 (12.5278)  loss_rpn_box_reg: 0.0839 (2.7603)  time: 3.6955 (4.8606)  data: 0.1349 (1.2553)  lr: 0.000000  max mem: 1313
2020-12-06 16:18:36,760 maskrcnn_benchmark.trainer INFO: eta: 1:07:54  iter: 2160  loss: 16.4007 (17.6797)  loss_classifier: 0.9399 (1.3655)  loss_box_reg: 0.6846 (1.0242)  loss_objectness: 12.6830 (12.5244)  loss_rpn_box_reg: 0.3412 (2.7656)  time: 3.7098 (4.8500)  data: 0.1356 (1.2450)  lr: 0.000000  max mem: 1313
2020-12-06 16:18:36,762 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:18:36,818 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:19:20,121 maskrcnn_benchmark.inference INFO: Total run time: 0:00:43.302270 (1.4931817301388444 s / img per device, on 1 devices)
2020-12-06 16:19:20,121 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.557039 (1.4330013291589145 s / img per device, on 1 devices)
2020-12-06 16:19:20,121 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:19:21,894 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:19:21,894 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0898, 0.0508, 0.0385, 0.0086, 0.0034, 0.0031, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0680, 0.0230, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0056, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000,
        0.0628, 0.0264, 0.0175, 0.0118, 0.0033, 0.0031, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0233, 0.0000, 0.0000, 0.0233, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0222, 0.0000, 0.0000,
        0.0377, 0.0099, 0.0036, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.3068, 0.1377, 0.1235, 0.1124, 0.0481, 0.0310, 0.0148,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0103, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0995, 0.0245, 0.0239, 0.0037, 0.0032, 0.0031, 0.0014, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0425, 0.0272, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0375, 0.0000, 0.0000, 0.0489, 0.0105, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0497, 0.0200, 0.0134, 0.0094,
        0.0034, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0741, 0.0550,
        0.0212, 0.0187, 0.0034, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0099, 0.0000, 0.0000, 0.0060, 0.0000, 0.0000, 0.0207, 0.0039, 0.0037,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0417, 0.0273, 0.0158,
        0.0156, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3., -1.,  8., -1., -1.,  3.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  3.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1., -1.,  8., -1.,  8., -1.,  8.,  3.,  6., -1.,
        -1., -1., -1.,  3.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  8.,  3.,  6.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1.,  8., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1.,  8., -1., -1.,  3.,  8.,  6.,  8.,  8.,  8., -1.,  3.,  5.,  6.,
         8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  6.,  3.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([0.9991, 0.9994, 1.0000, 1.0000, 1.0000, 1.0000, 0.9997, 0.0884, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 0.6199, 1.0000, 0.5772,
        1.0000, 0.9999, 1.0000, 1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.2881, 1.0000, 0.5374, 0.1839, 0.9608, 1.0000, 0.9810, 1.0000, 1.0000,
        1.0000, 0.2991, 1.0000, 1.0000, 1.0000, 0.9998, 1.0000, 0.9995, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.4247, 1.0000,
        0.9929, 1.0000, 1.0000, 1.0000, 0.9997, 0.0000, 0.5546, 1.0000, 0.1073,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9125, 1.0000, 0.3400, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.9997,
        0.4911, 0.9998, 0.0000, 0.0000, 0.0000, 0.0000, 0.0796, 0.9999, 0.7575,
        0.3725, 0.9985, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0910, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9997, 0.9348, 0.2213, 0.9999, 0.0000,
        0.9999, 0.9865, 0.9998, 1.0000, 1.0000, 0.9533, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9871, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.6199, 0.0000, 1.0000, 0.0000, 0.9900, 1.0000, 0.9170, 1.0000,
        0.0565, 1.0000, 0.8259, 0.9965, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 0.9999, 1.0000, 1.0000, 0.9999, 1.0000, 0.0000, 0.9993, 0.2069,
        1.0000, 1.0000, 1.0000, 0.9943, 0.2970, 0.4678, 0.8294, 1.0000, 1.0000,
        0.9999, 0.3998, 0.4012, 0.9945, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.9911, 0.9938,
        0.9999, 0.9834, 0.9360, 1.0000, 1.0000, 0.7575, 0.9999, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9895, 0.3662, 0.4561, 0.9999, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9994, 1.0000, 0.7523, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9929, 0.0556, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 16:19:21,922 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.530172
2020-12-06 16:20:38,337 maskrcnn_benchmark.trainer INFO: eta: 1:06:26  iter: 2180  loss: 14.7675 (17.6640)  loss_classifier: 0.8073 (1.3636)  loss_box_reg: 0.5576 (1.0236)  loss_objectness: 12.2211 (12.5220)  loss_rpn_box_reg: 0.1079 (2.7548)  time: 3.7911 (4.8613)  data: 0.1419 (1.2556)  lr: 0.000000  max mem: 1313
2020-12-06 16:21:53,289 maskrcnn_benchmark.trainer INFO: eta: 1:04:40  iter: 2200  loss: 17.3675 (17.6645)  loss_classifier: 1.2696 (1.3672)  loss_box_reg: 0.4076 (1.0196)  loss_objectness: 11.8311 (12.5215)  loss_rpn_box_reg: 0.2198 (2.7562)  time: 3.7155 (4.8512)  data: 0.1390 (1.2454)  lr: 0.000000  max mem: 1313
2020-12-06 16:21:53,291 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:21:53,349 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:22:35,614 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.264696 (1.4574033145246834 s / img per device, on 1 devices)
2020-12-06 16:22:35,615 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.577791 (1.3992341880140633 s / img per device, on 1 devices)
2020-12-06 16:22:35,615 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:22:37,385 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:22:37,385 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([6.0536e-02, 4.9865e-02, 3.8477e-03, 3.2221e-03, 1.5968e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        3.7950e-03, 4.7867e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.5680e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        4.9665e-02, 2.7535e-02, 3.7241e-03, 3.2062e-03, 3.7606e-04, 8.3897e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.2782e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.6451e-02, 0.0000e+00, 0.0000e+00, 1.6560e-02,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.1705e-02, 0.0000e+00, 0.0000e+00,
        1.8086e-02, 1.6300e-02, 3.3184e-03, 5.9892e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.1953e-01, 1.7131e-01, 4.0593e-02, 3.1122e-03,
        2.9615e-03, 7.1115e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.1779e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.9551e-02, 3.0268e-02, 2.3191e-02,
        9.8877e-03, 3.6096e-03, 3.1609e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.6627e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3970e-02,
        0.0000e+00, 0.0000e+00, 5.8288e-02, 1.8739e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.8902e-02,
        3.7999e-02, 4.0265e-03, 4.0107e-03, 3.6216e-03, 8.6539e-04, 2.5186e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.4085e-01, 5.6327e-02,
        3.7931e-02, 1.5803e-02, 1.2286e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 4.7528e-02, 1.5751e-02, 1.4835e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 1.1815e-02, 2.7005e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0022e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0408e-02, 0.0000e+00, 0.0000e+00,
        1.1862e-02, 0.0000e+00, 0.0000e+00, 5.6584e-02, 1.9707e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8.,  8.,
         8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,  3.,  3.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,  3.,  8.,  8.,
         8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1., -1.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,
        -1.,  8., -1., -1., -1.,  8., -1.,  8.,  8.,  8., -1.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8., -1.,  3.,  8., -1.,  3.,  6.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1., -1., -1., -1.,  3.,  8., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1., -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1., -1.,  3.,  3.,  6.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.9977, 0.8679, 0.0915, 0.9992, 1.0000, 1.0000, 1.0000, 0.9609,
        1.0000, 1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9967, 0.9520,
        0.0814, 1.0000, 1.0000, 0.0844, 1.0000, 0.0000, 0.0000, 1.0000, 0.1841,
        0.9962, 1.0000, 0.9992, 1.0000, 1.0000, 1.0000, 0.2282, 0.9980, 1.0000,
        0.7999, 0.6148, 0.9839, 1.0000, 0.9998, 1.0000, 0.9791, 1.0000, 0.8870,
        0.7363, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9994,
        1.0000, 1.0000, 0.3260, 0.9488, 1.0000, 1.0000, 1.0000, 0.9991, 1.0000,
        0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.7285, 1.0000,
        1.0000, 1.0000, 0.9572, 1.0000, 1.0000, 1.0000, 0.9980, 1.0000, 1.0000,
        1.0000, 0.1429, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9925,
        0.3426, 1.0000, 1.0000, 1.0000, 0.7102, 1.0000, 0.1141, 1.0000, 1.0000,
        0.9994, 1.0000, 0.3284, 1.0000, 0.9933, 1.0000, 0.0768, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0887, 1.0000,
        1.0000, 0.9740, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9994, 1.0000,
        1.0000, 0.9970, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9808, 0.9791, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.9064, 0.0000, 0.9995, 1.0000, 0.9999, 0.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9994, 0.3739, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.9279,
        0.9999, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9822, 0.0000,
        0.9223, 1.0000, 0.7284, 1.0000, 0.9587, 0.8906, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.5349, 0.9202, 0.1707, 1.0000, 1.0000, 1.0000,
        0.9861, 0.9709, 1.0000, 0.0815, 1.0000, 0.9728, 1.0000, 0.2508, 1.0000,
        1.0000, 1.0000, 0.9529, 1.0000, 0.0983, 0.9950, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 1.0000, 0.0898, 1.0000, 0.2269, 1.0000]), 'num_pos': 232}
2020-12-06 16:22:37,413 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.530172
2020-12-06 16:23:52,682 maskrcnn_benchmark.trainer INFO: eta: 1:03:11  iter: 2220  loss: 15.2299 (17.6592)  loss_classifier: 1.0923 (1.3677)  loss_box_reg: 0.5629 (1.0175)  loss_objectness: 12.6006 (12.5219)  loss_rpn_box_reg: 0.0646 (2.7521)  time: 3.7432 (4.8613)  data: 0.1403 (1.2554)  lr: 0.000000  max mem: 1313
2020-12-06 16:25:08,033 maskrcnn_benchmark.trainer INFO: eta: 1:01:27  iter: 2240  loss: 15.9494 (17.6563)  loss_classifier: 1.2156 (1.3688)  loss_box_reg: 0.5372 (1.0157)  loss_objectness: 12.6718 (12.5220)  loss_rpn_box_reg: 0.1795 (2.7497)  time: 3.7387 (4.8515)  data: 0.1405 (1.2454)  lr: 0.000000  max mem: 1313
2020-12-06 16:25:08,034 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:25:08,089 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:25:50,403 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.314041 (1.459104850374419 s / img per device, on 1 devices)
2020-12-06 16:25:50,403 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.560603 (1.3986414794264168 s / img per device, on 1 devices)
2020-12-06 16:25:50,403 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:25:52,180 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:25:52,180 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([1.0890e-01, 7.4693e-02, 6.7238e-02, 5.9926e-02, 2.3838e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.8578e-02,
        1.9871e-02, 3.7950e-03, 8.4296e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 7.8206e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 8.1239e-03, 0.0000e+00, 0.0000e+00,
        8.2167e-02, 3.1730e-02, 9.8877e-03, 3.4442e-03, 3.1738e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9401e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.9846e-02, 0.0000e+00, 0.0000e+00, 3.7209e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        1.2424e-01, 8.7813e-02, 5.7980e-02, 5.1413e-02, 2.3242e-02, 1.9518e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.8622e-01, 1.1752e-01, 3.8685e-02, 1.3421e-02,
        8.9485e-03, 2.9978e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.4948e-02, 5.7294e-02, 4.0722e-02,
        2.2885e-02, 9.8877e-03, 3.6250e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 7.2381e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3435e-02,
        0.0000e+00, 0.0000e+00, 3.7193e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.9016e-02,
        3.9895e-02, 1.9647e-02, 1.9557e-02, 9.2988e-03, 3.8555e-03, 1.6939e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.0976e-02, 3.7950e-03,
        3.7092e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 8.6898e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.8855e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.4266e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        1.3835e-02, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7209e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        5.4238e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8.,  8.,
         8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
         3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1.,  3.,  3.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  3.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8., -1.,  5.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  3.,  3.,  6.,
         8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  3.,  8.,  8.,  8., -1., -1.,  8., -1.,  3.,  6.,  8.,
         8., -1., -1.,  8., -1.,  3.,  3.,  3.,  6.,  8.,  8., -1.,  3., -1.,
        -1., -1., -1.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  6.,  8.,  8.,
         8., -1.,  8., -1., -1., -1.,  3.,  3.,  6.,  8.,  8.,  3.,  3.,  8.,
         8.,  8.,  8., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1., -1.,  3.,  3.,  6.,  8.,  8.]), 'best match scores': tensor([0.9973, 1.0000, 1.0000, 0.9899, 0.9987, 1.0000, 1.0000, 0.9982, 1.0000,
        1.0000, 1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9557, 0.9999, 1.0000,
        1.0000, 0.9848, 0.9990, 0.9998, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0688, 1.0000, 0.9998, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.6005, 1.0000, 0.8873, 1.0000, 1.0000, 0.9877, 1.0000, 0.9998,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9872, 1.0000, 1.0000, 0.9965,
        0.9482, 1.0000, 1.0000, 0.9999, 0.9992, 0.0000, 0.4936, 0.5064, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9553, 0.1350, 0.2068, 0.2350, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9955, 0.9998, 1.0000, 0.5798, 1.0000, 0.1924,
        1.0000, 0.9163, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.2612, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9882, 1.0000, 1.0000,
        0.9055, 1.0000, 1.0000, 1.0000, 0.1771, 1.0000, 0.0832, 0.9576, 0.0000,
        0.0000, 1.0000, 0.4323, 1.0000, 1.0000, 0.9831, 1.0000, 1.0000, 1.0000,
        1.0000, 0.5602, 1.0000, 1.0000, 0.0740, 1.0000, 1.0000, 1.0000, 0.9999,
        0.9352, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0766, 1.0000, 0.9999,
        0.5254, 1.0000, 0.5730, 1.0000, 0.7260, 0.0000, 0.0000, 0.9656, 0.9905,
        1.0000, 0.9998, 1.0000, 0.5949, 0.4065, 0.9992, 1.0000, 0.9385, 1.0000,
        1.0000, 1.0000, 0.9338, 1.0000, 0.0507, 1.0000, 1.0000, 0.7743, 0.0000,
        0.0000, 1.0000, 0.0000, 0.6350, 0.9973, 1.0000, 0.2669, 0.0000, 0.0000,
        1.0000, 0.0000, 0.9647, 0.4277, 0.9891, 1.0000, 1.0000, 0.9995, 0.0000,
        0.9879, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9952, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.6392, 0.8983, 1.0000, 0.9140, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.7202, 0.5345, 1.0000, 1.0000, 0.4648,
        0.9849, 0.9997, 1.0000, 0.9957, 0.3378, 0.7284, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 0.9998, 1.0000, 1.0000, 0.0000, 0.0000, 0.4954,
        0.0000, 0.0000, 0.8044, 0.2148, 1.0000, 0.7852, 1.0000]), 'num_pos': 232}
2020-12-06 16:25:52,208 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.469828
2020-12-06 16:27:06,681 maskrcnn_benchmark.trainer INFO: eta: 0:59:57  iter: 2260  loss: 17.0645 (17.6713)  loss_classifier: 2.1184 (1.3763)  loss_box_reg: 0.7451 (1.0158)  loss_objectness: 12.1164 (12.5182)  loss_rpn_box_reg: 0.6302 (2.7611)  time: 3.7232 (4.8611)  data: 0.1381 (1.2552)  lr: 0.000000  max mem: 1313
2020-12-06 16:28:20,715 maskrcnn_benchmark.trainer INFO: eta: 0:58:12  iter: 2280  loss: 14.8487 (17.6573)  loss_classifier: 0.6864 (1.3804)  loss_box_reg: 0.6568 (1.0138)  loss_objectness: 12.8571 (12.5214)  loss_rpn_box_reg: 0.0969 (2.7417)  time: 3.6982 (4.8509)  data: 0.1342 (1.2454)  lr: 0.000000  max mem: 1313
2020-12-06 16:28:20,717 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:28:20,770 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:29:03,052 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.282202 (1.4580069492603172 s / img per device, on 1 devices)
2020-12-06 16:29:03,052 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.574022 (1.3991041923391407 s / img per device, on 1 devices)
2020-12-06 16:29:03,052 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:29:04,749 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:29:04,750 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([9.0788e-02, 5.5807e-02, 4.9251e-02, 3.7969e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0491e-02,
        1.0648e-02, 5.1187e-03, 3.9385e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 1.3576e-01,
        3.5945e-02, 1.6550e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        3.1915e-02, 2.3823e-02, 9.8877e-03, 3.7716e-03, 3.2952e-03, 3.1375e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.5998e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.9055e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        4.1787e-02, 3.6216e-03, 1.4563e-03, 7.6224e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0689e-01, 8.9529e-03, 3.2345e-03, 3.1323e-03,
        3.0110e-03, 2.8703e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.2291e-02, 0.0000e+00, 0.0000e+00, 1.1584e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.3610e-02, 3.2972e-02, 7.7098e-03,
        3.6012e-03, 3.2533e-03, 3.1969e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3258e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9960e-02,
        1.9771e-02, 3.8591e-03, 3.0607e-03, 4.0319e-05, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.7316e-02, 2.9688e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.0974e-02,
        1.9917e-02, 3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        3.9426e-03, 0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.1302e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  6.,  6.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,
         8., -1.,  8.,  3.,  3.,  8.,  8.,  8.,  8.,  3.,  8.,  3.,  6.,  8.,
         8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  3.,
         8.,  8.,  8., -1., -1.,  8., -1., -1.,  3.,  3.,  6.,  8.,  8.,  3.,
         6.,  8., -1., -1., -1., -1.,  8.,  3.,  8.,  3.,  3.,  3.,  5., -1.,
         3.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1.,  3.,
         3.,  3.,  6.,  8.,  8.,  8., -1., -1.,  8.,  8.,  8.,  8.,  8., -1.,
        -1.,  8., -1., -1., -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1.,  3.,  3.,  6.,  8.,  8.,  8., -1., -1.,  8.,  3.,
        -1., -1.,  8.,  3.,  3.,  8., -1., -1., -1.,  5.,  8.,  8.,  3.,  8.,
         8., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8., -1.,  8., -1.,
        -1.,  8.,  8., -1.,  3.,  3., -1., -1., -1., -1., -1.,  8., -1.,  3.,
         8., -1., -1.,  8., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1., -1., -1., -1., -1.,  6.,  8.]), 'best match scores': tensor([1.0000, 0.9999, 1.0000, 0.9962, 1.0000, 0.1267, 1.0000, 1.0000, 1.0000,
        0.1981, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000, 0.2333,
        1.0000, 1.0000, 0.9727, 0.5959, 1.0000, 0.2604, 0.0578, 1.0000, 1.0000,
        0.9996, 0.9531, 1.0000, 0.0755, 0.7835, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9891, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.3968, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.0894, 0.9998, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.9997, 1.0000, 1.0000, 1.0000, 0.9999, 0.9999, 1.0000, 0.9996,
        0.0000, 0.0000, 0.0000, 0.0000, 0.8992, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9923, 1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9991, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9997, 1.0000, 1.0000, 0.9979, 0.3383, 1.0000,
        0.0522, 1.0000, 1.0000, 0.9999, 1.0000, 0.9928, 1.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.9999, 0.8000, 1.0000, 1.0000, 0.0743, 0.9998,
        1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9156, 0.1514, 0.0000,
        0.0000, 0.8841, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.7963, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.1007, 1.0000, 0.9976, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.9986, 0.0000, 0.0000, 1.0000, 0.0506, 0.2946, 1.0000, 0.0000, 0.0000,
        0.0000, 0.1625, 1.0000, 0.9934, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9999, 1.0000, 1.0000, 0.2222, 1.0000, 1.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.9995, 0.8619, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.9598, 1.0000, 0.9957, 1.0000, 1.0000,
        0.3382, 1.0000, 1.0000, 1.0000, 0.7683, 1.0000, 0.0000, 0.0000, 0.0000,
        0.1058, 0.9738, 1.0000, 0.9169, 1.0000, 0.6329, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9823]), 'num_pos': 232}
2020-12-06 16:29:04,776 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.362069
2020-12-06 16:30:19,220 maskrcnn_benchmark.trainer INFO: eta: 0:56:42  iter: 2300  loss: 16.3796 (17.6514)  loss_classifier: 1.3430 (1.3849)  loss_box_reg: 0.7344 (1.0133)  loss_objectness: 12.8763 (12.5203)  loss_rpn_box_reg: 0.3208 (2.7329)  time: 3.7172 (4.8602)  data: 0.1360 (1.2549)  lr: 0.000000  max mem: 1313
2020-12-06 16:31:33,753 maskrcnn_benchmark.trainer INFO: eta: 0:54:58  iter: 2320  loss: 15.2815 (17.6426)  loss_classifier: 0.9087 (1.3848)  loss_box_reg: 0.6500 (1.0109)  loss_objectness: 12.5937 (12.5198)  loss_rpn_box_reg: 0.0425 (2.7272)  time: 3.7076 (4.8505)  data: 0.1378 (1.2452)  lr: 0.000000  max mem: 1313
2020-12-06 16:31:33,755 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:31:33,806 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:32:16,030 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.223264 (1.4559746117427432 s / img per device, on 1 devices)
2020-12-06 16:32:16,030 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.572760 (1.3990606932804501 s / img per device, on 1 devices)
2020-12-06 16:32:16,030 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:32:17,797 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:32:17,797 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([6.3550e-02, 2.5893e-02, 3.9445e-03, 3.1673e-03, 1.2568e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        3.7950e-03, 4.7867e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        7.7690e-02, 2.3823e-02, 1.0329e-02, 3.6216e-03, 1.1307e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0634e-01,
        2.8952e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        9.9502e-03, 8.8156e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.9561e-01, 1.2198e-01, 1.1013e-01, 3.0997e-02,
        8.8036e-03, 1.3542e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 7.7728e-02, 0.0000e+00, 0.0000e+00, 1.5966e-01,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4387e-02, 4.8502e-02, 3.5092e-02,
        3.7055e-03, 3.2678e-03, 1.5588e-03, 7.2448e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.0094e-02, 5.1216e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.1962e-02,
        0.0000e+00, 0.0000e+00, 1.3402e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3025e-01,
        3.6820e-02, 1.4336e-02, 3.2646e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.4103e-02, 3.3052e-02,
        2.6793e-02, 1.2286e-02, 2.5581e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        3.9991e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.3952e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.7229e-03, 0.0000e+00, 0.0000e+00,
        3.9426e-03, 0.0000e+00, 0.0000e+00, 2.9888e-02, 1.9707e-02, 3.7184e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
         8., -1.,  8.,  3.,  3.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,  8., -1.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1.,  3.,  5.,  5.,  6.,  8.,  6.,  8., -1.,
        -1., -1., -1., -1.,  8., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  8.,  3.,  5.,
         3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1.,  8., -1., -1., -1.,  8., -1.,  6.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,
         8., -1., -1.,  8., -1., -1.,  3.,  6.,  8.,  8.,  8., -1., -1.,  3.,
         3.,  8.,  8.,  6.,  8.,  8., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1.,  3.,  3.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1.,  3.,  3.,  8.,  8.,  6.,  8., -1., -1.,
        -1., -1., -1.,  3.,  3.,  3.,  6.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.0923, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0636,
        1.0000, 0.9711, 0.9998, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9934, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.1694, 0.0000, 0.0000, 0.0000, 0.1304, 0.0000,
        0.9994, 1.0000, 0.1445, 0.9955, 1.0000, 0.0000, 0.0000, 0.9963, 0.0000,
        0.0000, 1.0000, 0.7717, 1.0000, 1.0000, 1.0000, 0.9504, 0.7961, 1.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.9998, 1.0000, 0.9994, 1.0000, 1.0000,
        0.9866, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9992, 0.0000,
        1.0000, 1.0000, 0.9588, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000,
        0.4939, 1.0000, 1.0000, 1.0000, 1.0000, 0.9825, 1.0000, 0.4282, 0.0000,
        0.9997, 0.6282, 0.9974, 0.1527, 0.3152, 1.0000, 0.1874, 1.0000, 1.0000,
        0.3432, 0.1022, 1.0000, 0.9967, 1.0000, 1.0000, 1.0000, 1.0000, 0.9377,
        1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 0.9999, 0.2952, 0.9988, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9999, 0.9998, 1.0000, 1.0000, 1.0000, 0.9995, 1.0000,
        1.0000, 0.9995, 1.0000, 0.1124, 0.1263, 1.0000, 1.0000, 0.0000, 0.0000,
        0.9994, 0.0000, 0.0000, 1.0000, 1.0000, 0.9455, 1.0000, 0.9957, 0.0000,
        0.0000, 1.0000, 0.0691, 0.9993, 1.0000, 1.0000, 1.0000, 0.2209, 0.0000,
        0.0000, 0.9844, 1.0000, 0.9916, 0.2592, 1.0000, 0.9790, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 1.0000, 0.1778, 1.0000, 0.9645, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.2283, 0.9342, 0.9963, 0.0000, 1.0000, 0.0000,
        0.9947, 0.1143, 1.0000, 0.9998, 0.1130, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9099, 0.9785, 0.9463, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 16:32:17,825 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.426724
2020-12-06 16:33:32,371 maskrcnn_benchmark.trainer INFO: eta: 0:53:27  iter: 2340  loss: 16.6161 (17.6433)  loss_classifier: 1.0830 (1.3914)  loss_box_reg: 0.7872 (1.0096)  loss_objectness: 12.1437 (12.5143)  loss_rpn_box_reg: 0.4253 (2.7280)  time: 3.7060 (4.8597)  data: 0.1384 (1.2546)  lr: 0.000000  max mem: 1313
2020-12-06 16:34:47,084 maskrcnn_benchmark.trainer INFO: eta: 0:51:44  iter: 2360  loss: 18.9248 (17.6609)  loss_classifier: 1.3632 (1.3980)  loss_box_reg: 0.8818 (1.0089)  loss_objectness: 11.8572 (12.5144)  loss_rpn_box_reg: 0.5240 (2.7395)  time: 3.7174 (4.8502)  data: 0.1362 (1.2452)  lr: 0.000000  max mem: 1313
2020-12-06 16:34:47,086 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:34:47,138 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:35:29,497 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.358782 (1.460647648778455 s / img per device, on 1 devices)
2020-12-06 16:35:29,497 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.649424 (1.4017042784855283 s / img per device, on 1 devices)
2020-12-06 16:35:29,497 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:35:31,255 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:35:31,256 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.4162e-02, 4.9328e-02, 9.8200e-03, 3.3694e-03, 2.8191e-03, 2.8049e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.3113e-02,
        4.1127e-02, 1.9871e-02, 8.3166e-03, 3.7950e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.1380e-03, 0.0000e+00, 0.0000e+00, 1.6592e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        1.7222e-01, 5.7133e-02, 3.4127e-02, 9.8877e-03, 3.2912e-03, 3.1375e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.1825e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.8666e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.5009e-03, 0.0000e+00, 0.0000e+00,
        5.3472e-02, 4.7189e-02, 3.8768e-02, 1.7408e-02, 1.0738e-02, 3.2112e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        1.1107e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.8988e-01, 6.7267e-02, 4.0593e-02, 3.1211e-03,
        2.8703e-03, 6.2903e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.2774e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.0710e-02, 5.6690e-02, 2.7998e-02,
        2.1961e-02, 3.6438e-03, 3.1725e-03, 2.2925e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 9.1402e-03,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.6102e-02,
        1.9771e-02, 3.8555e-03, 3.4045e-03, 1.7108e-04, 4.0319e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.7110e-02, 4.6131e-02,
        1.9707e-02, 3.7950e-03, 2.4032e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3280e-01,
        3.9134e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3978e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        1.2931e-02, 0.0000e+00, 0.0000e+00, 3.0434e-02, 1.9707e-02, 3.7184e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.1192e-02, 1.6553e-02, 1.5627e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,
         8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1.,  3.,
         3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1.,  3.,  3.,  8.,  3.,  8.,  8.,
         8.,  8.,  3., -1., -1.,  8., -1.,  3.,  3.,  3.,  6.,  8.,  8.,  8.,
         8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1.,  3.,  3.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  5.,  8.,  5.,  6.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1.,  3.,  8.,  3.,  3.,  8.,  8.,  8.,  8.,
        -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8.,  3.,  5.,  6.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  3.,  3.,  3.,  8.,  8., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1., -1., -1.,  8.,  8.,  3.,  8.,  3.,  8.,
         8.,  3.,  6.,  8.,  3.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.1583, 1.0000, 0.8330, 0.9946, 1.0000, 0.9641, 0.9936, 0.2317,
        0.6407, 0.5735, 0.8738, 0.0716, 0.4303, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.1567, 0.9979, 1.0000, 1.0000, 0.0000, 0.0000, 0.9995, 0.0000,
        0.5478, 0.9999, 1.0000, 0.9991, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.0769, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.2831, 1.0000, 0.0000, 0.0000, 0.0000, 0.8043, 0.9948, 1.0000, 0.0945,
        1.0000, 1.0000, 0.4722, 1.0000, 0.7309, 0.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 0.4295, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9973, 1.0000, 1.0000, 0.9957, 0.9995,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.3175, 1.0000, 0.9973, 0.3384,
        0.1803, 0.9993, 1.0000, 0.9879, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999,
        1.0000, 1.0000, 1.0000, 0.8839, 0.9746, 1.0000, 0.7241, 0.9988, 1.0000,
        0.9710, 1.0000, 0.9865, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.2521, 0.2267, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.5367, 0.2329,
        1.0000, 0.9910, 0.0000, 0.0000, 0.0000, 0.0000, 0.9977, 1.0000, 1.0000,
        0.3331, 0.5918, 1.0000, 0.9823, 0.9973, 0.0000, 0.1847, 0.8827, 0.9936,
        1.0000, 0.9989, 1.0000, 0.3323, 0.9876, 0.0843, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9983, 1.0000, 1.0000, 0.9988, 0.9996,
        1.0000, 1.0000, 0.9998, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 0.9509, 0.2520, 1.0000, 0.0915, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.5739, 0.9050, 0.9993, 1.0000, 0.0000,
        0.0000, 0.2642, 1.0000, 1.0000, 1.0000, 1.0000, 0.7358, 0.9995, 0.0000,
        0.0000, 0.9972, 0.0000, 0.6527, 0.9806, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9812, 0.9998, 0.0857, 0.9965, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9871, 1.0000, 1.0000, 1.0000, 0.0613, 0.9387, 1.0000,
        0.2271, 1.0000, 1.0000, 0.5573, 1.0000, 0.9581, 0.7729]), 'num_pos': 232}
2020-12-06 16:35:31,284 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.508621
2020-12-06 16:36:45,576 maskrcnn_benchmark.trainer INFO: eta: 0:50:12  iter: 2380  loss: 14.7856 (17.6534)  loss_classifier: 0.7547 (1.3998)  loss_box_reg: 0.5523 (1.0053)  loss_objectness: 12.6724 (12.5170)  loss_rpn_box_reg: 0.0728 (2.7313)  time: 3.7061 (4.8592)  data: 0.1364 (1.2544)  lr: 0.000000  max mem: 1313
2020-12-06 16:37:59,864 maskrcnn_benchmark.trainer INFO: eta: 0:48:29  iter: 2400  loss: 14.7932 (17.6466)  loss_classifier: 0.8537 (1.3980)  loss_box_reg: 0.4258 (1.0026)  loss_objectness: 12.9003 (12.5192)  loss_rpn_box_reg: 0.1251 (2.7267)  time: 3.7176 (4.8497)  data: 0.1351 (1.2451)  lr: 0.000000  max mem: 1313
2020-12-06 16:37:59,866 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:37:59,920 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:38:42,293 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.373456 (1.4611536552166116 s / img per device, on 1 devices)
2020-12-06 16:38:42,294 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.606096 (1.4002102161275929 s / img per device, on 1 devices)
2020-12-06 16:38:42,294 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:38:44,025 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:38:44,025 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.8554e-02, 1.2438e-02, 3.8776e-03, 3.4355e-03, 3.2247e-03, 1.2234e-06,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        1.8804e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.9733e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.8451e-02, 0.0000e+00, 0.0000e+00,
        3.5560e-02, 1.6494e-02, 9.8877e-03, 3.4267e-03, 3.2062e-03, 3.1375e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.1990e-02, 0.0000e+00, 0.0000e+00, 4.3191e-02,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0254e-02, 0.0000e+00, 0.0000e+00,
        6.5747e-02, 5.2480e-02, 4.5810e-02, 2.4396e-02, 9.8877e-03, 3.1760e-03,
        1.4980e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5227e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.1274e-01, 1.0689e-01, 2.4399e-02, 3.2345e-03,
        3.0257e-03, 9.5572e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.3224e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1951e-01, 7.7382e-02, 5.8220e-02,
        5.3372e-02, 2.2885e-02, 3.6411e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.2515e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5281e-02,
        0.0000e+00, 0.0000e+00, 1.4770e-01, 3.3145e-02, 3.0131e-02, 1.8455e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.4447e-02,
        3.1318e-02, 1.4487e-02, 3.6216e-03, 4.5913e-04, 4.0319e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3055e-02, 1.2286e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7383e-02,
        4.0164e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        3.3765e-02, 0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3., -1.,  8., -1., -1., -1.,
        -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  3.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,
        -1., -1., -1.,  3.,  8.,  5.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,
         8.,  8., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  8.,  8., -1.,  3.,  3.,  8.,  3.,  8.,  3.,  8.,
         8.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  3.,
         8.,  8.,  8.,  8.,  8.,  8., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1.,  3.,  5.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1., -1.,  3.,  3.,  6.,  8.,  8.]), 'best match scores': tensor([0.9536, 1.0000, 0.1499, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9884, 1.0000, 1.0000,
        0.9735, 1.0000, 0.1649, 0.0664, 0.4697, 0.0000, 0.9520, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.8856, 1.0000, 1.0000, 1.0000, 1.0000, 0.2598,
        0.9998, 0.0781, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9990,
        1.0000, 0.2853, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.9966, 0.0784, 0.9207, 0.9985, 1.0000, 0.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.1117, 0.9987, 1.0000, 0.9991, 0.9997, 0.8573, 0.9539, 0.9963,
        1.0000, 0.9994, 1.0000, 1.0000, 0.9982, 0.6725, 0.9867, 1.0000, 0.9920,
        1.0000, 0.9919, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9996, 0.9378, 1.0000, 0.0769, 0.9996, 0.1179,
        0.9966, 1.0000, 0.9999, 0.1127, 1.0000, 0.9994, 0.1672, 0.0746, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9999,
        1.0000, 1.0000, 1.0000, 0.9006, 1.0000, 1.0000, 1.0000, 0.9799, 1.0000,
        0.0769, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9800, 1.0000,
        0.9994, 1.0000, 0.9722, 0.9995, 1.0000, 0.9999, 0.9806, 0.0000, 0.0000,
        0.2118, 1.0000, 1.0000, 1.0000, 0.9992, 0.4585, 0.2777, 1.0000, 0.9999,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9986, 0.9999, 1.0000, 0.0000, 0.9301,
        0.2293, 0.9992, 1.0000, 1.0000, 0.1628, 1.0000, 0.9996, 1.0000, 0.9983,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9172, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9902, 1.0000, 0.9562, 0.0000,
        1.0000, 1.0000, 0.8073, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.4988, 0.9999, 0.1724, 1.0000, 0.4851, 1.0000,
        0.9991, 1.0000, 1.0000, 0.6271, 0.9999, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 0.7506, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.8861, 0.8940, 1.0000, 1.0000, 0.1139]), 'num_pos': 232}
2020-12-06 16:38:44,050 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.508621
2020-12-06 16:39:58,612 maskrcnn_benchmark.trainer INFO: eta: 0:46:58  iter: 2420  loss: 16.1465 (17.6436)  loss_classifier: 0.8695 (1.4009)  loss_box_reg: 0.5071 (0.9997)  loss_objectness: 12.5037 (12.5168)  loss_rpn_box_reg: 0.1197 (2.7261)  time: 3.7165 (4.8587)  data: 0.1370 (1.2542)  lr: 0.000000  max mem: 1313
2020-12-06 16:41:13,889 maskrcnn_benchmark.trainer INFO: eta: 0:45:15  iter: 2440  loss: 14.4907 (17.6210)  loss_classifier: 0.8495 (1.4017)  loss_box_reg: 0.2886 (0.9960)  loss_objectness: 12.6273 (12.5177)  loss_rpn_box_reg: 0.0892 (2.7056)  time: 3.7285 (4.8497)  data: 0.1357 (1.2451)  lr: 0.000000  max mem: 1313
2020-12-06 16:41:13,891 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:41:13,943 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:41:56,335 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.391650 (1.461781041375522 s / img per device, on 1 devices)
2020-12-06 16:41:56,335 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.726280 (1.4043544900828395 s / img per device, on 1 devices)
2020-12-06 16:41:56,335 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:41:58,091 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:41:58,091 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0602, 0.0568, 0.0259, 0.0048, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0232, 0.0039, 0.0031, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0056, 0.0000, 0.0000, 0.0498, 0.0026, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000,
        0.0383, 0.0238, 0.0038, 0.0032, 0.0019, 0.0010, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0108, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000,
        0.0280, 0.0248, 0.0099, 0.0049, 0.0033, 0.0033, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1069, 0.0676, 0.0551, 0.0069, 0.0032, 0.0027, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0136, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0845, 0.0716, 0.0685, 0.0604, 0.0474, 0.0391, 0.0033, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0065, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0200, 0.0039, 0.0033, 0.0001,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0231, 0.0038,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0051,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0120,
        0.0040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0148, 0.0000, 0.0000, 0.0065, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
         3., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8.,  8., -1., -1.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  3.,  8.,  8.,
         8.,  8.,  8.,  3.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,  8.,
        -1.,  5.,  8.,  8.,  8.,  8., -1., -1., -1.,  8., -1.,  8., -1., -1.,
         8., -1.,  3.,  8.,  3.,  5.,  6.,  8.,  8.,  8.,  8., -1.,  8., -1.,
        -1.,  8., -1.,  3.,  8.,  8., -1., -1., -1., -1., -1., -1., -1.,  3.,
         8., -1., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1., -1., -1., -1., -1.,
        -1., -1., -1.,  3.,  6.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.2162, 1.0000, 0.9998, 1.0000, 0.9921, 0.9983, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9982, 0.0000, 1.0000, 1.0000,
        1.0000, 0.9928, 0.9859, 1.0000, 1.0000, 0.0000, 0.6205, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.9520, 0.9998, 1.0000, 0.1360, 1.0000, 1.0000,
        1.0000, 0.9991, 0.5825, 0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9998, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9999, 1.0000,
        1.0000, 0.9996, 0.7574, 1.0000, 0.9325, 1.0000, 1.0000, 1.0000, 0.9999,
        1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 0.9939, 0.9163, 0.9953, 0.9984,
        0.1570, 0.9978, 0.9968, 1.0000, 1.0000, 1.0000, 1.0000, 0.9990, 1.0000,
        0.9768, 0.9887, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9953, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9991,
        1.0000, 0.9996, 0.8908, 1.0000, 0.9993, 0.9654, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.9991, 1.0000, 0.3149, 1.0000, 1.0000, 1.0000, 1.0000, 0.9280, 0.6851,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9995, 1.0000, 0.1338,
        1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 0.0000, 0.0000, 0.9957, 0.9826,
        0.9991, 1.0000, 0.9992, 0.9989, 0.4636, 0.9999, 0.0000, 0.0000, 1.0000,
        1.0000, 0.0000, 0.9976, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.2575, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000,
        0.5116, 0.9998, 0.3768, 0.9978, 1.0000, 0.1399, 0.1001, 1.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.9981, 1.0000, 0.9998, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.2102, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1437, 1.0000, 1.0000, 0.9999,
        0.9995, 0.9990, 1.0000, 0.6881, 1.0000, 0.3071, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.9994, 0.9989, 1.0000]), 'num_pos': 232}
2020-12-06 16:41:58,118 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.422414
2020-12-06 16:43:12,368 maskrcnn_benchmark.trainer INFO: eta: 0:43:43  iter: 2460  loss: 16.7963 (17.6180)  loss_classifier: 1.1717 (1.4024)  loss_box_reg: 0.8572 (0.9953)  loss_objectness: 13.4620 (12.5252)  loss_rpn_box_reg: 0.0989 (2.6952)  time: 3.7119 (4.8584)  data: 0.1361 (1.2541)  lr: 0.000000  max mem: 1313
2020-12-06 16:44:26,622 maskrcnn_benchmark.trainer INFO: eta: 0:42:01  iter: 2480  loss: 15.5031 (17.6056)  loss_classifier: 0.7514 (1.4027)  loss_box_reg: 0.5743 (0.9935)  loss_objectness: 12.4279 (12.5239)  loss_rpn_box_reg: 0.1067 (2.6855)  time: 3.7123 (4.8492)  data: 0.1352 (1.2451)  lr: 0.000000  max mem: 1313
2020-12-06 16:44:26,624 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:44:26,674 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:45:10,089 maskrcnn_benchmark.inference INFO: Total run time: 0:00:43.414250 (1.4970430916753308 s / img per device, on 1 devices)
2020-12-06 16:45:10,089 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.695508 (1.4377761462639118 s / img per device, on 1 devices)
2020-12-06 16:45:10,089 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:45:11,860 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:45:11,860 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0259, 0.0038, 0.0034, 0.0028, 0.0022, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1163, 0.0688, 0.0199, 0.0123, 0.0038, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0056, 0.0000, 0.0000, 0.0510, 0.0166, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0121, 0.0000, 0.0000,
        0.0287, 0.0099, 0.0034, 0.0026, 0.0012, 0.0005, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0512, 0.0105, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0195, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0063, 0.0000, 0.0000,
        0.0611, 0.0391, 0.0099, 0.0037, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0349, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.2972, 0.1297, 0.0387, 0.0088, 0.0030, 0.0003, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0103, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0594, 0.0590, 0.0513, 0.0467, 0.0186, 0.0032, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0277, 0.0000, 0.0000, 0.0334, 0.0165, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0355, 0.0226, 0.0207, 0.0093,
        0.0065, 0.0033, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000, 0.0231, 0.0197,
        0.0039, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0207,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0099, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000, 0.0207, 0.0039, 0.0037,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8.,  3., -1., -1.,
        -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,
        -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  3.,  6.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,
        -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  8.,  8., -1.,  3., -1.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1.,  5.,  5.,  6.,  8.,  8.,  8., -1., -1., -1.,
        -1., -1., -1., -1.,  8.,  8., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1.,  5.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8., -1., -1.,
         8.,  3.,  3.,  3.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 0.9991, 1.0000, 0.9983, 1.0000, 1.0000, 1.0000, 0.1752,
        0.9768, 0.2424, 0.8298, 0.1116, 1.0000, 1.0000, 0.7418, 1.0000, 0.9959,
        1.0000, 1.0000, 0.0505, 0.1842, 0.9920, 0.0000, 0.4212, 0.2659, 0.0000,
        0.0000, 0.0000, 0.0000, 0.3202, 1.0000, 1.0000, 1.0000, 0.5976, 0.9985,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9823, 1.0000, 0.8252,
        1.0000, 1.0000, 0.0000, 1.0000, 0.9425, 1.0000, 0.9668, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9930, 0.9677, 0.9996, 0.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9968, 0.5249, 1.0000,
        1.0000, 0.5218, 1.0000, 0.9977, 0.0744, 1.0000, 1.0000, 1.0000, 1.0000,
        0.0562, 0.2250, 0.0000, 0.0000, 0.0000, 0.0000, 0.9997, 0.8595, 0.9664,
        0.9957, 0.9991, 1.0000, 1.0000, 0.9978, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0629, 0.4377, 0.9863, 0.8928, 1.0000, 0.7059, 0.0000,
        0.0000, 0.2771, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.4741, 1.0000, 0.9992, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.3991,
        1.0000, 1.0000, 0.6425, 0.9999, 0.3795, 0.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.1496, 0.6965, 0.9633, 0.2396, 0.7213, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9663, 0.9976, 1.0000, 0.9962, 1.0000, 0.9999, 0.0000, 0.9995,
        0.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 1.0000, 0.8831, 1.0000, 1.0000, 0.9971, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.4079, 1.0000, 0.9629, 0.9956, 1.0000, 0.0000,
        0.0000, 0.3407, 0.0000, 0.0000, 1.0000, 0.2355, 1.0000, 1.0000, 1.0000,
        1.0000, 0.4249, 1.0000, 0.8165, 0.2262, 0.9953, 0.0000, 0.3229, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 0.4042, 0.9999, 1.0000, 1.0000, 0.9961, 1.0000]), 'num_pos': 232}
2020-12-06 16:45:11,887 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.538793
2020-12-06 16:45:11,890 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./_best_acc_r1.pth
2020-12-06 16:45:15,944 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: _best_acc_r1
2020-12-06 16:46:30,889 maskrcnn_benchmark.trainer INFO: eta: 0:40:30  iter: 2500  loss: 16.7165 (17.6107)  loss_classifier: 1.2784 (1.4033)  loss_box_reg: 0.6331 (0.9915)  loss_objectness: 12.3183 (12.5258)  loss_rpn_box_reg: 0.4310 (2.6902)  time: 3.7232 (4.8601)  data: 0.1389 (1.2560)  lr: 0.000000  max mem: 1313
2020-12-06 16:46:30,891 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./model_0002500.pth
2020-12-06 16:47:47,918 maskrcnn_benchmark.trainer INFO: eta: 0:38:49  iter: 2520  loss: 17.0595 (17.6096)  loss_classifier: 1.4878 (1.4107)  loss_box_reg: 0.8620 (0.9913)  loss_objectness: 12.6895 (12.5282)  loss_rpn_box_reg: 0.2064 (2.6795)  time: 3.7298 (4.8521)  data: 0.1383 (1.2479)  lr: 0.000000  max mem: 1313
2020-12-06 16:47:47,920 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:47:47,972 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:48:31,305 maskrcnn_benchmark.inference INFO: Total run time: 0:00:43.332188 (1.4942133673306168 s / img per device, on 1 devices)
2020-12-06 16:48:31,305 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.572941 (1.4335496918908481 s / img per device, on 1 devices)
2020-12-06 16:48:31,305 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:48:33,052 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:48:33,052 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([4.2996e-02, 1.8857e-02, 7.5356e-03, 3.9319e-03, 3.3268e-03, 3.8302e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.1216e-02,
        3.2840e-02, 1.2335e-02, 3.7950e-03, 2.7566e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 8.6583e-03, 0.0000e+00, 0.0000e+00,
        6.3687e-02, 2.6365e-02, 9.1263e-03, 3.3590e-03, 3.2520e-03, 7.0639e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.3427e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.9020e-02, 0.0000e+00, 0.0000e+00, 4.2927e-02,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7441e-02, 0.0000e+00, 0.0000e+00,
        7.1922e-02, 2.3713e-02, 9.8877e-03, 3.6216e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.8923e-01, 1.6881e-01, 4.0593e-02, 8.8036e-03,
        3.1167e-03, 3.0281e-03, 2.8827e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.2185e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1169e-01, 3.6466e-02, 1.0060e-02,
        3.7769e-03, 3.6184e-03, 3.2630e-03, 3.1395e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.3003e-03,
        0.0000e+00, 0.0000e+00, 5.5411e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3159e-01,
        1.9960e-02, 9.2988e-03, 3.8555e-03, 3.7726e-03, 3.3155e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.1458e-02, 1.5033e-02,
        1.2286e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 3.7906e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9699e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.4855e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.7471e-02,
        3.2436e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        1.3240e-02, 0.0000e+00, 0.0000e+00, 3.7493e-02, 3.7583e-03, 3.1022e-06,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        4.0924e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8.,
         8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  3.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1.,  3.,  5.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,
        -1., -1., -1.,  3.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,
         6.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8., -1.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  8.,  3.,  8.,  8.,  8., -1., -1.,  3.,  3.,  8.,  8.,  8.,  8.,
         8., -1.,  3.,  8., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8., -1.,  8.,
        -1., -1., -1., -1.,  3.,  5.,  6.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 0.0755, 1.0000, 1.0000, 1.0000, 0.9884, 1.0000, 1.0000,
        1.0000, 1.0000, 0.4562, 0.0000, 0.6298, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9999, 0.5231, 1.0000, 0.9739, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.4234, 1.0000, 1.0000, 0.6830, 0.9951, 0.1038,
        1.0000, 0.1044, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.0734, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0772, 1.0000, 0.3658,
        1.0000, 1.0000, 0.9975, 1.0000, 1.0000, 0.0000, 0.9993, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9976, 0.3270, 0.9591,
        0.0000, 1.0000, 0.9865, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9966,
        0.2118, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.7726, 0.6853,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9911, 1.0000, 1.0000, 0.9999, 0.9999,
        0.9974, 1.0000, 1.0000, 1.0000, 0.8641, 1.0000, 0.9997, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.1225, 1.0000, 0.5837, 0.9999, 1.0000, 1.0000,
        1.0000, 0.9807, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9993, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.7320, 1.0000, 1.0000, 1.0000,
        0.7689, 0.4685, 1.0000, 0.9799, 0.9934, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.9996, 0.9989, 1.0000, 1.0000, 0.9976, 1.0000,
        1.0000, 0.6259, 0.1914, 1.0000, 1.0000, 1.0000, 0.1513, 1.0000, 1.0000,
        1.0000, 0.9997, 0.9511, 0.9917, 1.0000, 1.0000, 0.0562, 1.0000, 1.0000,
        0.9527, 1.0000, 1.0000, 0.5795, 1.0000, 1.0000, 0.1682, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9996, 0.9027, 0.4622, 1.0000, 1.0000, 0.0000,
        0.0000, 0.1712, 0.9972, 1.0000, 1.0000, 0.1459, 0.9980, 1.0000, 0.0000,
        1.0000, 0.9988, 0.0000, 0.0000, 0.1805, 1.0000, 0.9993, 0.8579, 1.0000,
        1.0000, 0.4608, 1.0000, 1.0000, 1.0000, 0.3427, 0.0000, 0.9979, 0.0000,
        0.0000, 0.9996, 0.9955, 0.0709, 1.0000, 1.0000, 0.0000, 0.6765, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9968, 0.9997, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 16:48:33,080 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.504310
2020-12-06 16:49:47,674 maskrcnn_benchmark.trainer INFO: eta: 0:37:16  iter: 2540  loss: 15.5878 (17.6065)  loss_classifier: 1.1287 (1.4161)  loss_box_reg: 0.6501 (0.9888)  loss_objectness: 12.8811 (12.5288)  loss_rpn_box_reg: 0.2446 (2.6728)  time: 3.7129 (4.8610)  data: 0.1323 (1.2569)  lr: 0.000000  max mem: 1313
2020-12-06 16:51:02,495 maskrcnn_benchmark.trainer INFO: eta: 0:35:35  iter: 2560  loss: 17.4916 (17.6200)  loss_classifier: 2.2243 (1.4248)  loss_box_reg: 0.8316 (0.9877)  loss_objectness: 11.7809 (12.5235)  loss_rpn_box_reg: 0.4283 (2.6839)  time: 3.7171 (4.8523)  data: 0.1385 (1.2482)  lr: 0.000000  max mem: 1313
2020-12-06 16:51:02,497 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:51:02,552 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:51:44,918 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.366573 (1.4609162971891205 s / img per device, on 1 devices)
2020-12-06 16:51:44,919 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.651036 (1.4017598711211106 s / img per device, on 1 devices)
2020-12-06 16:51:44,919 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:51:46,686 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:51:46,687 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([7.4421e-02, 3.7610e-02, 2.5809e-02, 3.3724e-03, 2.9518e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.2899e-02,
        1.9871e-02, 3.7950e-03, 1.2866e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 3.9974e-02,
        2.5496e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3458e-02, 0.0000e+00, 0.0000e+00,
        3.6146e-02, 2.7042e-02, 3.7333e-03, 3.3184e-03, 7.5675e-04, 5.9779e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.9395e-03, 0.0000e+00, 0.0000e+00,
        1.0770e-01, 7.6438e-02, 2.4153e-02, 3.2276e-03, 3.1311e-03, 1.5110e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.3873e-01, 1.2279e-01, 4.3379e-02, 8.8036e-03,
        3.0755e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.3150e-02, 0.0000e+00, 0.0000e+00, 2.3905e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.2544e-02, 5.2143e-02, 4.6444e-02,
        3.4591e-02, 3.2111e-03, 1.0875e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.9428e-01, 6.0531e-02, 3.2068e-02, 2.4461e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 9.0231e-03,
        0.0000e+00, 0.0000e+00, 1.3603e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0120e-02,
        3.9617e-02, 1.9960e-02, 3.6569e-03, 3.1384e-03, 4.7049e-04, 4.0319e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.2374e-02, 2.5391e-02,
        3.7950e-03, 3.4256e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.6161e-02,
        3.9766e-03, 3.9337e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7757e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.2351e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.5158e-02, 0.0000e+00, 0.0000e+00,
        5.5869e-03, 0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,
         8., -1.,  8.,  8., -1.,  8.,  8.,  8.,  3., -1.,  8.,  8.,  3.,  3.,
         5.,  5.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,
         8.,  8.,  8., -1., -1.,  8.,  3.,  3.,  3.,  5.,  6.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  3.,  3.,  6.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  3.,
         8.,  8.,  8.,  8., -1., -1., -1.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  5.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1.,  8.,  6.,  8.,  8.,  8.,  3.,  8.,
         8., -1., -1.,  8., -1., -1., -1.,  6.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  5.,  8.,  6.,  8., -1., -1.,
        -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 1.0000, 1.0000, 0.9995, 1.0000, 1.0000, 0.6669, 0.0530,
        0.9637, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000, 1.0000,
        0.0000, 1.0000, 1.0000, 0.8108, 0.4371, 0.0000, 0.9333, 0.9992, 1.0000,
        0.0826, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9994, 1.0000, 0.8738,
        0.2212, 1.0000, 1.0000, 0.9998, 1.0000, 1.0000, 0.8472, 0.4302, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.7197, 0.0000,
        0.0000, 0.9992, 0.9881, 0.7316, 1.0000, 0.0000, 0.0000, 1.0000, 0.9990,
        0.9976, 0.9980, 1.0000, 1.0000, 1.0000, 0.9962, 0.4116, 1.0000, 1.0000,
        0.9993, 0.3365, 1.0000, 0.5214, 0.8767, 1.0000, 1.0000, 0.9994, 1.0000,
        0.9136, 0.9996, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.7903, 1.0000, 1.0000, 0.9987, 1.0000, 0.9999, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9991, 0.9995, 0.3855, 0.0000,
        0.1173, 0.9997, 1.0000, 1.0000, 1.0000, 1.0000, 0.8827, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.1602, 1.0000, 1.0000, 0.7165, 0.3651,
        1.0000, 1.0000, 1.0000, 0.9264, 0.0000, 0.0000, 0.0000, 0.1733, 0.8778,
        1.0000, 1.0000, 0.2942, 1.0000, 0.2450, 0.0000, 0.0000, 0.0000, 0.0000,
        0.8991, 1.0000, 0.0555, 0.9995, 0.2585, 1.0000, 0.9997, 0.9999, 1.0000,
        0.3409, 1.0000, 0.9997, 1.0000, 0.9151, 1.0000, 1.0000, 0.0000, 1.0000,
        0.9981, 1.0000, 1.0000, 0.8023, 0.9926, 1.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9996, 0.2353, 1.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9996, 0.7741, 0.4269, 1.0000, 0.5080, 0.4288, 0.0000,
        0.0000, 1.0000, 0.0000, 0.1033, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9991, 0.0935, 0.9999, 0.9757, 0.8118, 0.5729, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.6115, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 0.9444, 0.3244]), 'num_pos': 232}
2020-12-06 16:51:46,715 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.461207
2020-12-06 16:53:00,870 maskrcnn_benchmark.trainer INFO: eta: 0:34:01  iter: 2580  loss: 15.9893 (17.6219)  loss_classifier: 1.1420 (1.4285)  loss_box_reg: 0.6323 (0.9865)  loss_objectness: 12.7921 (12.5254)  loss_rpn_box_reg: 0.2046 (2.6815)  time: 3.7084 (4.8605)  data: 0.1370 (1.2567)  lr: 0.000000  max mem: 1313
2020-12-06 16:54:14,969 maskrcnn_benchmark.trainer INFO: eta: 0:32:20  iter: 2600  loss: 15.7509 (17.6215)  loss_classifier: 1.1995 (1.4331)  loss_box_reg: 0.6432 (0.9859)  loss_objectness: 12.7597 (12.5251)  loss_rpn_box_reg: 0.3351 (2.6774)  time: 3.7009 (4.8517)  data: 0.1330 (1.2481)  lr: 0.000000  max mem: 1313
2020-12-06 16:54:14,972 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:54:15,023 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:54:57,233 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.209766 (1.4555091611270248 s / img per device, on 1 devices)
2020-12-06 16:54:57,233 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.552535 (1.3983632613872659 s / img per device, on 1 devices)
2020-12-06 16:54:57,233 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:54:58,972 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:54:58,972 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([8.2039e-02, 5.2105e-02, 4.6148e-02, 3.9534e-03, 3.4085e-03, 3.0587e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.0011e-02,
        2.0661e-02, 1.9871e-02, 1.2335e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        3.0422e-02, 9.8877e-03, 3.6393e-03, 3.3184e-03, 3.3106e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        8.0590e-02, 5.8877e-02, 2.3290e-02, 9.8877e-03, 3.2250e-03, 6.3107e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1747e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.2337e-01, 1.0689e-01, 6.4396e-02, 2.5382e-02,
        3.0817e-03, 6.3472e-04, 7.8216e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.6418e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.7683e-02, 4.3763e-02, 6.1690e-03,
        3.6216e-03, 3.2444e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.8402e-03,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.8833e-02,
        1.9960e-02, 3.8555e-03, 3.4288e-03, 2.1749e-04, 4.0319e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.2181e-02, 1.2286e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6821e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.8724e-02,
        3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.5060e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9768e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0072e-02, 0.0000e+00, 0.0000e+00,
        2.2243e-02, 0.0000e+00, 0.0000e+00, 6.5343e-02, 3.7184e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.2164e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,
         8.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
         3.,  6.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,  3.,  6.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  8.,  3.,  3.,
         6.,  8.,  8.,  8.,  8., -1.,  6.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1., -1., -1.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  5.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8.,  3.,  5.,  6.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  8.,  8.,  5.,  8.,  8., -1., -1., -1., -1., -1., -1.,  8.,  8.,
         8., -1.,  3.,  3.,  3.,  5.,  6.,  8.,  8.,  8.,  8., -1.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1.,  6.,  8.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.8511, 0.2132, 0.9981, 1.0000, 1.0000, 1.0000, 0.1323, 1.0000,
        1.0000, 0.9897, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.1088, 0.9969,
        0.9719, 1.0000, 0.0714, 0.5920, 0.8975, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.3206, 1.0000, 0.9984, 1.0000, 1.0000, 0.5615, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9991, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.3739, 1.0000,
        0.8698, 1.0000, 0.9592, 0.4585, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9991, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9049, 1.0000, 1.0000, 0.9771, 0.9908, 1.0000,
        1.0000, 0.8819, 0.0000, 0.0000, 0.0000, 0.0000, 0.5067, 1.0000, 1.0000,
        0.9931, 0.9999, 0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 0.9691, 0.9999,
        0.2734, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.1050, 1.0000, 0.0000,
        1.0000, 0.9952, 1.0000, 1.0000, 1.0000, 0.9209, 1.0000, 1.0000, 0.9999,
        0.0000, 1.0000, 0.9999, 0.9035, 1.0000, 0.9967, 0.9998, 1.0000, 0.1410,
        1.0000, 0.9705, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.7329, 1.0000, 1.0000, 1.0000, 0.1724, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9976, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9999, 1.0000, 1.0000, 0.9985, 1.0000, 1.0000, 0.0000, 0.9614,
        0.9997, 1.0000, 1.0000, 0.9998, 0.8700, 1.0000, 0.7893, 0.0000, 0.0000,
        1.0000, 1.0000, 0.9987, 1.0000, 0.9297, 1.0000, 1.0000, 0.9914, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9951, 0.6727, 0.9164, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        1.0000, 0.9859, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999,
        0.0000, 0.1720, 1.0000, 0.9979, 0.9999, 0.9999, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.9880, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 1.0000, 0.9999, 1.0000, 0.9999, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 16:54:59,000 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.508621
2020-12-06 16:56:13,132 maskrcnn_benchmark.trainer INFO: eta: 0:30:46  iter: 2620  loss: 17.0769 (17.6247)  loss_classifier: 1.1070 (1.4443)  loss_box_reg: 0.7178 (0.9856)  loss_objectness: 13.0319 (12.5298)  loss_rpn_box_reg: 0.1359 (2.6651)  time: 3.7087 (4.8597)  data: 0.1354 (1.2564)  lr: 0.000000  max mem: 1313
2020-12-06 16:57:27,088 maskrcnn_benchmark.trainer INFO: eta: 0:29:06  iter: 2640  loss: 16.0792 (17.6235)  loss_classifier: 0.6614 (1.4455)  loss_box_reg: 0.5168 (0.9838)  loss_objectness: 12.9052 (12.5339)  loss_rpn_box_reg: 0.0833 (2.6603)  time: 3.6990 (4.8509)  data: 0.1314 (1.2479)  lr: 0.000000  max mem: 1313
2020-12-06 16:57:27,089 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 16:57:27,142 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 16:58:09,392 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.249684 (1.4568856420188114 s / img per device, on 1 devices)
2020-12-06 16:58:09,392 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.582264 (1.3993884283920814 s / img per device, on 1 devices)
2020-12-06 16:58:09,392 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 16:58:11,158 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 16:58:11,158 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([6.9554e-02, 5.5674e-02, 4.3009e-02, 3.4197e-03, 3.1441e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.9854e-02,
        4.5122e-02, 1.2335e-02, 1.1971e-02, 3.8606e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 1.6742e-02,
        4.2560e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.2277e-03, 0.0000e+00, 0.0000e+00,
        1.2124e-01, 6.2092e-02, 5.4919e-02, 2.8809e-02, 3.2968e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0027e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.5268e-03, 0.0000e+00, 0.0000e+00,
        7.0071e-02, 2.3713e-02, 1.0103e-02, 3.6263e-03, 3.3253e-04, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.0315e-01, 2.5493e-01, 1.4982e-01, 9.8733e-02,
        8.4278e-02, 4.0593e-02, 1.7668e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.4672e-02, 3.6413e-03, 1.4747e-03,
        1.0838e-06, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0662e-02,
        0.0000e+00, 0.0000e+00, 1.3457e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9812e-02,
        1.9960e-02, 3.3085e-03, 1.1075e-03, 4.0319e-05, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.8693e-02, 4.9398e-02,
        1.9707e-02, 3.8091e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 3.7856e-02, 1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0737e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.7187e-02, 2.0184e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8.,  8.,
         8., -1.,  8.,  8.,  3.,  3.,  8.,  8.,  8.,  3.,  6.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
         8.,  8.,  8., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  3.,  8.,  8.,  8.,  6.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1.,  3.,
         3.,  3.,  6.,  8.,  8.,  3.,  6.,  6.,  6.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  8.,  8., -1.,  8., -1.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  3., -1., -1.,  6.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1., -1.,  8., -1., -1.,  3., -1.,  8., -1., -1.,  3.,  8.,  3.,  8.,
         8., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  3.,  8.,  6.,  8., -1., -1.,
         3.,  3.,  5.,  6.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([0.0773, 1.0000, 1.0000, 0.9983, 1.0000, 1.0000, 1.0000, 0.7457, 1.0000,
        1.0000, 1.0000, 0.0000, 1.0000, 0.9988, 1.0000, 0.0000, 0.4180, 0.8294,
        0.9196, 0.9959, 0.7197, 0.9976, 0.9999, 0.0583, 1.0000, 0.9278, 1.0000,
        0.9267, 1.0000, 1.0000, 0.9961, 0.9906, 1.0000, 1.0000, 0.9962, 1.0000,
        0.4066, 0.1807, 0.9257, 1.0000, 0.9991, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9988, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9320, 0.9976, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9995, 1.0000, 0.9938, 1.0000, 1.0000, 1.0000, 0.2242, 0.5482, 1.0000,
        1.0000, 0.0000, 0.0000, 0.8386, 0.8390, 1.0000, 0.9048, 1.0000, 1.0000,
        0.3364, 0.1614, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9936,
        0.9964, 1.0000, 1.0000, 1.0000, 1.0000, 0.9868, 0.9999, 1.0000, 0.0645,
        0.0887, 1.0000, 0.5460, 0.4142, 1.0000, 0.0529, 0.9985, 0.2999, 0.0000,
        0.0000, 1.0000, 0.0000, 1.0000, 0.6388, 1.0000, 1.0000, 0.9549, 1.0000,
        1.0000, 0.9619, 0.9590, 0.0999, 1.0000, 1.0000, 1.0000, 0.8967, 1.0000,
        0.9877, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.1662, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.9445, 0.8169, 1.0000, 1.0000, 1.0000, 0.3774, 1.0000,
        1.0000, 0.9999, 1.0000, 1.0000, 0.9987, 0.8698, 1.0000, 0.0000, 0.7020,
        0.0000, 1.0000, 0.5259, 0.7029, 0.9809, 1.0000, 0.9997, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9960, 0.0000, 0.0000, 1.0000, 0.0000,
        0.9998, 0.0000, 0.0000, 1.0000, 0.9777, 0.1740, 0.9894, 0.0543, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9999, 1.0000, 1.0000, 0.3240, 1.0000,
        0.9947, 0.2982, 1.0000, 0.9901, 0.9130, 0.2198, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9016, 1.0000, 1.0000, 0.9897, 0.0000, 0.0000, 0.0563,
        0.8459, 1.0000, 1.0000, 0.9999, 0.9437, 1.0000, 0.9801]), 'num_pos': 232}
2020-12-06 16:58:11,185 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.431034
2020-12-06 16:59:25,322 maskrcnn_benchmark.trainer INFO: eta: 0:27:32  iter: 2660  loss: 14.4481 (17.6159)  loss_classifier: 0.6673 (1.4443)  loss_box_reg: 0.6795 (0.9811)  loss_objectness: 12.9716 (12.5343)  loss_rpn_box_reg: 0.0635 (2.6562)  time: 3.7071 (4.8589)  data: 0.1383 (1.2562)  lr: 0.000000  max mem: 1313
2020-12-06 17:00:39,788 maskrcnn_benchmark.trainer INFO: eta: 0:25:52  iter: 2680  loss: 16.2292 (17.6108)  loss_classifier: 1.1087 (1.4436)  loss_box_reg: 0.5812 (0.9802)  loss_objectness: 12.9088 (12.5371)  loss_rpn_box_reg: 0.1720 (2.6499)  time: 3.7160 (4.8504)  data: 0.1408 (1.2479)  lr: 0.000000  max mem: 1313
2020-12-06 17:00:39,790 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 17:00:39,844 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 17:01:22,092 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.248075 (1.4568301809245143 s / img per device, on 1 devices)
2020-12-06 17:01:22,092 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.583043 (1.399415271035556 s / img per device, on 1 devices)
2020-12-06 17:01:22,093 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 17:01:23,855 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 17:01:23,855 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.5893e-02, 7.5722e-03, 3.3184e-03, 2.3405e-03, 2.0810e-04, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.4444e-02,
        2.7898e-02, 1.9707e-02, 3.7950e-03, 1.3672e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.8715e-04, 0.0000e+00, 0.0000e+00, 5.8072e-02,
        1.6550e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3414e-02, 0.0000e+00, 0.0000e+00,
        5.8112e-02, 4.6115e-02, 4.4844e-02, 9.9831e-03, 3.6396e-03, 6.7740e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2160e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.8139e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        4.9926e-02, 1.7468e-02, 9.8877e-03, 2.7677e-03, 1.9554e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.6876e-01, 1.9890e-01, 8.1822e-02, 4.3788e-02,
        3.0755e-03, 2.1196e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0468e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1899e-01, 5.1756e-02, 2.3191e-02,
        4.5259e-03, 3.5240e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.2476e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9078e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.6812e-02,
        5.1690e-02, 1.9960e-02, 1.7151e-02, 8.8371e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.4895e-01, 3.8290e-02,
        2.5958e-02, 3.8104e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.6798e-02,
        1.9917e-02, 1.3279e-02, 4.2340e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.7854e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.6180e-02,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        5.4725e-03, 0.0000e+00, 0.0000e+00, 9.0221e-02, 1.9707e-02, 3.7184e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  2.,  8.,
         8.,  6.,  3.,  8.,  8.,  8.,  8.,  8.,  3., -1.,  8., -1., -1., -1.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1., -1., -1., -1., -1.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  3.,  3.,  3.,
         6.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1., -1., -1.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,
        -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  5.,  8.,  6.,  8.,  8.,  8.,  3.,  8.,
         8., -1.,  3.,  8.,  3.,  3.,  3.,  5.,  6.,  8.,  8.,  8.,  8., -1.,
        -1.,  8.,  8., -1., -1.,  3., -1.,  8., -1., -1., -1., -1., -1.,  6.,
         8., -1.,  8.,  8., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1.,  3.,  5.,  8.,  8.,  6.,  8., -1., -1.,
        -1.,  3.,  3.,  5.,  6.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.1638, 1.0000, 1.0000, 0.8875, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.2541, 1.0000, 1.0000, 0.9815, 0.5565, 1.0000,
        0.4048, 0.9104, 0.1641, 0.8393, 0.9997, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.9742, 1.0000, 1.0000, 0.9843, 1.0000, 0.9996, 0.5777, 0.9136,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 0.0595, 1.0000,
        1.0000, 1.0000, 0.0000, 0.4455, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9999, 1.0000, 1.0000, 0.6176, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9949, 1.0000,
        1.0000, 1.0000, 0.5269, 0.9738, 1.0000, 0.9985, 0.9964, 1.0000, 0.9988,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9999, 0.9990,
        0.9535, 0.0522, 1.0000, 1.0000, 0.9996, 1.0000, 1.0000, 1.0000, 1.0000,
        0.2334, 1.0000, 1.0000, 1.0000, 0.9998, 0.0964, 0.3638, 1.0000, 0.0000,
        0.0000, 0.9708, 0.9998, 0.0579, 1.0000, 1.0000, 0.9997, 1.0000, 1.0000,
        1.0000, 0.9992, 1.0000, 0.8699, 0.8413, 0.2109, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9754, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.9468, 0.9924, 1.0000, 1.0000, 0.7028, 1.0000, 1.0000, 1.0000, 0.9981,
        1.0000, 1.0000, 0.9993, 1.0000, 1.0000, 0.9974, 1.0000, 0.9929, 0.9999,
        0.1663, 1.0000, 1.0000, 0.1876, 0.9993, 0.7250, 1.0000, 0.0000, 0.9985,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 0.9998, 0.9947,
        1.0000, 0.0000, 0.0000, 0.9830, 1.0000, 0.0000, 0.0000, 0.7559, 0.0000,
        0.9994, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.8350, 1.0000, 0.0000,
        0.9999, 1.0000, 0.0000, 0.0000, 0.0977, 1.0000, 0.9974, 1.0000, 0.9021,
        0.0842, 1.0000, 1.0000, 0.9988, 1.0000, 1.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 0.9999, 0.9461, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0555, 0.0801, 0.9997, 1.0000, 0.9431, 0.9874, 0.9914]), 'num_pos': 232}
2020-12-06 17:01:23,883 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.487069
2020-12-06 17:02:38,707 maskrcnn_benchmark.trainer INFO: eta: 0:24:17  iter: 2700  loss: 15.0744 (17.6091)  loss_classifier: 0.9136 (1.4478)  loss_box_reg: 0.6842 (0.9807)  loss_objectness: 12.7180 (12.5407)  loss_rpn_box_reg: 0.0748 (2.6400)  time: 3.7078 (4.8585)  data: 0.1411 (1.2560)  lr: 0.000000  max mem: 1313
2020-12-06 17:03:52,962 maskrcnn_benchmark.trainer INFO: eta: 0:22:38  iter: 2720  loss: 15.6414 (17.6242)  loss_classifier: 1.3150 (1.4544)  loss_box_reg: 0.8204 (0.9804)  loss_objectness: 12.6347 (12.5380)  loss_rpn_box_reg: 0.3492 (2.6514)  time: 3.7113 (4.8501)  data: 0.1326 (1.2478)  lr: 0.000000  max mem: 1313
2020-12-06 17:03:52,964 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 17:03:53,016 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 17:04:35,288 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.271672 (1.457643854207006 s / img per device, on 1 devices)
2020-12-06 17:04:35,288 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.602357 (1.4000812727829506 s / img per device, on 1 devices)
2020-12-06 17:04:35,289 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 17:04:37,074 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 17:04:37,074 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([1.7389e-01, 8.3607e-02, 7.9010e-02, 6.7079e-02, 4.3929e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.4417e-02,
        3.7950e-03, 4.4812e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.2475e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.6650e-02, 0.0000e+00, 0.0000e+00,
        1.5240e-01, 8.0849e-02, 9.8877e-03, 3.3248e-03, 3.3229e-03, 2.0766e-03,
        7.4646e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.9561e-02, 0.0000e+00, 0.0000e+00, 1.7264e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.1355e-03, 0.0000e+00, 0.0000e+00,
        7.3377e-02, 6.4548e-02, 2.9198e-02, 9.9558e-03, 3.6248e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.4624e-01, 1.0689e-01, 7.8464e-02, 1.8935e-02,
        8.8036e-03, 3.0755e-03, 1.3302e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 7.8525e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0278e-01, 6.1679e-02, 5.9349e-02,
        5.6380e-02, 4.2952e-02, 3.2280e-02, 1.0017e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.2787e-01, 4.3085e-02, 1.9473e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.7965e-01,
        3.1137e-02, 3.7908e-03, 3.4413e-03, 3.2062e-03, 1.2294e-03, 4.0319e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.2875e-02, 1.2286e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 8.1448e-02, 2.0756e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.9502e-02, 0.0000e+00, 0.0000e+00,
        1.2341e-02, 0.0000e+00, 0.0000e+00, 3.0702e-01, 2.0677e-02, 3.7126e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1.,  8., -1.,  6.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,
         3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1., -1., -1.,  8.,  8.,
         8.,  8.,  8.,  3.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  3.,  3.,  8.,  8.,  8.,  6.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1.,  3.,
         3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1.,  8., -1., -1., -1.,  8.,  8.,  6.,  8.,  8.,  8.,  3.,
        -1., -1., -1., -1.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,
         8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1., -1.,  3.,  5.,  6.,  8., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1.,  3.,  6.,  8.,  8.,  8.,  8., -1., -1.,
        -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 0.0582, 1.0000, 0.9999, 0.9983, 0.9711, 1.0000, 0.9998,
        1.0000, 0.0518, 0.5514, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000,
        0.9603, 0.7064, 0.9598, 1.0000, 0.9474, 0.0000, 0.0000, 0.0000, 0.0000,
        0.2674, 0.3697, 0.9962, 0.9937, 1.0000, 1.0000, 1.0000, 1.0000, 0.8690,
        1.0000, 0.9999, 1.0000, 1.0000, 0.1768, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9992, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9270, 1.0000, 1.0000, 0.9875, 0.9809, 0.9636, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.8463, 1.0000, 1.0000, 0.6527, 0.9219, 1.0000,
        0.9987, 0.0000, 0.9997, 1.0000, 0.0943, 0.8625, 0.9998, 1.0000, 1.0000,
        0.0769, 0.8378, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9983, 0.1390,
        1.0000, 0.2190, 1.0000, 1.0000, 1.0000, 0.1048, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0768, 0.0000, 1.0000, 0.0557, 1.0000, 1.0000, 0.1278, 0.9443,
        1.0000, 0.9998, 1.0000, 0.4815, 0.9517, 0.5537, 1.0000, 1.0000, 0.9998,
        1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.8296, 0.9861,
        1.0000, 1.0000, 1.0000, 0.9999, 0.9945, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9999, 0.9880, 1.0000, 0.4830, 1.0000, 0.3392, 1.0000, 1.0000, 1.0000,
        1.0000, 0.0727, 0.4461, 0.9992, 1.0000, 0.9918, 1.0000, 1.0000, 0.9996,
        0.9999, 1.0000, 1.0000, 0.9997, 1.0000, 1.0000, 0.9973, 1.0000, 1.0000,
        0.9739, 0.5097, 1.0000, 1.0000, 1.0000, 0.9597, 1.0000, 0.9998, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.6701, 0.3298, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0944, 0.9999, 0.8618, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0830, 1.0000, 1.0000, 1.0000,
        0.9562, 0.9999, 1.0000, 0.9453, 0.7524, 0.4272, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.9977, 1.0000, 0.9676, 1.0000]), 'num_pos': 232}
2020-12-06 17:04:37,102 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.482759
2020-12-06 17:05:52,599 maskrcnn_benchmark.trainer INFO: eta: 0:21:03  iter: 2740  loss: 16.1292 (17.6282)  loss_classifier: 1.2634 (1.4584)  loss_box_reg: 0.5815 (0.9786)  loss_objectness: 12.2151 (12.5353)  loss_rpn_box_reg: 0.0699 (2.6560)  time: 3.7167 (4.8584)  data: 0.1350 (1.2558)  lr: 0.000000  max mem: 1313
2020-12-06 17:07:06,889 maskrcnn_benchmark.trainer INFO: eta: 0:19:24  iter: 2760  loss: 15.3840 (17.6159)  loss_classifier: 1.1493 (1.4592)  loss_box_reg: 0.5408 (0.9764)  loss_objectness: 12.0224 (12.5350)  loss_rpn_box_reg: 0.1012 (2.6453)  time: 3.7141 (4.8501)  data: 0.1335 (1.2477)  lr: 0.000000  max mem: 1313
2020-12-06 17:07:06,890 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 17:07:06,943 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 17:07:49,169 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.226056 (1.456070899963379 s / img per device, on 1 devices)
2020-12-06 17:07:49,169 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.558506 (1.398569156383646 s / img per device, on 1 devices)
2020-12-06 17:07:49,169 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 17:07:50,938 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 17:07:50,939 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0551, 0.0271, 0.0039, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0334, 0.0310, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0056, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0429, 0.0000, 0.0000,
        0.0874, 0.0349, 0.0101, 0.0033, 0.0032, 0.0025, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0610, 0.0442, 0.0185, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0095, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0083, 0.0000, 0.0000,
        0.0725, 0.0621, 0.0518, 0.0290, 0.0101, 0.0032, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0990, 0.0586, 0.0312, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1117, 0.0581, 0.0088, 0.0022, 0.0005, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0256, 0.0000, 0.0000, 0.0582,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0566, 0.0239, 0.0174, 0.0099, 0.0036, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0208, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0127, 0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0492, 0.0200, 0.0029, 0.0022,
        0.0015, 0.0015, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0231, 0.0038,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.2912,
        0.0569, 0.0253, 0.0185, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0333,
        0.0165, 0.0135, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0187, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0158, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
         8.,  8.,  8., -1., -1.,  6.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1.,  8., -1.,  3.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,
         8., -1.,  3.,  3.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  8.,  5.,  6.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  3.,  8.,  6.,  8.,  8.,  8.,
         8., -1., -1.,  3.,  3.,  5.,  6.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  3.,  3.,  3.,  8.,  8.,  6.,
         8., -1., -1.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8., -1., -1.,
         8., -1., -1., -1.,  3.,  3.,  6.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 1.0000, 0.9720, 0.3545, 1.0000, 1.0000, 0.8303, 0.2806,
        0.0655, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.1596, 1.0000, 0.0000,
        0.0000, 0.6372, 0.9987, 0.9995, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.3354, 1.0000, 1.0000, 1.0000, 0.6001,
        1.0000, 0.0658, 1.0000, 1.0000, 0.9912, 0.8028, 0.9965, 1.0000, 0.9998,
        0.0709, 1.0000, 0.0000, 0.9992, 0.0000, 0.9997, 1.0000, 1.0000, 1.0000,
        0.3090, 0.6112, 0.9811, 0.9162, 0.9944, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.8270, 0.9233, 1.0000, 1.0000, 0.9986, 0.9985, 1.0000,
        0.1065, 1.0000, 0.9504, 1.0000, 1.0000, 0.9996, 0.9939, 0.9998, 0.9977,
        0.3265, 1.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0840, 0.2217, 1.0000,
        1.0000, 0.9160, 1.0000, 1.0000, 1.0000, 1.0000, 0.6149, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9997, 0.3130, 1.0000, 1.0000, 0.0000,
        0.8387, 1.0000, 0.9776, 1.0000, 0.9981, 0.8744, 0.9997, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9990, 0.9951, 1.0000, 0.9563, 1.0000,
        1.0000, 0.2423, 0.0000, 0.0000, 0.0000, 0.7010, 1.0000, 1.0000, 0.2549,
        0.8047, 1.0000, 0.9999, 1.0000, 0.9974, 0.0000, 0.0000, 0.0000, 0.9938,
        0.9782, 1.0000, 0.2014, 0.4728, 0.0756, 0.9943, 1.0000, 1.0000, 1.0000,
        1.0000, 0.6631, 0.0711, 0.4428, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.9997, 0.9976, 1.0000, 0.9990, 1.0000, 1.0000, 0.8702, 0.0000, 0.0000,
        0.9997, 1.0000, 0.8235, 1.0000, 0.2719, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000,
        0.9167, 0.2654, 0.8430, 0.9996, 1.0000, 1.0000, 0.9996, 1.0000, 0.0000,
        0.0000, 0.6287, 1.0000, 1.0000, 1.0000, 0.6125, 1.0000, 1.0000, 1.0000,
        0.6182, 0.8905, 1.0000, 0.9996, 0.9795, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.2636, 1.0000, 0.9820, 0.9431, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.1667, 0.9992, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 17:07:50,966 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.495690
2020-12-06 17:09:05,095 maskrcnn_benchmark.trainer INFO: eta: 0:17:48  iter: 2780  loss: 14.5713 (17.6021)  loss_classifier: 0.7752 (1.4570)  loss_box_reg: 0.2864 (0.9729)  loss_objectness: 12.4474 (12.5351)  loss_rpn_box_reg: 0.0415 (2.6371)  time: 3.7006 (4.8577)  data: 0.1348 (1.2555)  lr: 0.000000  max mem: 1313
2020-12-06 17:10:19,337 maskrcnn_benchmark.trainer INFO: eta: 0:16:09  iter: 2800  loss: 15.4639 (17.5933)  loss_classifier: 0.9043 (1.4556)  loss_box_reg: 0.5230 (0.9708)  loss_objectness: 12.6392 (12.5377)  loss_rpn_box_reg: 0.0418 (2.6293)  time: 3.7108 (4.8495)  data: 0.1384 (1.2475)  lr: 0.000000  max mem: 1313
2020-12-06 17:10:19,340 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 17:10:19,399 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 17:11:01,822 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.422460 (1.4628434345639985 s / img per device, on 1 devices)
2020-12-06 17:11:01,822 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.600081 (1.4000027837424442 s / img per device, on 1 devices)
2020-12-06 17:11:01,822 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 17:11:03,532 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 17:11:03,532 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([1.4846e-01, 2.5893e-02, 1.5169e-02, 3.9146e-03, 3.1493e-03, 4.5038e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.2267e-01,
        2.1139e-01, 1.8449e-01, 1.2363e-01, 1.9871e-02, 3.7950e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.4765e-02, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 9.8877e-03, 3.7115e-03, 2.6796e-03, 2.9247e-04, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.3700e-02, 0.0000e+00, 0.0000e+00, 2.3656e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6037e-02, 0.0000e+00, 0.0000e+00,
        3.1229e-02, 9.8877e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.5012e-01, 1.8898e-01, 1.3897e-01, 6.6705e-02,
        5.9392e-02, 5.6793e-02, 3.0997e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.3011e-02, 0.0000e+00, 0.0000e+00, 4.9059e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 8.7120e-02, 7.5048e-02, 5.4584e-02,
        3.9289e-02, 2.8395e-02, 2.3191e-02, 1.0054e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5152e-02, 6.1979e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3258e-03,
        0.0000e+00, 0.0000e+00, 1.4512e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1076e-01,
        9.4446e-02, 5.9312e-02, 1.6027e-03, 7.2551e-04, 4.0319e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 9.4218e-02, 1.9707e-02,
        1.2286e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 8.1844e-02, 1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9699e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 2.0184e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 8.5345e-02, 0.0000e+00, 0.0000e+00,
        1.0520e-02, 0.0000e+00, 0.0000e+00, 7.3082e-02, 2.0677e-02, 3.8673e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        9.3368e-02, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,
         5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  3.,  3.,  8.,
         8.,  8.,  8., -1., -1.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3., -1., -1., -1.,  3.,  8.,  6.,  8.,  8.,  3.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  3.,  3.,  6.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,
         8., -1., -1.,  8.,  3.,  5.,  6.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1.,  8.,  3.,  8.,  8.,  8., -1.,  3., -1.,  3.,  6.,  8.,  8.,  8.,
         8.,  5.,  5.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8.,  3.,  8.,  6.,  8.,  8.,  8.,  8., -1., -1.,
         8.,  3.,  3.,  6.,  3.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 0.9776, 1.0000, 1.0000, 0.6326, 1.0000, 0.9923, 0.9462,
        1.0000, 0.9744, 1.0000, 1.0000, 0.9441, 1.0000, 1.0000, 1.0000, 0.3878,
        1.0000, 1.0000, 0.9991, 0.6248, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.4789, 0.9716, 1.0000, 0.9999, 0.9728, 1.0000, 1.0000, 0.1660, 0.5804,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.1090,
        0.9809, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.9994, 0.4563, 1.0000, 0.9893, 1.0000, 0.0000, 0.0000, 1.0000, 0.9990,
        1.0000, 0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.8399, 0.9487,
        0.0000, 0.0000, 0.0000, 1.0000, 0.9997, 0.9993, 1.0000, 1.0000, 0.6763,
        0.9981, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9996, 0.0000,
        0.0000, 1.0000, 0.8485, 0.4863, 1.0000, 0.9999, 1.0000, 0.9843, 1.0000,
        0.9999, 1.0000, 0.9694, 1.0000, 0.2401, 0.4726, 0.9997, 0.2925, 1.0000,
        1.0000, 0.9996, 1.0000, 0.4417, 1.0000, 1.0000, 0.4203, 1.0000, 1.0000,
        1.0000, 0.5715, 0.3601, 0.6061, 0.1255, 0.9974, 1.0000, 1.0000, 0.5442,
        1.0000, 0.9375, 0.0000, 0.9999, 1.0000, 0.0511, 1.0000, 0.9979, 0.9998,
        0.3522, 1.0000, 0.1466, 0.2214, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.2540, 0.5700, 0.4634, 0.9143, 1.0000, 1.0000, 0.9995,
        0.6037, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.7814, 1.0000,
        0.9990, 0.1703, 0.9996, 0.2322, 1.0000, 1.0000, 0.8065, 0.0000, 0.0000,
        0.9088, 0.0984, 1.0000, 1.0000, 0.9016, 1.0000, 1.0000, 0.1699, 0.0000,
        0.0000, 0.0000, 0.0000, 0.6115, 1.0000, 0.9967, 1.0000, 1.0000, 0.0000,
        0.8865, 0.0000, 0.9982, 0.9999, 1.0000, 1.0000, 0.5465, 1.0000, 0.9985,
        0.9601, 1.0000, 1.0000, 0.6933, 1.0000, 0.4070, 1.0000, 1.0000, 1.0000,
        0.2287, 1.0000, 1.0000, 0.9732, 0.7072, 0.9941, 0.0000, 1.0000, 1.0000,
        0.9780, 1.0000, 1.0000, 1.0000, 1.0000, 0.9992, 0.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.7411, 0.1162, 0.9992, 1.0000]), 'num_pos': 232}
2020-12-06 17:11:03,559 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.534483
2020-12-06 17:12:18,479 maskrcnn_benchmark.trainer INFO: eta: 0:14:34  iter: 2820  loss: 15.0021 (17.5782)  loss_classifier: 0.5010 (1.4526)  loss_box_reg: 0.3875 (0.9673)  loss_objectness: 13.0387 (12.5418)  loss_rpn_box_reg: 0.0548 (2.6165)  time: 3.7274 (4.8574)  data: 0.1414 (1.2554)  lr: 0.000000  max mem: 1313
2020-12-06 17:13:32,912 maskrcnn_benchmark.trainer INFO: eta: 0:12:55  iter: 2840  loss: 16.1889 (17.5760)  loss_classifier: 1.0792 (1.4544)  loss_box_reg: 0.5060 (0.9649)  loss_objectness: 12.1757 (12.5408)  loss_rpn_box_reg: 0.0851 (2.6158)  time: 3.7057 (4.8494)  data: 0.1357 (1.2475)  lr: 0.000000  max mem: 1313
2020-12-06 17:13:32,913 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 17:13:32,966 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 17:14:15,261 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.294627 (1.458435428553614 s / img per device, on 1 devices)
2020-12-06 17:14:15,261 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.573477 (1.3990854065993736 s / img per device, on 1 devices)
2020-12-06 17:14:15,262 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 17:14:16,967 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 17:14:16,967 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([7.4755e-02, 5.5641e-02, 3.2389e-02, 2.5893e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0701e-01,
        2.3153e-02, 3.7950e-03, 1.6795e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 1.0948e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.8443e-03, 0.0000e+00, 0.0000e+00,
        9.8811e-02, 2.6365e-02, 3.3282e-03, 2.2562e-03, 5.9626e-04, 5.5801e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.9938e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.5490e-03, 0.0000e+00, 0.0000e+00,
        2.5186e-02, 3.6453e-03, 1.3428e-05, 3.5640e-07, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.4335e-02,
        1.9473e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.8982e-01, 1.2996e-01, 8.9609e-02, 4.2105e-02,
        3.2345e-03, 9.1255e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.2987e-02, 2.3603e-02, 3.5240e-03,
        3.2366e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.2062e-01, 7.2102e-02, 3.5147e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0794e-02,
        0.0000e+00, 0.0000e+00, 4.1997e-02, 3.8525e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9960e-02,
        9.4443e-03, 3.8914e-03, 1.9446e-03, 1.2070e-03, 1.0044e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.4417e-02, 3.8125e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        5.4147e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1.,  8.,  8., -1.,  8.,  8.,  8.,  8., -1., -1.,  8.,  3.,  6.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3., -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  6.,
         6.,  8.,  6.,  6.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8., -1.,
         8., -1., -1.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  3.,  8.,  6.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,
         8., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  8., -1.,  8.,  8.,  8.,
         8., -1., -1., -1., -1., -1.,  5.,  6.,  8.,  8.,  8., -1., -1., -1.,
        -1., -1.,  3.,  6.,  8.,  8., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,
         8., -1.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1.,  3.,  6.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([0.1595, 0.9999, 1.0000, 1.0000, 0.9983, 1.0000, 0.9960, 1.0000, 0.9999,
        0.9999, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.4422, 0.9644,
        0.0000, 1.0000, 0.1954, 0.3848, 1.0000, 0.0000, 0.0000, 1.0000, 0.2332,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9971, 1.0000, 1.0000, 0.9989, 1.0000,
        0.1922, 1.0000, 1.0000, 0.9750, 0.3227, 1.0000, 1.0000, 1.0000, 1.0000,
        0.8518, 1.0000, 0.0000, 0.0000, 0.1808, 0.3957, 1.0000, 1.0000, 0.9935,
        0.9987, 0.9258, 1.0000, 0.9994, 0.0844, 0.0000, 0.0000, 0.9998, 0.9998,
        1.0000, 0.9997, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9896, 1.0000,
        1.0000, 1.0000, 0.9998, 1.0000, 0.9991, 0.9723, 0.9983, 0.9971, 0.0752,
        1.0000, 0.3286, 0.0000, 1.0000, 0.0000, 0.0000, 0.9998, 0.9710, 1.0000,
        1.0000, 0.7561, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9998, 0.5664,
        0.9990, 1.0000, 0.9999, 0.9984, 1.0000, 0.9780, 0.2569, 0.7702, 0.9744,
        1.0000, 1.0000, 1.0000, 0.9898, 0.9592, 0.0624, 1.0000, 0.9581, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.5856, 1.0000, 0.9006, 0.9882,
        1.0000, 1.0000, 1.0000, 0.2380, 0.0000, 0.0000, 1.0000, 1.0000, 0.9999,
        1.0000, 0.1770, 1.0000, 0.9989, 0.6944, 1.0000, 0.0000, 0.9914, 0.2655,
        1.0000, 0.9232, 1.0000, 1.0000, 0.3563, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9852, 1.0000, 0.9888, 1.0000, 0.9997, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0744, 1.0000, 1.0000, 0.9997, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.1458, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0571, 0.5125, 0.0604, 0.0000,
        0.0000, 0.0000, 1.0000, 0.9790, 1.0000, 1.0000, 1.0000, 0.9749, 0.0000,
        0.2565, 1.0000, 1.0000, 0.7421, 1.0000, 1.0000, 0.1441, 1.0000, 0.8887,
        0.2825, 0.6862, 0.9993, 0.9999, 0.1979, 1.0000, 0.0000, 0.0000, 0.0000,
        0.9922, 1.0000, 0.7253, 1.0000, 1.0000, 0.9791, 0.0000, 0.0000, 0.8466,
        0.0000, 0.9303, 1.0000, 0.9942, 0.2196, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 17:14:16,994 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.543103
2020-12-06 17:14:16,996 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./_best_acc_r1.pth
2020-12-06 17:14:21,100 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: _best_acc_r1
2020-12-06 17:15:35,543 maskrcnn_benchmark.trainer INFO: eta: 0:11:20  iter: 2860  loss: 15.7172 (17.5739)  loss_classifier: 1.5562 (1.4576)  loss_box_reg: 0.6825 (0.9643)  loss_objectness: 12.7065 (12.5398)  loss_rpn_box_reg: 0.1856 (2.6122)  time: 3.7109 (4.8584)  data: 0.1358 (1.2566)  lr: 0.000000  max mem: 1313
2020-12-06 17:16:49,876 maskrcnn_benchmark.trainer INFO: eta: 0:09:42  iter: 2880  loss: 15.3581 (17.5655)  loss_classifier: 0.8095 (1.4553)  loss_box_reg: 0.4004 (0.9606)  loss_objectness: 13.4504 (12.5452)  loss_rpn_box_reg: 0.0622 (2.6044)  time: 3.7123 (4.8504)  data: 0.1347 (1.2489)  lr: 0.000000  max mem: 1313
2020-12-06 17:16:49,878 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 17:16:49,931 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 17:17:32,491 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.559968 (1.4675851114865006 s / img per device, on 1 devices)
2020-12-06 17:17:32,492 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.877347 (1.4095636976176296 s / img per device, on 1 devices)
2020-12-06 17:17:32,492 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 17:17:34,246 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 17:17:34,246 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.9723e-02, 2.5893e-02, 3.8802e-03, 3.1493e-03, 4.8309e-04, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        1.2591e-02, 3.8313e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        1.1255e-01, 5.0122e-02, 2.3823e-02, 4.4948e-03, 3.3084e-03, 2.0556e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.4924e-03, 0.0000e+00, 0.0000e+00, 8.7080e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.8383e-02, 0.0000e+00, 0.0000e+00,
        4.8699e-02, 3.9381e-02, 6.5649e-03, 3.4316e-03, 3.2062e-03, 9.0000e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.3065e-01, 1.0689e-01, 3.2345e-03, 1.8196e-03,
        1.2650e-03, 9.0920e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.7650e-02, 6.1061e-02, 5.3204e-02,
        2.6293e-02, 3.5240e-03, 1.6818e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.5473e-03,
        0.0000e+00, 0.0000e+00, 3.2083e-02, 1.7980e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.6727e-02,
        1.9960e-02, 3.8555e-03, 1.0047e-03, 4.1544e-04, 1.9496e-04, 4.0319e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.1181e-02, 1.9707e-02,
        4.9949e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 4.5818e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.1888e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.8381e-02, 0.0000e+00, 0.0000e+00,
        3.9426e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.3617e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        7.8646e-02, 1.6481e-02, 1.5848e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  6.,
         8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1., -1., -1.,  3.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.,
         8.,  3.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8.,  5.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1.,  3.,
         3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
        -1.,  8., -1.,  3.,  5.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  8.,  8., -1.,  8.,  6.,  8.,  8.,  8.,  3.,  8.,
         8.,  3.,  3.,  8.,  3.,  3.,  6.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1., -1., -1.,  3.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8., -1.,
        -1., -1., -1.,  8.,  3.,  3.,  5.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  6.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 0.3586, 0.7102, 0.1068, 1.0000, 1.0000, 1.0000, 0.9999,
        0.9730, 0.9984, 0.0000, 1.0000, 0.8536, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0676, 0.0958, 0.9997, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.9710, 0.9963, 1.0000, 1.0000, 0.9966, 1.0000,
        0.8272, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9366, 1.0000, 0.9781,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9785, 0.9099, 0.5108, 0.6724, 0.9998, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.9987, 0.9988, 1.0000, 1.0000, 1.0000, 1.0000, 0.1441, 0.8236,
        1.0000, 0.2090, 1.0000, 0.9937, 1.0000, 0.9993, 0.9999, 0.9976, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9997, 1.0000,
        0.9995, 0.1991, 1.0000, 1.0000, 0.2978, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9989, 0.3690, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9968, 1.0000, 0.1946, 1.0000, 0.5910, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9992, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9999, 0.9173,
        0.9667, 0.3820, 1.0000, 1.0000, 1.0000, 0.0000, 0.6765, 0.0000, 1.0000,
        0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999,
        1.0000, 1.0000, 0.9999, 1.0000, 0.9660, 1.0000, 1.0000, 0.0000, 0.6061,
        0.9943, 1.0000, 1.0000, 1.0000, 0.3391, 0.9666, 1.0000, 0.9987, 1.0000,
        1.0000, 0.6142, 1.0000, 1.0000, 0.1292, 0.9721, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.1235, 0.9998, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9989, 0.3661, 0.6171, 1.0000, 0.9994, 1.0000, 1.0000, 0.9963,
        1.0000, 0.9977, 0.9786, 0.9968, 0.1584, 1.0000, 0.0000, 0.5467, 0.0000,
        1.0000, 1.0000, 1.0000, 0.9945, 1.0000, 0.9141, 1.0000, 0.9986, 1.0000,
        1.0000, 0.9997, 0.9774, 1.0000, 0.9777, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 17:17:34,274 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.482759
2020-12-06 17:18:49,255 maskrcnn_benchmark.trainer INFO: eta: 0:08:05  iter: 2900  loss: 16.5629 (17.5641)  loss_classifier: 0.9479 (1.4590)  loss_box_reg: 0.8397 (0.9600)  loss_objectness: 11.9924 (12.5418)  loss_rpn_box_reg: 0.3192 (2.6033)  time: 3.7232 (4.8581)  data: 0.1340 (1.2565)  lr: 0.000000  max mem: 1313
2020-12-06 17:20:03,605 maskrcnn_benchmark.trainer INFO: eta: 0:06:28  iter: 2920  loss: 19.5527 (17.5871)  loss_classifier: 1.4875 (1.4646)  loss_box_reg: 0.8518 (0.9609)  loss_objectness: 12.1779 (12.5378)  loss_rpn_box_reg: 0.8106 (2.6237)  time: 3.7133 (4.8503)  data: 0.1349 (1.2488)  lr: 0.000000  max mem: 1313
2020-12-06 17:20:03,607 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 17:20:03,659 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 17:20:46,765 maskrcnn_benchmark.inference INFO: Total run time: 0:00:43.105906 (1.486410560279057 s / img per device, on 1 devices)
2020-12-06 17:20:46,765 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.362343 (1.4262876757260026 s / img per device, on 1 devices)
2020-12-06 17:20:46,765 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 17:20:48,515 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 17:20:48,515 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([1.9399e-01, 8.3733e-02, 7.9814e-02, 3.6599e-02, 2.5636e-02, 1.8480e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        3.7950e-03, 4.7867e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.6914e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0310e-02, 0.0000e+00, 0.0000e+00,
        1.6014e-01, 7.4715e-02, 2.6635e-02, 2.7032e-04, 9.0698e-05, 3.3000e-06,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7792e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.6879e-03, 0.0000e+00, 0.0000e+00,
        2.5186e-02, 9.8877e-03, 2.4610e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.4873e-01, 1.5465e-01, 1.0589e-01, 4.0593e-02,
        3.0755e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.3131e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.9216e-02, 2.3927e-02, 2.1901e-02,
        3.3626e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6551e-01, 1.1445e-01, 1.7869e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3258e-03,
        0.0000e+00, 0.0000e+00, 1.3882e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3316e-02,
        4.0260e-03, 3.6216e-03, 3.4312e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3055e-02, 4.0190e-03,
        3.4256e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.3814e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        3.9426e-03, 0.0000e+00, 0.0000e+00, 5.0596e-02, 1.9707e-02, 2.9797e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  3.,
         8.,  6.,  8.,  3.,  8.,  8.,  8.,  8.,  3., -1.,  8., -1., -1.,  3.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1., -1.,  3.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1.,  3.,  3.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  8.,  3.,  6.,
         8.,  8.,  8.,  8.,  8.,  3.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8., -1., -1., -1.,
        -1., -1., -1., -1.,  3.,  8., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1.,  8.,  6.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1., -1.,  5.,  6.,  8.,  8.,  8.]), 'best match scores': tensor([0.7461, 0.8892, 0.9909, 1.0000, 1.0000, 1.0000, 1.0000, 0.9946, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.4845, 1.0000, 0.6245, 0.7803, 0.0904,
        1.0000, 0.8070, 1.0000, 0.9482, 0.0910, 0.0000, 0.9997, 0.0000, 0.0000,
        1.0000, 1.0000, 0.7659, 1.0000, 0.9990, 1.0000, 1.0000, 0.4905, 0.9912,
        0.4258, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.2638, 0.9618,
        1.0000, 0.2085, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9901,
        0.9835, 1.0000, 1.0000, 0.9624, 0.9758, 0.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9998, 1.0000, 0.9247, 1.0000, 0.6497,
        0.0000, 0.9310, 1.0000, 1.0000, 1.0000, 0.1166, 1.0000, 1.0000, 0.7156,
        0.9909, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9988,
        1.0000, 1.0000, 1.0000, 0.9960, 1.0000, 1.0000, 0.9761, 0.9982, 1.0000,
        0.1899, 0.9998, 0.9213, 1.0000, 1.0000, 0.9998, 1.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 0.9998, 1.0000, 1.0000, 0.9810, 1.0000, 1.0000, 0.9986,
        0.8393, 1.0000, 0.9320, 0.9999, 1.0000, 0.6668, 1.0000, 0.1741, 1.0000,
        1.0000, 1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9866,
        0.9990, 0.1666, 0.0834, 0.9999, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 1.0000, 0.5124, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9995, 0.9999, 1.0000, 0.9996, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.9999, 0.4592, 1.0000, 0.1710, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 1.0000, 0.9237, 1.0000, 0.2308, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9510, 0.9997, 1.0000, 1.0000, 1.0000, 0.9469, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.5856, 1.0000,
        0.0734, 1.0000, 1.0000, 0.9999, 0.7687, 1.0000, 0.0000, 0.9986, 0.0000,
        0.5139, 1.0000, 1.0000, 1.0000, 0.9997, 0.9996, 0.0000, 0.0000, 0.7901,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 17:20:48,543 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.478448
2020-12-06 17:22:02,697 maskrcnn_benchmark.trainer INFO: eta: 0:04:51  iter: 2940  loss: 14.9388 (17.5772)  loss_classifier: 0.8516 (1.4661)  loss_box_reg: 0.6594 (0.9592)  loss_objectness: 11.7596 (12.5349)  loss_rpn_box_reg: 0.1859 (2.6170)  time: 3.7063 (4.8578)  data: 0.1331 (1.2565)  lr: 0.000000  max mem: 1313
2020-12-06 17:23:16,715 maskrcnn_benchmark.trainer INFO: eta: 0:03:14  iter: 2960  loss: 17.9620 (17.5935)  loss_classifier: 1.8028 (1.4721)  loss_box_reg: 0.8896 (0.9587)  loss_objectness: 12.8440 (12.5330)  loss_rpn_box_reg: 0.3147 (2.6296)  time: 3.6988 (4.8500)  data: 0.1345 (1.2489)  lr: 0.000000  max mem: 1313
2020-12-06 17:23:16,717 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 17:23:16,769 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 17:23:58,989 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.220237 (1.4558702337330784 s / img per device, on 1 devices)
2020-12-06 17:23:58,989 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.547446 (1.3981877770917168 s / img per device, on 1 devices)
2020-12-06 17:23:58,989 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 17:24:00,726 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 17:24:00,727 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([3.8532e-03, 4.0887e-04, 3.1678e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        3.7950e-03, 4.7867e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 5.2433e-02,
        1.6550e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        1.4193e-01, 2.6365e-02, 9.0004e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.5841e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        7.8369e-02, 4.9618e-02, 2.3290e-02, 6.1423e-03, 2.0194e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.4418e-01, 2.2957e-01, 1.0623e-01, 6.5863e-02,
        4.0593e-02, 2.6075e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 7.3376e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        1.0985e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.9577e-02, 5.1653e-02, 2.3191e-02,
        9.8877e-03, 3.6375e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.5829e-01, 6.7602e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.8044e-02,
        0.0000e+00, 0.0000e+00, 5.8351e-02, 5.8623e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.7507e-02,
        1.9960e-02, 1.9216e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6472e-02, 1.2286e-02,
        3.8134e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9450e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.2360e-02, 0.0000e+00, 0.0000e+00,
        3.9426e-03, 0.0000e+00, 0.0000e+00, 1.1795e-01, 1.9707e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
         8.,  3.,  8.,  3.,  3.,  6.,  8.,  8.,  8., -1.,  8.,  3., -1.,  3.,
         6.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1., -1., -1., -1.,  8.,  8.,
        -1.,  8., -1.,  8.,  8., -1., -1., -1., -1., -1., -1.,  5.,  6.,  8.,
         8.,  8.,  8., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  6.,
         8.,  8.,  3.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8., -1., -1.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8.,  8.,  3.,  3.,
         6.,  8.,  8.,  8.,  8.,  8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1., -1.,  8.,  8., -1.,  6.,  8.,  8.,  8.,
        -1.,  8., -1., -1., -1.,  8.,  3.,  3.,  6.,  8.,  3.,  3.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  3.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1., -1.,  6.,  8.,
         8., -1.,  3.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8., -1.,  8.,  8.,
        -1.,  8.,  8., -1.,  8., -1., -1., -1.,  8., -1., -1.,  6., -1., -1.,
         8., -1.,  3.,  3.,  5.,  6.,  8.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 1.0000, 0.9995, 0.1266, 1.0000, 0.8193, 1.0000, 1.0000,
        0.0893, 0.0571, 0.0000, 0.0000, 0.0000, 1.0000, 0.9518, 0.2639, 0.9992,
        1.0000, 0.9785, 1.0000, 0.0976, 1.0000, 0.0000, 0.9988, 0.9844, 0.0000,
        0.2487, 1.0000, 0.9993, 1.0000, 0.9954, 1.0000, 1.0000, 0.7242, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9998,
        0.2850, 1.0000, 1.0000, 0.9975, 0.1743, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9949, 1.0000, 1.0000, 0.3268, 1.0000, 0.9897, 0.9999, 0.9532, 0.9985,
        0.8408, 0.9999, 0.9999, 0.9361, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.1592, 0.9819, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.8850, 1.0000, 1.0000, 1.0000, 1.0000, 0.1623, 1.0000, 1.0000,
        0.9997, 1.0000, 0.9994, 1.0000, 0.8894, 0.1247, 1.0000, 0.9907, 0.0000,
        0.7586, 0.9149, 1.0000, 1.0000, 1.0000, 0.9814, 0.9997, 0.9341, 1.0000,
        1.0000, 0.0000, 0.0000, 1.0000, 0.9798, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.6870,
        0.0000, 1.0000, 0.9999, 0.9941, 0.6751, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0794, 1.0000, 1.0000, 0.9996, 0.7876, 0.9997, 1.0000,
        1.0000, 0.9997, 0.1165, 0.0979, 1.0000, 1.0000, 0.0542, 0.0504, 0.9998,
        0.9998, 0.2557, 0.9999, 0.9496, 0.2573, 0.9999, 0.4203, 1.0000, 1.0000,
        0.8400, 0.9730, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.1550, 0.0000,
        0.0000, 0.2478, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9992, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.8012, 1.0000, 0.0548, 0.0000,
        1.0000, 1.0000, 0.9996, 1.0000, 0.9926, 1.0000, 0.6247, 0.7043, 0.9994,
        0.0000, 0.9996, 0.1666, 0.0000, 1.0000, 0.9606, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 1.0000, 0.2619, 1.0000, 1.0000, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 17:24:00,754 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.431034
2020-12-06 17:25:15,066 maskrcnn_benchmark.trainer INFO: eta: 0:01:37  iter: 2980  loss: 16.6108 (17.5952)  loss_classifier: 0.9596 (1.4726)  loss_box_reg: 0.6999 (0.9575)  loss_objectness: 12.6568 (12.5340)  loss_rpn_box_reg: 0.5699 (2.6311)  time: 3.7193 (4.8572)  data: 0.1337 (1.2562)  lr: 0.000000  max mem: 1313
2020-12-06 17:26:29,310 maskrcnn_benchmark.trainer INFO: eta: 0:00:00  iter: 3000  loss: 15.2155 (17.5968)  loss_classifier: 1.0788 (1.4720)  loss_box_reg: 0.6493 (0.9564)  loss_objectness: 12.6836 (12.5333)  loss_rpn_box_reg: 0.2583 (2.6350)  time: 3.7125 (4.8496)  data: 0.1372 (1.2488)  lr: 0.000000  max mem: 1313
2020-12-06 17:26:29,312 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 17:26:29,364 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 17:27:11,633 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.268921 (1.4575489964978448 s / img per device, on 1 devices)
2020-12-06 17:27:11,633 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.572341 (1.399046256624419 s / img per device, on 1 devices)
2020-12-06 17:27:11,634 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 17:27:13,327 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 17:27:13,327 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([9.6795e-02, 8.3295e-02, 7.2671e-02, 9.5337e-03, 3.2333e-03, 9.8876e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        9.9420e-03, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.3015e-02, 0.0000e+00, 0.0000e+00, 1.1898e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        3.9232e-02, 9.9124e-03, 8.0344e-04, 4.3544e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.8796e-02, 3.6271e-03, 2.4550e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.3015e-02,
        6.4213e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.8692e-01, 1.3112e-01, 8.8036e-03, 3.0755e-03,
        1.5242e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 3.6261e-02,
        1.5751e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.4941e-02, 5.4041e-02, 5.3256e-02,
        2.2885e-02, 3.5709e-03, 1.3044e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2236e-01,
        0.0000e+00, 0.0000e+00, 1.8693e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1007e-01,
        1.9960e-02, 9.2988e-03, 3.4004e-03, 1.7273e-04, 6.0266e-06, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3055e-02, 2.1017e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.9886e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.0632e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0607e-02, 0.0000e+00, 0.0000e+00,
        9.8830e-02, 0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.4421e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  3.,  3.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,  3.,  6.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
         8., -1., -1., -1.,  8., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  3.,  8.,  3.,  6.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  8.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1., -1.,  3.,  6.,  8.,  8., -1.,  8., -1.,
        -1., -1., -1., -1., -1.,  3., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,
         8., -1., -1.,  3.,  3.,  6.,  8.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 1.0000, 1.0000, 0.0674, 0.7804, 1.0000, 0.1794, 0.3043,
        0.8907, 0.9444, 1.0000, 0.9962, 1.0000, 1.0000, 0.9943, 1.0000, 0.4168,
        1.0000, 1.0000, 0.4846, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.4708,
        1.0000, 0.8644, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.3121, 1.0000, 1.0000, 0.9908, 0.9902, 1.0000, 1.0000, 0.9155, 0.1408,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9977, 1.0000, 0.7085,
        1.0000, 0.9402, 0.9950, 0.8452, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.9990, 0.9998, 1.0000, 1.0000, 0.2194, 1.0000, 1.0000, 0.0729, 0.0673,
        1.0000, 0.3436, 0.9220, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9893, 1.0000, 0.0000, 0.1012, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.9948, 0.9977, 1.0000, 0.8269, 1.0000, 0.0510, 0.9990, 0.9995, 0.8556,
        1.0000, 1.0000, 0.5713, 1.0000, 1.0000, 1.0000, 1.0000, 0.9518, 0.7005,
        0.7363, 1.0000, 1.0000, 1.0000, 0.4545, 1.0000, 0.0566, 1.0000, 0.9997,
        0.9731, 0.0726, 0.9991, 1.0000, 0.9940, 1.0000, 0.9900, 1.0000, 0.9996,
        1.0000, 0.9965, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9400, 0.9038, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.1258, 0.9029, 0.9361, 1.0000, 1.0000, 0.9984, 1.0000,
        0.9999, 1.0000, 0.9982, 0.9243, 0.4884, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.0512, 0.9954, 1.0000, 0.0000, 0.0000,
        0.0666, 0.0000, 0.0000, 0.0000, 0.0718, 1.0000, 1.0000, 0.9689, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9704, 1.0000, 0.4249, 1.0000, 0.9936, 1.0000, 0.0000,
        0.0000, 0.7894, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 0.9917, 0.7812, 0.4638, 0.2074, 0.9460, 1.0000, 1.0000, 1.0000,
        0.2768, 1.0000, 1.0000, 1.0000, 1.0000, 0.9964, 0.0000, 0.0000, 0.9989,
        0.0000, 0.0000, 0.9652, 0.9463, 1.0000, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 17:27:13,352 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.482759
2020-12-06 17:27:13,357 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./final_mode_r1.pth
2020-12-06 17:27:13,844 maskrcnn_benchmark.trainer INFO: final model, saving model to: final_mode_r1
2020-12-06 17:27:13,845 maskrcnn_benchmark.trainer INFO: Total training time: 4:03:13.193020 (4.8644 s / it)
2020-12-06 17:27:16,554 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_test dataset(140 images).
2020-12-06 17:30:44,222 maskrcnn_benchmark.inference INFO: Total run time: 0:03:27.667672 (1.4833405154091972 s / img per device, on 1 devices)
2020-12-06 17:30:44,222 maskrcnn_benchmark.inference INFO: Model inference time: 0:03:16.899668 (1.4064261964389255 s / img per device, on 1 devices)
2020-12-06 17:30:44,284 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 17:30:52,777 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 17:30:52,777 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.1876e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 8.3320e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6706e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.4991e-02,
        0.0000e+00, 0.0000e+00, 6.3380e-03, 1.2022e-03, 5.0963e-04, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        4.1730e-01, 1.5206e-01, 0.0000e+00, 0.0000e+00, 8.2945e-03, 0.0000e+00,
        0.0000e+00, 4.5753e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        6.5003e-03, 0.0000e+00, 0.0000e+00, 5.8169e-03, 0.0000e+00, 0.0000e+00,
        5.7929e-02, 0.0000e+00, 0.0000e+00, 2.0811e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7511e-03, 0.0000e+00, 0.0000e+00, 1.0390e-02,
        0.0000e+00, 0.0000e+00, 1.2174e-01, 0.0000e+00, 0.0000e+00, 3.1495e-02,
        0.0000e+00, 0.0000e+00, 7.6974e-02, 1.1270e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.5624e-02, 0.0000e+00, 0.0000e+00, 4.9038e-02, 8.3492e-03,
        0.0000e+00, 0.0000e+00, 3.2499e-01, 2.1080e-01, 0.0000e+00, 0.0000e+00,
        7.2181e-02, 0.0000e+00, 0.0000e+00, 2.7446e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.7027e-03, 0.0000e+00, 0.0000e+00,
        7.2711e-02, 0.0000e+00, 0.0000e+00, 4.9732e-02, 0.0000e+00, 0.0000e+00,
        4.9732e-02, 0.0000e+00, 0.0000e+00, 4.4381e-05, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.7693e-02, 0.0000e+00, 0.0000e+00, 3.8555e-03,
        2.3172e-03, 1.3494e-03, 3.8009e-04, 3.4476e-05, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0121e-02, 0.0000e+00,
        0.0000e+00, 2.5151e-02, 0.0000e+00, 0.0000e+00, 9.3585e-02, 3.4040e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6549e-01, 7.2388e-02, 0.0000e+00, 0.0000e+00, 1.1575e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.5339e-03,
        0.0000e+00, 0.0000e+00, 1.4483e-02, 0.0000e+00, 0.0000e+00, 7.0636e-02,
        0.0000e+00, 0.0000e+00, 4.0064e-03, 0.0000e+00, 0.0000e+00, 1.0160e-01,
        2.8699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 7.6598e-02, 7.1989e-02, 1.9971e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.1080e-01, 6.9767e-03, 0.0000e+00, 0.0000e+00, 4.6391e-02,
        0.0000e+00, 0.0000e+00, 9.4334e-02, 0.0000e+00, 0.0000e+00, 3.1485e-01,
        2.1723e-01, 0.0000e+00, 0.0000e+00, 8.2946e-02, 0.0000e+00, 0.0000e+00,
        1.9538e-01, 3.6504e-02, 2.3548e-02, 9.7997e-03, 9.2070e-07, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1479e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.3109e-02, 0.0000e+00, 0.0000e+00, 3.6626e-02, 0.0000e+00, 0.0000e+00,
        1.1498e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.5748e-03, 0.0000e+00, 0.0000e+00,
        4.2097e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0258e-02,
        0.0000e+00, 0.0000e+00, 9.8282e-02, 0.0000e+00, 0.0000e+00, 7.4665e-02,
        0.0000e+00, 0.0000e+00, 4.5571e-02, 0.0000e+00, 0.0000e+00, 2.9038e-03,
        0.0000e+00, 0.0000e+00, 5.8576e-03, 0.0000e+00, 0.0000e+00, 5.8681e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.8633e-02, 3.0950e-03,
        0.0000e+00, 0.0000e+00, 8.9483e-03, 0.0000e+00, 0.0000e+00, 1.0629e-02,
        0.0000e+00, 0.0000e+00, 1.2576e-01, 9.9968e-02, 3.1097e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.6085e-03, 0.0000e+00, 0.0000e+00,
        5.0342e-03, 0.0000e+00, 0.0000e+00, 6.5273e-02, 3.4409e-03, 1.8391e-03,
        1.6195e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.4451e-02, 0.0000e+00, 0.0000e+00, 8.2707e-03,
        0.0000e+00, 0.0000e+00, 2.7320e-01, 6.0720e-02, 2.6779e-02, 3.3833e-03,
        1.7207e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 8.4008e-03, 4.1611e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3742e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 6.2019e-02, 1.4231e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.0247e-02, 0.0000e+00, 0.0000e+00, 1.0031e-01, 0.0000e+00, 0.0000e+00,
        2.2043e-02, 3.3886e-03, 9.1151e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 9.2067e-02,
        2.0459e-02, 0.0000e+00, 0.0000e+00, 8.8034e-02, 0.0000e+00, 0.0000e+00,
        2.7707e-01, 0.0000e+00, 0.0000e+00, 3.9504e-01, 4.4687e-02, 6.0519e-04,
        1.8437e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.2136e-03, 0.0000e+00, 0.0000e+00,
        1.1944e-01, 1.4236e-02, 0.0000e+00, 0.0000e+00, 9.9022e-03, 0.0000e+00,
        0.0000e+00, 1.2014e-02, 0.0000e+00, 0.0000e+00, 3.8269e-02, 1.4681e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0319e-05, 3.5965e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 7.8701e-02, 0.0000e+00, 0.0000e+00, 1.1482e-01,
        0.0000e+00, 0.0000e+00, 1.0783e-02, 0.0000e+00, 0.0000e+00, 2.0082e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.4423e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1175e-02,
        5.4240e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.1080e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.2554e-01, 7.8725e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        4.7092e-03, 0.0000e+00, 0.0000e+00, 2.8898e-02, 0.0000e+00, 0.0000e+00,
        1.2035e-01, 2.4334e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.1923e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.7935e-02,
        3.2124e-03, 2.5932e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 8.5559e-09, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 4.4351e-02, 3.4197e-03, 3.1347e-03, 3.0521e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.9698e-02,
        3.4894e-02, 2.3797e-02, 9.9011e-03, 5.2927e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.5487e-02, 0.0000e+00,
        0.0000e+00, 8.0499e-02, 2.4760e-02, 3.5234e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.6993e-02,
        1.0033e-02, 6.4529e-03, 4.0106e-03, 1.7630e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.5332e-02, 6.0016e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.9273e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        9.1803e-02, 0.0000e+00, 0.0000e+00, 1.0854e-02, 0.0000e+00, 0.0000e+00,
        5.9791e-02, 3.8897e-02, 1.2234e-02, 3.9683e-03, 8.7827e-04, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0079e-01, 1.1041e-01, 2.8759e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.1524e-02, 1.3065e-04, 2.3812e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 8.0118e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.4849e-01,
        2.1080e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.4950e-01, 5.9838e-02, 2.2733e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.9650e-03, 0.0000e+00, 0.0000e+00, 1.0338e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 8.1139e-02, 4.1434e-02,
        1.1479e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.3742e-02, 1.1479e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.4162e-01, 3.2809e-01,
        0.0000e+00, 0.0000e+00, 2.1080e-01, 1.8280e-02, 0.0000e+00, 0.0000e+00,
        2.3742e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 8.8391e-02, 4.6751e-02, 2.9569e-02,
        9.0803e-03, 3.8649e-03, 3.6216e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.4334e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.6668e-01, 2.7462e-02,
        1.0367e-02, 2.2145e-03, 1.5289e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5426e-06, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 5, 5, 7, 7, 4, 7, 7, 4, 7, 7, 7, 7, 4, 7, 7, 4,
        7, 7, 4, 7, 7, 8, 8, 8, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 8, 8,
        8, 7, 7, 4, 7, 7, 8, 8, 7, 7, 5, 5, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 8, 8, 8, 8, 8,
        8, 5, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 5, 5, 7, 7, 4, 7, 7, 8, 7,
        7, 5, 5, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 7, 7, 7,
        7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 7, 7,
        8, 8, 7, 7, 4, 7, 7, 4, 7, 7, 8, 8, 8, 8, 5, 7, 7, 4, 7, 7, 4, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        7, 7, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 7, 7, 4,
        7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 7, 8, 8, 7, 7,
        4, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8,
        8, 8, 7, 7, 4, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 5, 5, 7, 7, 8, 8, 8, 8,
        7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8,
        5, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        4, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 7, 4,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 5, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 7, 7, 5, 5, 7, 7, 4, 7, 7, 8, 8, 8, 8,
        8, 5, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 5, 5, 7, 7, 5, 5, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1.,  3.,  3.,  3.,  6.,  8.,  8.,  8.,  8., -1.,  3., -1., -1.,
        -1.,  6.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,
         8.,  8.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,  3.,
         6.,  8.,  8.,  8.,  8., -1.,  8., -1., -1.,  3.,  3.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8., -1., -1.,
         8.,  8., -1., -1., -1.,  8., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,
         8., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  3.,  8.,  8.,  3.,  8.,  8.,  8.,  3.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1.,  3.,  6.,  8., -1., -1., -1., -1., -1., -1., -1.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,
        -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1.,  8., -1.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  5.,  8.,  8.,
         8.,  8.,  8.,  8., -1., -1., -1.,  8., -1., -1.,  8., -1., -1.,  6.,
         8., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,  3.,  3.,  3.,  8.,  8., -1.,
         3.,  3.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1., -1.,  8., -1.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  3.,  8.,  8.,  8., -1.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  5.,  6.,  8.,
         8.,  8.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,  8.,
         8.,  8., -1., -1., -1., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  8., -1.,  8.,
         8., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  3.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  8.,
        -1., -1.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,
        -1., -1.,  3.,  8.,  8.,  8., -1., -1., -1., -1.,  8., -1.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1.,  3.,  6.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,  5.,  5.,  6.,
         8.,  8.,  3., -1., -1.,  8., -1., -1.,  8.,  8.,  3.,  6.,  8.,  3.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1.,  8.,  8.,  6.,  8.,  8.,  8.,  8., -1.,  3.,  6.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,  3.,  8.,  8.,  3.,  8.,
         8., -1., -1., -1.,  3.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8.,  8.,  3.,  5.,  8.,  8., -1., -1., -1.,  8.,
         8., -1.,  8., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,  8.,
        -1., -1., -1.,  8.,  3.,  8.,  8., -1., -1.,  3.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  3.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,  8.,  8.,  3.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1., -1.,  3., -1.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 1.0000, 1.0000, 0.8435, 1.0000, 0.7973, 1.0000, 1.0000,
        1.0000, 0.0000, 0.9992, 0.0000, 0.0000, 0.0000, 1.0000, 0.9995, 0.9995,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9998,
        1.0000, 1.0000, 1.0000, 0.0681, 0.6743, 1.0000, 0.9179, 1.0000, 1.0000,
        0.4135, 0.9997, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.2652, 0.9962,
        1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9435,
        1.0000, 0.1156, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.2725,
        0.0000, 0.0000, 0.0000, 0.8951, 0.0000, 1.0000, 0.9233, 0.4214, 1.0000,
        1.0000, 0.9998, 0.5179, 1.0000, 1.0000, 0.6866, 1.0000, 0.7705, 0.3425,
        1.0000, 0.9996, 1.0000, 0.9722, 1.0000, 1.0000, 0.2338, 0.9975, 1.0000,
        0.0000, 1.0000, 1.0000, 0.3824, 1.0000, 0.8553, 0.7617, 0.9926, 0.9901,
        0.9013, 1.0000, 1.0000, 0.0777, 1.0000, 0.9293, 0.9976, 1.0000, 0.7260,
        0.9409, 1.0000, 0.9998, 1.0000, 1.0000, 0.1028, 0.1772, 1.0000, 0.9912,
        1.0000, 1.0000, 0.4203, 1.0000, 0.9998, 1.0000, 0.7987, 0.8815, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0557, 0.9985, 0.3185,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9423,
        1.0000, 0.0706, 0.8927, 0.0584, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9999, 0.9617, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9631, 0.9977, 1.0000, 0.9963, 0.0723, 1.0000,
        0.2223, 1.0000, 1.0000, 0.9999, 0.9874, 0.9972, 1.0000, 0.8854, 1.0000,
        1.0000, 0.9967, 1.0000, 0.9983, 0.6028, 1.0000, 1.0000, 0.0000, 0.6221,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.8709, 1.0000, 0.0865, 0.9941,
        1.0000, 0.0912, 0.9000, 0.1314, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.4899,
        1.0000, 1.0000, 0.5377, 0.3695, 1.0000, 0.5837, 0.9961, 1.0000, 0.0000,
        0.0000, 0.9999, 0.9940, 0.1991, 0.3581, 0.1472, 0.9262, 0.0612, 0.0000,
        0.0000, 0.0000, 0.8329, 0.0000, 0.0000, 0.9968, 0.0000, 0.0000, 1.0000,
        0.6065, 0.0000, 0.0000, 1.0000, 1.0000, 0.9847, 1.0000, 1.0000, 1.0000,
        0.2406, 0.9986, 0.9943, 1.0000, 0.9959, 0.9992, 0.9993, 0.9947, 0.9658,
        0.9999, 0.1994, 1.0000, 0.0000, 0.1779, 0.9996, 1.0000, 1.0000, 0.9981,
        0.0000, 1.0000, 1.0000, 0.1970, 1.0000, 1.0000, 0.2210, 1.0000, 0.9995,
        1.0000, 1.0000, 1.0000, 0.1944, 0.5970, 0.7158, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.9748, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9211, 0.9441, 0.2943, 0.3370, 0.9997, 1.0000, 0.8947,
        1.0000, 0.8124, 0.0680, 0.9968, 1.0000, 1.0000, 1.0000, 1.0000, 0.6667,
        0.3379, 1.0000, 1.0000, 0.9751, 0.9998, 1.0000, 1.0000, 0.9997, 0.3463,
        0.9216, 0.9916, 0.9996, 1.0000, 0.9999, 1.0000, 1.0000, 0.2134, 0.9632,
        1.0000, 1.0000, 1.0000, 1.0000, 0.3557, 1.0000, 0.9998, 0.9513, 0.9998,
        1.0000, 1.0000, 0.7572, 1.0000, 0.0646, 1.0000, 0.9984, 0.0000, 1.0000,
        1.0000, 1.0000, 0.1494, 0.4003, 0.9989, 1.0000, 1.0000, 1.0000, 0.1112,
        0.9928, 0.9878, 0.2889, 0.9983, 1.0000, 0.4058, 0.5585, 0.5214, 1.0000,
        0.9998, 1.0000, 0.1768, 0.9025, 0.9459, 1.0000, 0.9992, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9254, 1.0000, 0.9396, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9988, 1.0000, 0.9958, 1.0000, 1.0000, 0.9999, 1.0000,
        1.0000, 0.4782, 0.9987, 1.0000, 1.0000, 0.9997, 1.0000, 1.0000, 0.6174,
        0.0000, 0.0000, 0.0000, 0.7670, 0.0000, 0.9033, 0.0808, 0.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.8764, 0.7146, 1.0000, 1.0000, 1.0000,
        1.0000, 0.5540, 1.0000, 1.0000, 0.7182, 0.9891, 0.9883, 0.2760, 1.0000,
        0.9935, 1.0000, 0.1270, 0.3438, 0.9558, 0.9999, 0.9082, 0.9999, 0.9994,
        0.9995, 1.0000, 0.1813, 0.9831, 0.9712, 1.0000, 0.9997, 0.9946, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.3181, 1.0000, 1.0000, 0.8396, 1.0000,
        0.7407, 0.2489, 0.0796, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0596, 0.9879,
        1.0000, 0.0630, 1.0000, 0.1502, 1.0000, 0.0000, 0.0000, 1.0000, 0.9880,
        1.0000, 1.0000, 1.0000, 0.9995, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1458, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 0.8399, 0.9049, 0.0796, 1.0000,
        1.0000, 0.9740, 0.9138, 1.0000, 1.0000, 0.2944, 0.7964, 1.0000, 1.0000,
        0.8017, 0.8045, 1.0000, 1.0000, 0.9722, 1.0000, 1.0000, 0.0626, 0.9998,
        0.9999, 0.9961, 0.0887, 1.0000, 0.0735, 1.0000, 0.9651, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.8896, 1.0000, 0.9979, 1.0000, 1.0000,
        0.2069, 0.7788, 0.0000, 1.0000, 0.6085, 0.8452, 0.9522, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9985, 1.0000, 1.0000, 1.0000, 0.9991, 0.9997,
        0.9462, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.6019,
        1.0000, 0.6306, 0.9577, 0.0666, 1.0000, 0.9996, 0.9998, 0.9774, 0.9978,
        0.9999, 0.9996, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.9236, 0.9986, 0.5762, 0.8355, 0.7940, 0.0000,
        0.0939, 1.0000, 1.0000, 1.0000, 1.0000, 0.9863, 1.0000, 1.0000, 0.9991,
        1.0000, 0.0000, 0.0000, 0.9712, 1.0000, 0.9999, 0.0604, 1.0000, 1.0000,
        0.5318, 0.0000, 0.0000, 0.0000, 0.7669, 1.0000, 0.9999, 0.0783, 1.0000,
        0.9995, 1.0000, 1.0000, 1.0000, 0.9998, 0.9999, 1.0000, 0.9966, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.1243, 1.0000, 0.9931,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9401, 1.0000, 0.0599, 0.0516,
        0.9916, 0.0590, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.5546,
        0.0000, 0.0000, 0.0000, 1.0000, 0.2245, 1.0000, 1.0000, 1.0000, 0.1735,
        0.9986, 1.0000, 0.8909, 1.0000, 0.9995, 0.0816, 1.0000, 0.9999, 1.0000,
        0.8140, 0.7647, 1.0000, 1.0000, 1.0000, 0.9933, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9771,
        0.9583, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9997, 1.0000, 0.9998,
        0.9993, 0.0000, 0.0000, 1.0000, 0.9051, 1.0000, 1.0000, 0.9627, 0.9944,
        1.0000, 0.9987, 0.9983, 1.0000, 0.9999, 0.3884, 1.0000, 1.0000, 0.9274,
        0.0000, 0.0000, 0.0000, 0.3017, 0.1069, 0.9997, 1.0000, 1.0000, 1.0000,
        1.0000, 0.0000, 0.0000, 0.0614, 0.2651, 0.0547, 1.0000, 1.0000, 1.0000,
        0.9816, 1.0000, 1.0000, 0.6091, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9829, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9050, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9871, 0.9996, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.8415]), 'num_pos': 798}
2020-12-06 19:58:01,743 maskrcnn_benchmark INFO: Using 1 GPUs
2020-12-06 19:58:01,744 maskrcnn_benchmark INFO: Namespace(config_file='d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml', custom_dict='custom_dict.txt', distributed=False, local_rank=0, opts=[], skip_test=False, weights='visdrone_model_0360000.pth')
2020-12-06 19:58:01,744 maskrcnn_benchmark INFO: Collecting env info (might take some time)
2020-12-06 19:58:10,142 maskrcnn_benchmark INFO: 
PyTorch version: 1.1.0
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: Ubuntu 16.04.7 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
CMake version: version 3.5.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: GPU 0: GeForce GTX 950M
Nvidia driver version: 450.80.02
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.4

Versions of relevant libraries:
[pip3] numpy==1.19.4
[pip3] torch==1.1.0
[pip3] torchvision==0.3.0
[conda] blas                      1.0                         mkl  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py36he904b0f_0  
[conda] mkl_fft                   1.2.0            py36h23d657b_0  
[conda] mkl_random                1.1.1            py36h0573a6f_0  
[conda] pytorch                   1.1.0           py3.6_cuda9.0.176_cudnn7.5.1_0    pytorch
[conda] pytorch-nightly           1.0.0.dev20190328 py3.6_cuda9.0.176_cudnn7.4.2_0    pytorch
[conda] torchvision               0.3.0           py36_cu9.0.176_1    pytorch
        Pillow (8.0.1)
2020-12-06 19:58:10,142 maskrcnn_benchmark INFO: Loaded configuration file d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml
2020-12-06 19:58:10,143 maskrcnn_benchmark INFO: 
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "e2e_faster_rcnn_X_101_32x8d_FPN_1x.pth"
  BACKBONE:
    CONV_BODY: "R-101-FPN"
    FREEZE_CONV_BODY_AT: 5
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 1000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    STRIDE_IN_1X1: False
    NUM_GROUPS: 32
    WIDTH_PER_GROUP: 8
DATASETS:
  TRAIN: ("giro1_train", )
  TEST: ("giro1_test",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
  NUM_WORKERS: 0
SOLVER:
  BASE_LR: 0.0000002
  WEIGHT_DECAY: 0.0001
  STEPS: (480000, 640000,)
  MAX_ITER: 1500
  IMS_PER_BATCH: 2
TEST:
  IMS_PER_BATCH: 1

2020-12-06 19:58:10,145 maskrcnn_benchmark INFO: Running with config:
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  NUM_WORKERS: 0
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('giro1_test',)
  TRAIN: ('giro1_train',)
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MODEL:
  BACKBONE:
    CONV_BODY: R-101-FPN
    FREEZE_CONV_BODY_AT: 5
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FBNET:
    ARCH: default
    ARCH_DEF: 
    BN_TYPE: bn
    DET_HEAD_BLOCKS: []
    DET_HEAD_LAST_SCALE: 1.0
    DET_HEAD_STRIDE: 0
    DW_CONV_SKIP_BN: True
    DW_CONV_SKIP_RELU: True
    KPTS_HEAD_BLOCKS: []
    KPTS_HEAD_LAST_SCALE: 0.0
    KPTS_HEAD_STRIDE: 0
    MASK_HEAD_BLOCKS: []
    MASK_HEAD_LAST_SCALE: 0.0
    MASK_HEAD_STRIDE: 0
    RPN_BN_TYPE: 
    RPN_HEAD_BLOCKS: 0
    SCALE_FACTOR: 1.0
    WIDTH_DIVISOR: 1
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    NUM_GROUPS: 32
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 8
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: ResNet50Conv5ROIFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 2000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 1000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: visdrone_model_0360000.pth
OUTPUT_DIR: .
PATHS_CATALOG: /zold137/maskrcnn_benchmark/config/paths_catalog.py
SOLVER:
  BASE_LR: 2e-07
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  MAX_ITER: 1500
  MOMENTUM: 0.9
  STEPS: (480000, 640000)
  WARMUP_FACTOR: 0.3333333333333333
  WARMUP_ITERS: 500
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 1
2020-12-06 19:58:11,938 maskrcnn_benchmark INFO: reloading weigts from bbox_final_r1.pth
2020-12-06 19:58:14,483 maskrcnn_benchmark INFO: unfroze: rpn.head.conv.weight
2020-12-06 19:58:14,484 maskrcnn_benchmark INFO: unfroze: rpn.head.conv.bias
2020-12-06 19:58:14,484 maskrcnn_benchmark INFO: unfroze: rpn.head.cls_logits.weight
2020-12-06 19:58:14,484 maskrcnn_benchmark INFO: unfroze: rpn.head.cls_logits.bias
2020-12-06 19:58:14,484 maskrcnn_benchmark INFO: unfroze: rpn.head.bbox_pred.weight
2020-12-06 19:58:14,484 maskrcnn_benchmark INFO: unfroze: rpn.head.bbox_pred.bias
2020-12-06 19:58:14,485 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.cls_score.weight
2020-12-06 19:58:14,485 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.cls_score.bias
2020-12-06 19:58:14,485 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.bbox_pred.weight
2020-12-06 19:58:14,485 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.bbox_pred.bias
2020-12-06 19:58:14,659 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
2020-12-06 19:59:29,928 maskrcnn_benchmark.trainer INFO: Start training
2020-12-06 20:00:34,180 maskrcnn_benchmark INFO: Using 1 GPUs
2020-12-06 20:00:34,180 maskrcnn_benchmark INFO: Namespace(config_file='d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml', custom_dict='custom_dict.txt', distributed=False, local_rank=0, opts=[], skip_test=False, weights='visdrone_model_0360000.pth')
2020-12-06 20:00:34,180 maskrcnn_benchmark INFO: Collecting env info (might take some time)
2020-12-06 20:00:36,236 maskrcnn_benchmark INFO: 
PyTorch version: 1.1.0
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: Ubuntu 16.04.7 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
CMake version: version 3.5.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: GPU 0: GeForce GTX 950M
Nvidia driver version: 450.80.02
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.4

Versions of relevant libraries:
[pip3] numpy==1.19.4
[pip3] torch==1.1.0
[pip3] torchvision==0.3.0
[conda] blas                      1.0                         mkl  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py36he904b0f_0  
[conda] mkl_fft                   1.2.0            py36h23d657b_0  
[conda] mkl_random                1.1.1            py36h0573a6f_0  
[conda] pytorch                   1.1.0           py3.6_cuda9.0.176_cudnn7.5.1_0    pytorch
[conda] pytorch-nightly           1.0.0.dev20190328 py3.6_cuda9.0.176_cudnn7.4.2_0    pytorch
[conda] torchvision               0.3.0           py36_cu9.0.176_1    pytorch
        Pillow (8.0.1)
2020-12-06 20:00:36,236 maskrcnn_benchmark INFO: Loaded configuration file d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml
2020-12-06 20:00:36,237 maskrcnn_benchmark INFO: 
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "e2e_faster_rcnn_X_101_32x8d_FPN_1x.pth"
  BACKBONE:
    CONV_BODY: "R-101-FPN"
    FREEZE_CONV_BODY_AT: 5
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 1000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    STRIDE_IN_1X1: False
    NUM_GROUPS: 32
    WIDTH_PER_GROUP: 8
DATASETS:
  TRAIN: ("giro1_train", )
  TEST: ("giro1_test",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
  NUM_WORKERS: 0
SOLVER:
  BASE_LR: 0.0000002
  WEIGHT_DECAY: 0.0001
  STEPS: (480000, 640000,)
  MAX_ITER: 1500
  IMS_PER_BATCH: 2
TEST:
  IMS_PER_BATCH: 1

2020-12-06 20:00:36,238 maskrcnn_benchmark INFO: Running with config:
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  NUM_WORKERS: 0
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('giro1_test',)
  TRAIN: ('giro1_train',)
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MODEL:
  BACKBONE:
    CONV_BODY: R-101-FPN
    FREEZE_CONV_BODY_AT: 5
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FBNET:
    ARCH: default
    ARCH_DEF: 
    BN_TYPE: bn
    DET_HEAD_BLOCKS: []
    DET_HEAD_LAST_SCALE: 1.0
    DET_HEAD_STRIDE: 0
    DW_CONV_SKIP_BN: True
    DW_CONV_SKIP_RELU: True
    KPTS_HEAD_BLOCKS: []
    KPTS_HEAD_LAST_SCALE: 0.0
    KPTS_HEAD_STRIDE: 0
    MASK_HEAD_BLOCKS: []
    MASK_HEAD_LAST_SCALE: 0.0
    MASK_HEAD_STRIDE: 0
    RPN_BN_TYPE: 
    RPN_HEAD_BLOCKS: 0
    SCALE_FACTOR: 1.0
    WIDTH_DIVISOR: 1
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    NUM_GROUPS: 32
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 8
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: ResNet50Conv5ROIFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 2000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 1000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: visdrone_model_0360000.pth
OUTPUT_DIR: .
PATHS_CATALOG: /zold137/maskrcnn_benchmark/config/paths_catalog.py
SOLVER:
  BASE_LR: 2e-07
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  MAX_ITER: 1500
  MOMENTUM: 0.9
  STEPS: (480000, 640000)
  WARMUP_FACTOR: 0.3333333333333333
  WARMUP_ITERS: 500
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 1
2020-12-06 20:00:37,768 maskrcnn_benchmark INFO: reloading weigts from bbox_final_r1.pth
2020-12-06 20:00:39,819 maskrcnn_benchmark INFO: unfroze: rpn.head.conv.weight
2020-12-06 20:00:39,819 maskrcnn_benchmark INFO: unfroze: rpn.head.conv.bias
2020-12-06 20:00:39,819 maskrcnn_benchmark INFO: unfroze: rpn.head.cls_logits.weight
2020-12-06 20:00:39,819 maskrcnn_benchmark INFO: unfroze: rpn.head.cls_logits.bias
2020-12-06 20:00:39,820 maskrcnn_benchmark INFO: unfroze: rpn.head.bbox_pred.weight
2020-12-06 20:00:39,820 maskrcnn_benchmark INFO: unfroze: rpn.head.bbox_pred.bias
2020-12-06 20:00:39,820 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.cls_score.weight
2020-12-06 20:00:39,820 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.cls_score.bias
2020-12-06 20:00:39,820 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.bbox_pred.weight
2020-12-06 20:00:39,821 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.bbox_pred.bias
2020-12-06 20:00:39,995 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
2020-12-06 20:00:41,056 maskrcnn_benchmark.trainer INFO: Start training
2020-12-06 20:01:55,726 maskrcnn_benchmark.trainer INFO: eta: 1:32:05  iter: 20  loss: 15.6227 (17.3801)  loss_classifier: 0.8892 (1.5526)  loss_box_reg: 0.9644 (1.0356)  loss_objectness: 9.6656 (9.8903)  loss_rpn_box_reg: 0.5180 (4.9014)  time: 3.7050 (3.7334)  data: 0.1356 (0.1370)  lr: 0.000000  max mem: 1317
2020-12-06 20:03:11,113 maskrcnn_benchmark.trainer INFO: eta: 1:31:16  iter: 40  loss: 6.4111 (12.9396)  loss_classifier: 0.5296 (1.2589)  loss_box_reg: 0.3266 (0.7359)  loss_objectness: 3.4753 (6.6448)  loss_rpn_box_reg: 0.3187 (4.3001)  time: 3.7270 (3.7514)  data: 0.1345 (0.1363)  lr: 0.000000  max mem: 1317
2020-12-06 20:04:26,197 maskrcnn_benchmark.trainer INFO: eta: 1:30:03  iter: 60  loss: 1.7099 (10.6958)  loss_classifier: 0.7658 (1.2865)  loss_box_reg: 0.5609 (0.6600)  loss_objectness: 0.3412 (4.9332)  loss_rpn_box_reg: 0.1545 (3.8160)  time: 3.7398 (3.7523)  data: 0.1354 (0.1360)  lr: 0.000000  max mem: 1317
2020-12-06 20:05:40,961 maskrcnn_benchmark.trainer INFO: eta: 1:28:43  iter: 80  loss: 2.7428 (9.4231)  loss_classifier: 0.7375 (1.1896)  loss_box_reg: 0.3648 (0.6093)  loss_objectness: 0.4967 (4.0115)  loss_rpn_box_reg: 0.2015 (3.6126)  time: 3.7365 (3.7488)  data: 0.1342 (0.1359)  lr: 0.000000  max mem: 1317
2020-12-06 20:06:55,754 maskrcnn_benchmark.trainer INFO: eta: 1:27:25  iter: 100  loss: 2.8457 (8.9694)  loss_classifier: 0.9465 (1.2428)  loss_box_reg: 0.5169 (0.6286)  loss_objectness: 0.5580 (3.4822)  loss_rpn_box_reg: 0.1018 (3.6158)  time: 3.7357 (3.7470)  data: 0.1349 (0.1357)  lr: 0.000000  max mem: 1317
2020-12-06 20:06:55,757 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 20:06:55,810 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 20:07:38,165 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.354970 (1.460516197928067 s / img per device, on 1 devices)
2020-12-06 20:07:38,166 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.595154 (1.3998328817301784 s / img per device, on 1 devices)
2020-12-06 20:07:38,166 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 20:07:39,941 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 20:07:39,941 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.4815e-02, 2.8175e-02, 3.7784e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        3.8458e-03, 3.1412e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        1.5543e-01, 1.3143e-01, 6.6728e-02, 3.3184e-03, 1.4441e-03, 1.6718e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6928e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0364e-02, 0.0000e+00, 0.0000e+00,
        3.6216e-03, 5.6703e-04, 1.8563e-04, 4.9651e-07, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0689e-01, 1.0590e-01, 1.1949e-02, 3.0755e-03,
        2.1399e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.6418e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.1681e-02, 2.3927e-02, 2.0275e-02,
        3.5240e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.0848e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.5792e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.8555e-03,
        3.2031e-03, 9.3663e-05, 4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7950e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 2.7778e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.8003e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
         3., -1.,  3.,  8., -1.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1.,  3.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,  3.,  6.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  3.,  3.,  5.,  6.,  8.,  6.,
         8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  5.,  8.,  8., -1.,
        -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1.,  6.,  8., -1.,  3.,  3.,  3.,  3.,
         3.,  5.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1., -1., -1.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  8.,  8., -1.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1., -1., -1., -1., -1., -1., -1.,  6.,  8., -1., -1., -1.,
        -1.,  6.,  8.,  8.,  8.,  8., -1., -1.,  3.,  5.,  6.,  8.,  8.,  8.,
         8., -1., -1., -1., -1., -1., -1., -1.,  5.,  6.,  8.,  8.,  8.,  8.,
         3.,  6.,  8., -1.,  8., -1., -1., -1.,  8., -1.,  3.,  6., -1., -1.,
        -1., -1., -1.,  3.,  5.,  6.,  8.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 0.8775, 1.0000, 0.9816, 0.1219, 1.0000, 0.9800, 1.0000,
        0.6608, 1.0000, 0.0000, 0.0000, 0.0000, 0.9802, 0.0000, 0.1119, 1.0000,
        0.0000, 0.1849, 0.7224, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.6153, 0.3691, 0.5487, 1.0000, 0.9998, 0.9704, 1.0000,
        0.9988, 1.0000, 0.9560, 0.8658, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.7438, 0.9528, 1.0000,
        1.0000, 0.3678, 1.0000, 0.9993, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9385, 0.8216, 1.0000, 1.0000, 0.9994, 0.9633, 1.0000, 0.0536,
        0.5459, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9052,
        1.0000, 0.3470, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 0.9997, 1.0000, 1.0000, 1.0000, 1.0000, 0.5451, 1.0000, 0.9400,
        0.9993, 0.0557, 1.0000, 1.0000, 1.0000, 0.0000, 0.4791, 1.0000, 0.0000,
        0.8225, 0.9656, 1.0000, 1.0000, 0.5142, 1.0000, 1.0000, 1.0000, 0.9775,
        0.4717, 1.0000, 0.8056, 0.6223, 0.1245, 1.0000, 0.9938, 1.0000, 0.0749,
        0.0612, 0.9998, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 0.8902, 1.0000, 0.9824, 0.2203, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.2220, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.8904, 1.0000, 0.0000, 0.5639,
        0.9478, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9911, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.7713, 0.9659, 1.0000, 1.0000, 1.0000, 0.7961, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.7067, 1.0000, 0.5401,
        1.0000, 1.0000, 1.0000, 0.4505, 1.0000, 0.0927, 0.0000, 0.9932, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0525, 1.0000, 1.0000, 1.0000, 0.9886]), 'num_pos': 232}
2020-12-06 20:07:39,966 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.357759
2020-12-06 20:07:39,969 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./_best_acc_r1.pth
2020-12-06 20:07:40,687 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: _best_acc_r1
2020-12-06 20:08:57,498 maskrcnn_benchmark.trainer INFO: eta: 1:35:09  iter: 120  loss: 2.7846 (8.2442)  loss_classifier: 0.6858 (1.2173)  loss_box_reg: 0.4191 (0.5938)  loss_objectness: 0.4759 (3.0760)  loss_rpn_box_reg: 0.1724 (3.3571)  time: 3.7555 (4.1370)  data: 0.1383 (0.5208)  lr: 0.000000  max mem: 1317
2020-12-06 20:12:17,015 maskrcnn_benchmark INFO: Using 1 GPUs
2020-12-06 20:12:17,016 maskrcnn_benchmark INFO: Namespace(config_file='d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml', custom_dict='custom_dict.txt', distributed=False, local_rank=0, opts=[], skip_test=False, weights='visdrone_model_0360000.pth')
2020-12-06 20:12:17,016 maskrcnn_benchmark INFO: Collecting env info (might take some time)
2020-12-06 20:12:19,836 maskrcnn_benchmark INFO: 
PyTorch version: 1.1.0
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: Ubuntu 16.04.7 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
CMake version: version 3.5.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: GPU 0: GeForce GTX 950M
Nvidia driver version: 450.80.02
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.4

Versions of relevant libraries:
[pip3] numpy==1.19.4
[pip3] torch==1.1.0
[pip3] torchvision==0.3.0
[conda] blas                      1.0                         mkl  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py36he904b0f_0  
[conda] mkl_fft                   1.2.0            py36h23d657b_0  
[conda] mkl_random                1.1.1            py36h0573a6f_0  
[conda] pytorch                   1.1.0           py3.6_cuda9.0.176_cudnn7.5.1_0    pytorch
[conda] pytorch-nightly           1.0.0.dev20190328 py3.6_cuda9.0.176_cudnn7.4.2_0    pytorch
[conda] torchvision               0.3.0           py36_cu9.0.176_1    pytorch
        Pillow (8.0.1)
2020-12-06 20:12:19,836 maskrcnn_benchmark INFO: Loaded configuration file d_e2e_faster_rcnn_X_101_32x8d_FPN_1x_visdrone.yaml
2020-12-06 20:12:19,836 maskrcnn_benchmark INFO: 
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "e2e_faster_rcnn_X_101_32x8d_FPN_1x.pth"
  BACKBONE:
    CONV_BODY: "R-101-FPN"
    FREEZE_CONV_BODY_AT: 5
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 1000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    STRIDE_IN_1X1: False
    NUM_GROUPS: 32
    WIDTH_PER_GROUP: 8
DATASETS:
  TRAIN: ("giro1_train", )
  TEST: ("giro1_test",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
  NUM_WORKERS: 0
SOLVER:
  BASE_LR: 0.00000002
  WEIGHT_DECAY: 0.0001
  STEPS: (480000, 640000,)
  MAX_ITER: 1500
  IMS_PER_BATCH: 2
TEST:
  IMS_PER_BATCH: 1

2020-12-06 20:12:19,838 maskrcnn_benchmark INFO: Running with config:
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  NUM_WORKERS: 0
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('giro1_test',)
  TRAIN: ('giro1_train',)
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MODEL:
  BACKBONE:
    CONV_BODY: R-101-FPN
    FREEZE_CONV_BODY_AT: 5
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FBNET:
    ARCH: default
    ARCH_DEF: 
    BN_TYPE: bn
    DET_HEAD_BLOCKS: []
    DET_HEAD_LAST_SCALE: 1.0
    DET_HEAD_STRIDE: 0
    DW_CONV_SKIP_BN: True
    DW_CONV_SKIP_RELU: True
    KPTS_HEAD_BLOCKS: []
    KPTS_HEAD_LAST_SCALE: 0.0
    KPTS_HEAD_STRIDE: 0
    MASK_HEAD_BLOCKS: []
    MASK_HEAD_LAST_SCALE: 0.0
    MASK_HEAD_STRIDE: 0
    RPN_BN_TYPE: 
    RPN_HEAD_BLOCKS: 0
    SCALE_FACTOR: 1.0
    WIDTH_DIVISOR: 1
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    NUM_GROUPS: 32
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 8
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: ResNet50Conv5ROIFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 2000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 1000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: visdrone_model_0360000.pth
OUTPUT_DIR: .
PATHS_CATALOG: /zold137/maskrcnn_benchmark/config/paths_catalog.py
SOLVER:
  BASE_LR: 2e-08
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  MAX_ITER: 1500
  MOMENTUM: 0.9
  STEPS: (480000, 640000)
  WARMUP_FACTOR: 0.3333333333333333
  WARMUP_ITERS: 500
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 1
2020-12-06 20:12:21,373 maskrcnn_benchmark INFO: reloading weigts from bbox_final_r1.pth
2020-12-06 20:12:23,436 maskrcnn_benchmark INFO: unfroze: rpn.head.conv.weight
2020-12-06 20:12:23,436 maskrcnn_benchmark INFO: unfroze: rpn.head.conv.bias
2020-12-06 20:12:23,436 maskrcnn_benchmark INFO: unfroze: rpn.head.cls_logits.weight
2020-12-06 20:12:23,437 maskrcnn_benchmark INFO: unfroze: rpn.head.cls_logits.bias
2020-12-06 20:12:23,437 maskrcnn_benchmark INFO: unfroze: rpn.head.bbox_pred.weight
2020-12-06 20:12:23,437 maskrcnn_benchmark INFO: unfroze: rpn.head.bbox_pred.bias
2020-12-06 20:12:23,437 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.cls_score.weight
2020-12-06 20:12:23,438 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.cls_score.bias
2020-12-06 20:12:23,438 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.bbox_pred.weight
2020-12-06 20:12:23,438 maskrcnn_benchmark INFO: unfroze: roi_heads.box.predictor.bbox_pred.bias
2020-12-06 20:12:23,608 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
2020-12-06 20:12:24,669 maskrcnn_benchmark.trainer INFO: Start training
2020-12-06 20:13:38,918 maskrcnn_benchmark.trainer INFO: eta: 1:31:34  iter: 20  loss: 14.3223 (15.4617)  loss_classifier: 0.9405 (1.6672)  loss_box_reg: 0.6258 (0.6242)  loss_objectness: 12.3798 (12.3180)  loss_rpn_box_reg: 0.0544 (0.8523)  time: 3.7029 (3.7123)  data: 0.1348 (0.1372)  lr: 0.000000  max mem: 1317
2020-12-06 20:14:53,169 maskrcnn_benchmark.trainer INFO: eta: 1:30:20  iter: 40  loss: 14.8082 (16.1730)  loss_classifier: 1.2783 (1.9974)  loss_box_reg: 0.4859 (0.6857)  loss_objectness: 11.7776 (11.9433)  loss_rpn_box_reg: 0.1500 (1.5467)  time: 3.7091 (3.7124)  data: 0.1357 (0.1369)  lr: 0.000000  max mem: 1317
2020-12-06 20:16:07,581 maskrcnn_benchmark.trainer INFO: eta: 1:29:09  iter: 60  loss: 12.2448 (15.5260)  loss_classifier: 1.5245 (1.9398)  loss_box_reg: 0.7065 (0.7391)  loss_objectness: 9.3774 (11.1568)  loss_rpn_box_reg: 0.0731 (1.6903)  time: 3.7212 (3.7152)  data: 0.1339 (0.1361)  lr: 0.000000  max mem: 1317
2020-12-06 20:17:22,065 maskrcnn_benchmark.trainer INFO: eta: 1:27:58  iter: 80  loss: 12.1426 (15.0747)  loss_classifier: 1.0596 (1.9315)  loss_box_reg: 0.5208 (0.7306)  loss_objectness: 8.5506 (10.5065)  loss_rpn_box_reg: 0.2732 (1.9060)  time: 3.7212 (3.7174)  data: 0.1326 (0.1362)  lr: 0.000000  max mem: 1317
2020-12-06 20:18:36,525 maskrcnn_benchmark.trainer INFO: eta: 1:26:45  iter: 100  loss: 9.2860 (14.3904)  loss_classifier: 0.9722 (1.9046)  loss_box_reg: 0.6532 (0.7470)  loss_objectness: 6.8105 (9.7940)  loss_rpn_box_reg: 0.1324 (1.9448)  time: 3.7202 (3.7185)  data: 0.1399 (0.1376)  lr: 0.000000  max mem: 1317
2020-12-06 20:18:36,527 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 20:18:36,582 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 20:19:18,979 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.396414 (1.4619453199978532 s / img per device, on 1 devices)
2020-12-06 20:19:18,979 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.664274 (1.4022163522654567 s / img per device, on 1 devices)
2020-12-06 20:19:18,979 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 20:19:20,730 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 20:19:20,730 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([5.9831e-02, 2.5893e-02, 3.2294e-03, 3.2069e-03, 2.8569e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.9369e-03,
        8.8349e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 4.2492e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7130e-02, 0.0000e+00, 0.0000e+00,
        1.6527e-01, 5.4210e-02, 2.3823e-02, 9.8877e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.3282e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        4.0703e-03, 0.0000e+00, 0.0000e+00, 2.3123e-01, 1.7161e-01, 9.7641e-02,
        7.5490e-02, 3.8592e-02, 3.2314e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.4929e-01, 1.3394e-01, 1.1999e-01, 4.9974e-02,
        2.9615e-03, 4.1750e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 6.2598e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.3663e-02, 2.3603e-02, 9.8877e-03,
        3.5240e-03, 1.8691e-03, 4.4089e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.7810e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.7845e-02,
        5.9988e-03, 7.1326e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3055e-02, 3.7950e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        4.1203e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.5861e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.1827e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.1896e-02, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 2.0677e-02, 1.8777e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 7,
        7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7,
        7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,
        -1., -1.,  8.,  3.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1.,  8., -1., -1.,  8.,  6.,  8.,  8.,  6.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1., -1.,
        -1.,  5.,  5.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1.,  3., -1., -1., -1., -1.,  3.,  5.,  6.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1., -1.,
        -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,
        -1., -1., -1., -1.,  8., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1.,  8., -1.,  8., -1., -1., -1., -1., -1.,  8.,
        -1., -1., -1., -1., -1.,  3.,  8., -1., -1., -1., -1.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  8.,  8., -1., -1.,  8.,
         3.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1.,  3.,  8.,  3.,  8.,  8., -1., -1.,  8., -1., -1., -1.,
        -1., -1., -1.,  3.]), 'best match scores': tensor([1.0000, 1.0000, 1.0000, 0.7059, 0.9993, 0.9999, 1.0000, 0.5557, 1.0000,
        1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.2732,
        0.9982, 1.0000, 0.9413, 0.9999, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.9998, 0.2418, 1.0000, 1.0000,
        0.9916, 0.9866, 0.1263, 1.0000, 0.3033, 0.4455, 0.3627, 1.0000, 1.0000,
        1.0000, 1.0000, 0.4040, 0.9622, 0.2944, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9774, 1.0000, 1.0000, 0.1306, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.1077, 0.0623, 1.0000, 1.0000, 0.2936, 0.8069,
        0.6369, 0.0632, 1.0000, 0.5530, 1.0000, 0.9997, 0.6294, 1.0000, 1.0000,
        1.0000, 0.9984, 1.0000, 1.0000, 1.0000, 0.6866, 0.2110, 1.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.8574, 0.1426, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0726, 1.0000, 0.9995, 0.9745,
        1.0000, 0.3937, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.9467, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.7792, 0.0000, 1.0000, 0.9998, 0.1504,
        1.0000, 1.0000, 0.9997, 1.0000, 0.0965, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.9997, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9993, 0.1348, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9087, 0.4759, 0.5241, 1.0000, 0.9997, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.1082, 1.0000, 0.0000,
        0.0000, 1.0000, 0.9747, 1.0000, 0.9947, 1.0000, 0.2338, 1.0000, 1.0000,
        1.0000, 0.9998, 0.2440, 0.8337, 0.4326, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.8276, 0.9994, 1.0000, 1.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9994]), 'num_pos': 214}
2020-12-06 20:19:20,762 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.383178
2020-12-06 20:19:20,765 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./_best_acc_r1.pth
2020-12-06 20:19:24,851 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: _best_acc_r1
2020-12-06 20:20:41,455 maskrcnn_benchmark.trainer INFO: eta: 1:35:13  iter: 120  loss: 9.9396 (13.9699)  loss_classifier: 1.5366 (1.9153)  loss_box_reg: 0.7845 (0.7754)  loss_objectness: 5.8789 (9.1361)  loss_rpn_box_reg: 0.3355 (2.1431)  time: 3.7765 (4.1399)  data: 0.1375 (0.5428)  lr: 0.000000  max mem: 1317
2020-12-06 20:22:00,075 maskrcnn_benchmark.trainer INFO: eta: 1:33:09  iter: 140  loss: 9.1506 (13.5180)  loss_classifier: 1.3366 (1.8883)  loss_box_reg: 0.6232 (0.7856)  loss_objectness: 4.9653 (8.5214)  loss_rpn_box_reg: 0.4517 (2.3227)  time: 3.9529 (4.1100)  data: 0.1461 (0.4871)  lr: 0.000000  max mem: 1317
2020-12-06 20:23:16,866 maskrcnn_benchmark.trainer INFO: eta: 1:31:02  iter: 160  loss: 7.4591 (13.1341)  loss_classifier: 0.9416 (1.8166)  loss_box_reg: 0.5249 (0.7612)  loss_objectness: 3.3729 (7.9638)  loss_rpn_box_reg: 0.1038 (2.5925)  time: 3.7455 (4.0762)  data: 0.1414 (0.4438)  lr: 0.000000  max mem: 1317
2020-12-06 20:24:31,720 maskrcnn_benchmark.trainer INFO: eta: 1:28:51  iter: 180  loss: 4.3248 (12.3743)  loss_classifier: 0.7516 (1.7351)  loss_box_reg: 0.4270 (0.7452)  loss_objectness: 2.4574 (7.4006)  loss_rpn_box_reg: 0.1509 (2.4934)  time: 3.7417 (4.0392)  data: 0.1380 (0.4099)  lr: 0.000000  max mem: 1317
2020-12-06 20:25:46,735 maskrcnn_benchmark.trainer INFO: eta: 1:26:53  iter: 200  loss: 3.2065 (11.6964)  loss_classifier: 0.8390 (1.7189)  loss_box_reg: 0.4538 (0.7286)  loss_objectness: 1.4372 (6.8494)  loss_rpn_box_reg: 0.1337 (2.3995)  time: 3.7509 (4.0103)  data: 0.1377 (0.3827)  lr: 0.000000  max mem: 1317
2020-12-06 20:25:46,737 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 20:25:46,794 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 20:26:29,262 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.467781 (1.4644062272433578 s / img per device, on 1 devices)
2020-12-06 20:26:29,262 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.715315 (1.4039763664377147 s / img per device, on 1 devices)
2020-12-06 20:26:29,262 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 20:26:30,997 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 20:26:30,997 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([7.1917e-02, 3.4397e-03, 3.2189e-03, 1.8326e-03, 1.1996e-04, 2.1484e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0579e-01,
        3.8078e-02, 2.2676e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.9370e-02, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.4886e-02, 0.0000e+00, 0.0000e+00,
        5.1701e-02, 5.0418e-02, 3.1021e-02, 2.0179e-02, 3.2586e-03, 1.6193e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.9916e-02,
        2.0006e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.2787e-02, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1210e-02, 0.0000e+00, 0.0000e+00,
        7.6970e-02, 7.3193e-02, 3.4578e-02, 2.3713e-02, 3.7386e-03, 3.2004e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.5401e-02,
        1.9473e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.3436e-01, 1.3384e-01, 1.2660e-01, 1.0689e-01,
        5.6400e-02, 3.1300e-03, 2.9319e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5876e-02, 0.0000e+00, 0.0000e+00, 6.5829e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2931e-01, 8.2341e-02, 4.6491e-02,
        2.8625e-02, 6.5597e-03, 3.5240e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.2390e-01, 5.8051e-02, 1.1866e-02, 7.5791e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1470e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.1306e-02,
        2.3318e-02, 1.9960e-02, 1.8165e-02, 3.3184e-03, 2.5765e-03, 3.5889e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.9231e-01, 5.2820e-02,
        4.3619e-02, 2.4000e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        7.1331e-03, 3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.1919e-02, 2.1519e-02, 1.8062e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.4443e-02,
        1.5107e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.4482e-02, 0.0000e+00, 0.0000e+00,
        5.4286e-03, 0.0000e+00, 0.0000e+00, 1.7090e-01, 2.0807e-02, 7.6702e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        4.6450e-02, 1.1493e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1.,  5.,  6.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  5.,  8.,  5.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
         8., -1., -1., -1.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  5.,  8.,  5.,  6.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8.,
         8., -1., -1., -1.,  3.,  3.,  3.,  8.]), 'best match scores': tensor([1.0000, 0.9996, 0.1265, 1.0000, 1.0000, 1.0000, 0.9872, 1.0000, 1.0000,
        0.1351, 0.8684, 1.0000, 1.0000, 0.9709, 1.0000, 0.0864, 1.0000, 1.0000,
        0.9986, 1.0000, 0.3208, 1.0000, 1.0000, 0.0000, 0.9987, 0.0000, 1.0000,
        1.0000, 0.2063, 0.9997, 0.9373, 0.6583, 1.0000, 1.0000, 0.9146, 1.0000,
        0.9918, 1.0000, 0.9996, 0.5341, 1.0000, 1.0000, 0.9997, 0.9894, 1.0000,
        0.9744, 1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9922, 1.0000,
        1.0000, 0.9999, 0.0782, 1.0000, 0.9997, 0.9999, 1.0000, 1.0000, 0.7962,
        1.0000, 1.0000, 0.9987, 0.9931, 0.9721, 0.9990, 1.0000, 0.9666, 0.9995,
        1.0000, 1.0000, 1.0000, 0.1208, 0.2409, 1.0000, 0.9764, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 0.9956, 0.8277, 0.9954, 1.0000, 1.0000, 0.9998, 0.9988, 0.2680,
        0.4510, 0.9992, 1.0000, 0.0739, 1.0000, 0.3360, 0.9042, 0.1276, 0.9999,
        1.0000, 1.0000, 0.9993, 1.0000, 1.0000, 0.2654, 0.8799, 0.9919, 0.2299,
        0.9747, 1.0000, 0.9985, 0.2064, 1.0000, 0.9972, 1.0000, 0.9390, 0.9563,
        0.0740, 1.0000, 0.8603, 1.0000, 0.9995, 0.9998, 0.2457, 0.7383, 0.9380,
        0.9937, 0.1377, 0.9984, 0.9448, 1.0000, 0.8707, 0.0977, 1.0000, 0.9666,
        1.0000, 0.9860, 1.0000, 1.0000, 1.0000, 1.0000, 0.4065, 0.9999, 1.0000,
        1.0000, 0.1241, 0.9998, 0.9974, 0.9995, 1.0000, 0.6271, 0.1587, 0.9280,
        0.8202, 1.0000, 0.9643, 1.0000, 1.0000, 0.0761, 1.0000, 1.0000, 0.9995,
        0.6204, 0.9998, 0.9300, 1.0000, 0.9722, 1.0000, 1.0000, 0.9613, 0.8686,
        0.8637, 0.6450, 1.0000, 1.0000, 0.9955, 0.4559, 0.8651, 0.9564, 0.9995,
        0.9985, 1.0000, 0.9996, 1.0000, 1.0000, 0.5042, 1.0000, 0.0706, 0.1764,
        1.0000, 0.9999, 0.9738, 1.0000, 1.0000, 0.8786, 1.0000, 0.7942, 0.6524,
        0.0725, 0.9972, 1.0000, 0.2349, 0.9089, 0.9731, 0.1924, 1.0000, 1.0000,
        1.0000, 0.1179, 0.3247, 0.8030, 1.0000, 1.0000, 0.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0660, 0.9999, 0.9976, 0.9961]), 'num_pos': 232}
2020-12-06 20:26:31,034 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.676724
2020-12-06 20:26:31,036 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./_best_acc_r1.pth
2020-12-06 20:26:35,043 maskrcnn_benchmark.trainer INFO: current record in accuracy, saving model to: _best_acc_r1
2020-12-06 20:27:50,350 maskrcnn_benchmark.trainer INFO: eta: 1:29:45  iter: 220  loss: 3.1842 (11.0515)  loss_classifier: 0.7189 (1.6700)  loss_box_reg: 0.5245 (0.7091)  loss_objectness: 1.2544 (6.3683)  loss_rpn_box_reg: 0.2240 (2.3041)  time: 3.7538 (4.2076)  data: 0.1370 (0.5808)  lr: 0.000000  max mem: 1317
2020-12-06 20:29:05,265 maskrcnn_benchmark.trainer INFO: eta: 1:27:33  iter: 240  loss: 2.0785 (10.4819)  loss_classifier: 0.7911 (1.6469)  loss_box_reg: 0.3286 (0.6896)  loss_objectness: 0.5468 (5.9231)  loss_rpn_box_reg: 0.1145 (2.2223)  time: 3.7435 (4.1691)  data: 0.1357 (0.5437)  lr: 0.000000  max mem: 1317
2020-12-06 20:30:20,272 maskrcnn_benchmark.trainer INFO: eta: 1:25:29  iter: 260  loss: 4.3653 (10.2363)  loss_classifier: 1.1282 (1.6541)  loss_box_reg: 0.5028 (0.6883)  loss_objectness: 0.7348 (5.5984)  loss_rpn_box_reg: 0.4397 (2.2955)  time: 3.7489 (4.1369)  data: 0.1391 (0.5127)  lr: 0.000000  max mem: 1317
2020-12-06 20:31:36,233 maskrcnn_benchmark.trainer INFO: eta: 1:23:37  iter: 280  loss: 3.4073 (9.9766)  loss_classifier: 1.1286 (1.6526)  loss_box_reg: 0.5882 (0.6814)  loss_objectness: 0.5422 (5.3108)  loss_rpn_box_reg: 0.1592 (2.3318)  time: 3.7605 (4.1127)  data: 0.1360 (0.4858)  lr: 0.000000  max mem: 1317
2020-12-06 20:32:51,290 maskrcnn_benchmark.trainer INFO: eta: 1:21:46  iter: 300  loss: 1.3880 (9.7023)  loss_classifier: 0.5810 (1.6180)  loss_box_reg: 0.3173 (0.6706)  loss_objectness: 0.4340 (5.0412)  loss_rpn_box_reg: 0.1062 (2.3726)  time: 3.7451 (4.0887)  data: 0.1362 (0.4626)  lr: 0.000000  max mem: 1317
2020-12-06 20:32:51,293 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 20:32:51,343 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 20:33:33,659 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.316476 (1.459188831263575 s / img per device, on 1 devices)
2020-12-06 20:33:33,660 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.653322 (1.4018386972361598 s / img per device, on 1 devices)
2020-12-06 20:33:33,660 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 20:33:35,405 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 20:33:35,406 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0942, 0.0259, 0.0038, 0.0033, 0.0005, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0232, 0.0199, 0.0126, 0.0050, 0.0038, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0056, 0.0000, 0.0000, 0.0166, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0155, 0.0000, 0.0000,
        0.0747, 0.0264, 0.0099, 0.0014, 0.0007, 0.0007, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0095, 0.0000, 0.0000, 0.0165, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0057, 0.0000, 0.0000,
        0.0779, 0.0658, 0.0523, 0.0237, 0.0099, 0.0014, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0004, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1320, 0.1309, 0.1069, 0.1019, 0.0020, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0103, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.1149, 0.0109, 0.0032, 0.0032, 0.0018, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0207, 0.0097, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0077, 0.0000, 0.0000, 0.1306, 0.0600, 0.0032, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0200, 0.0039, 0.0020, 0.0008,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0677, 0.0471,
        0.0236, 0.0123, 0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0165, 0.0025,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0478,
        0.0200, 0.0040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1310,
        0.0202, 0.0034, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0402,
        0.0165, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0235, 0.0000, 0.0000, 0.0054, 0.0000, 0.0000, 0.0326, 0.0197, 0.0037,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 3.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  2.,
         8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,
        -1.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
         8.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  3.,  5.,  5.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1.,  8., -1., -1., -1.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,
        -1.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  5.,  8.,  6.,  8.,  8.,  3.,  8.,  8.,  8., -1.,  8., -1.,
         3.,  8.,  8.,  3.,  6.,  8., -1.,  8., -1.,  8., -1.,  8.,  3.,  6.,
         8.,  3.,  3.,  8.,  5.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  8., -1., -1.,
        -1., -1., -1., -1.,  5.,  6.,  8.,  8.]), 'best match scores': tensor([0.9982, 0.2905, 0.9993, 1.0000, 0.2196, 1.0000, 1.0000, 0.9998, 1.0000,
        0.9686, 0.9997, 0.0802, 1.0000, 0.2151, 1.0000, 1.0000, 0.1868, 0.9963,
        0.9985, 0.7686, 0.1868, 1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1741, 1.0000, 1.0000, 0.4515, 1.0000, 1.0000, 0.9999,
        1.0000, 1.0000, 1.0000, 0.9998, 1.0000, 1.0000, 1.0000, 0.2539, 1.0000,
        0.9999, 0.2146, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.2745, 1.0000,
        0.9976, 1.0000, 0.9972, 0.4069, 0.9987, 0.0000, 0.0000, 0.9999, 1.0000,
        1.0000, 0.9818, 0.3329, 0.4606, 0.9999, 1.0000, 1.0000, 0.8042, 0.9535,
        1.0000, 1.0000, 0.9998, 0.6933, 1.0000, 0.7391, 1.0000, 1.0000, 0.6065,
        1.0000, 1.0000, 0.0000, 0.1443, 0.2714, 0.0620, 1.0000, 0.9999, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9256, 0.7652,
        1.0000, 1.0000, 1.0000, 0.9943, 1.0000, 0.9999, 1.0000, 1.0000, 0.0000,
        0.0000, 0.9731, 1.0000, 1.0000, 1.0000, 0.9873, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9989, 0.9998, 0.9273, 0.9799, 1.0000, 0.8596, 1.0000, 0.1051,
        1.0000, 0.9954, 0.0000, 0.9998, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.2248, 1.0000, 0.9396, 0.2891, 1.0000, 0.0000, 1.0000, 0.9991, 1.0000,
        0.7377, 0.9258, 0.9688, 0.8149, 1.0000, 0.9996, 1.0000, 1.0000, 0.7751,
        0.9908, 0.9866, 0.9999, 1.0000, 0.8327, 1.0000, 1.0000, 1.0000, 0.3353,
        1.0000, 1.0000, 0.0527, 0.8696, 1.0000, 1.0000, 1.0000, 0.6056, 1.0000,
        1.0000, 1.0000, 0.2030, 0.9996, 0.2728, 0.3888, 0.9591, 1.0000, 0.0000,
        1.0000, 0.0000, 0.7752, 1.0000, 0.9998, 1.0000, 0.9402, 1.0000, 0.0000,
        1.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.2350,
        1.0000, 1.0000, 0.1082, 1.0000, 1.0000, 1.0000, 0.9998, 0.9999, 1.0000,
        0.9087, 0.9999, 0.9816, 0.8593, 0.9866, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.3819, 0.6834, 1.0000, 0.3657, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.2160, 1.0000, 0.9882, 1.0000]), 'num_pos': 232}
2020-12-06 20:33:35,439 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.534483
2020-12-06 20:34:51,475 maskrcnn_benchmark.trainer INFO: eta: 1:22:46  iter: 320  loss: 1.7423 (9.5349)  loss_classifier: 0.6121 (1.5994)  loss_box_reg: 0.3021 (0.6556)  loss_objectness: 0.4847 (4.8303)  loss_rpn_box_reg: 0.1781 (2.4496)  time: 3.7855 (4.2088)  data: 0.1403 (0.5807)  lr: 0.000000  max mem: 1317
2020-12-06 20:36:06,536 maskrcnn_benchmark.trainer INFO: eta: 1:20:51  iter: 340  loss: 1.2061 (9.1987)  loss_classifier: 0.4665 (1.5646)  loss_box_reg: 0.3716 (0.6419)  loss_objectness: 0.4185 (4.5980)  loss_rpn_box_reg: 0.0324 (2.3943)  time: 3.7442 (4.1820)  data: 0.1398 (0.5548)  lr: 0.000000  max mem: 1317
2020-12-06 20:37:21,424 maskrcnn_benchmark.trainer INFO: eta: 1:18:59  iter: 360  loss: 2.3695 (9.0581)  loss_classifier: 0.8777 (1.5535)  loss_box_reg: 0.7375 (0.6431)  loss_objectness: 0.4574 (4.4188)  loss_rpn_box_reg: 0.0854 (2.4428)  time: 3.7452 (4.1576)  data: 0.1369 (0.5316)  lr: 0.000000  max mem: 1317
2020-12-06 20:38:36,321 maskrcnn_benchmark.trainer INFO: eta: 1:17:12  iter: 380  loss: 1.4971 (8.7591)  loss_classifier: 0.5917 (1.5301)  loss_box_reg: 0.3379 (0.6322)  loss_objectness: 0.4320 (4.2218)  loss_rpn_box_reg: 0.0587 (2.3750)  time: 3.7421 (4.1359)  data: 0.1380 (0.5109)  lr: 0.000000  max mem: 1317
2020-12-06 20:39:51,317 maskrcnn_benchmark.trainer INFO: eta: 1:15:28  iter: 400  loss: 1.9779 (8.5265)  loss_classifier: 0.7387 (1.5212)  loss_box_reg: 0.3971 (0.6237)  loss_objectness: 0.4157 (4.0557)  loss_rpn_box_reg: 0.2107 (2.3259)  time: 3.7475 (4.1166)  data: 0.1330 (0.4921)  lr: 0.000000  max mem: 1317
2020-12-06 20:39:51,319 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 20:39:51,371 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 20:40:33,964 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.592762 (1.4687159308071793 s / img per device, on 1 devices)
2020-12-06 20:40:33,964 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.865748 (1.4091637134552002 s / img per device, on 1 devices)
2020-12-06 20:40:33,964 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 20:40:35,735 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 20:40:35,735 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([6.0589e-02, 4.0079e-02, 2.5809e-02, 5.2261e-03, 3.9321e-03, 9.8759e-04,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7950e-03,
        3.7092e-03, 4.7867e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        7.1896e-02, 2.6365e-02, 3.2027e-03, 1.6942e-03, 2.3958e-04, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.5114e-02,
        3.0888e-02, 1.6502e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 1.9725e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9647e-02, 0.0000e+00, 0.0000e+00,
        5.4811e-02, 1.0015e-02, 3.3236e-03, 8.6416e-04, 5.4328e-04, 5.4143e-04,
        2.4931e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1036e-01,
        6.1771e-02, 3.0335e-02, 1.1459e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.3782e-01, 1.2464e-01, 1.0689e-01, 7.2711e-02,
        2.9615e-03, 1.0454e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.6544e-03, 3.6216e-03, 1.8154e-03,
        8.5414e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.4716e-02, 1.7546e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.5077e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.4002e-02,
        3.8555e-03, 2.1773e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.5053e-02, 3.7950e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3784e-01,
        8.8894e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.8816e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.5198e-02, 0.0000e+00, 0.0000e+00,
        3.1476e-02, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7924e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  6.,  8.,
         8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1.,  3.,
         3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1.,  3.,  8.,  8.,  3.,  8.,
         8.,  8.,  8., -1., -1.,  8., -1., -1.,  5.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
         3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  3.,  5.,  5.,  5.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,
        -1., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  5.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  6.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1., -1., -1.,  8.,  6.,  8.,  8., -1., -1.,
         3.,  3.,  5.,  5.,  6.,  8.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.5285, 1.0000, 0.8287, 0.9966, 0.9984, 0.9979, 0.9907, 0.9405,
        1.0000, 0.5886, 0.9513, 1.0000, 1.0000, 0.9991, 0.9962, 1.0000, 0.9988,
        0.7500, 0.0766, 0.9982, 1.0000, 0.4372, 0.0000, 1.0000, 0.0000, 0.0000,
        0.2946, 0.6689, 1.0000, 0.1108, 0.6772, 1.0000, 0.6515, 1.0000, 0.9997,
        1.0000, 0.3285, 0.9943, 0.8293, 1.0000, 1.0000, 1.0000, 1.0000, 0.6703,
        1.0000, 0.1355, 0.0000, 0.8830, 0.0000, 0.0000, 0.9975, 1.0000, 1.0000,
        0.9647, 1.0000, 1.0000, 0.1305, 0.9993, 0.0000, 0.0000, 0.9981, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0984, 0.8232, 1.0000, 1.0000,
        1.0000, 1.0000, 0.7857, 0.1576, 1.0000, 1.0000, 1.0000, 0.9989, 0.4237,
        1.0000, 1.0000, 0.0000, 0.9950, 1.0000, 0.9999, 1.0000, 1.0000, 0.8602,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9997, 1.0000, 0.8464, 1.0000, 0.9518,
        0.9858, 1.0000, 0.6764, 0.9372, 1.0000, 0.3325, 1.0000, 1.0000, 1.0000,
        0.9937, 1.0000, 1.0000, 0.1281, 1.0000, 0.9813, 0.8239, 1.0000, 0.0511,
        1.0000, 0.9977, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.1538, 0.9702,
        0.9877, 0.8431, 0.0000, 0.9992, 0.9190, 1.0000, 0.9020, 0.9993, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9994, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9939, 1.0000, 0.9994, 0.3887,
        1.0000, 1.0000, 1.0000, 0.0947, 0.4121, 1.0000, 1.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.2155, 0.8575, 1.0000, 0.8922, 1.0000,
        0.8967, 1.0000, 0.9999, 0.1948, 1.0000, 1.0000, 1.0000, 0.9985, 0.3121,
        1.0000, 1.0000, 1.0000, 1.0000, 0.1173, 0.0755, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.9999, 0.9982, 1.0000, 1.0000, 1.0000, 0.9978, 0.0000,
        0.0000, 0.9789, 0.0000, 0.0000, 0.0000, 0.5703, 1.0000, 0.8210, 0.9992,
        1.0000, 1.0000, 0.9263, 0.6406, 0.9360, 0.7553, 0.0000, 0.9999, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.9921, 0.9850, 0.0000, 0.0000, 0.9166,
        0.9952, 0.9899, 1.0000, 1.0000, 1.0000, 1.0000, 0.9256]), 'num_pos': 232}
2020-12-06 20:40:35,769 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.530172
2020-12-06 20:41:51,722 maskrcnn_benchmark.trainer INFO: eta: 1:15:43  iter: 420  loss: 5.2994 (8.4362)  loss_classifier: 1.2951 (1.5360)  loss_box_reg: 0.5260 (0.6245)  loss_objectness: 1.0625 (3.9363)  loss_rpn_box_reg: 0.5440 (2.3394)  time: 3.7637 (4.2073)  data: 0.1345 (0.5811)  lr: 0.000000  max mem: 1317
2020-12-06 20:43:06,895 maskrcnn_benchmark.trainer INFO: eta: 1:13:58  iter: 440  loss: 2.6370 (8.3089)  loss_classifier: 1.0293 (1.5248)  loss_box_reg: 0.5293 (0.6258)  loss_objectness: 0.4246 (3.8113)  loss_rpn_box_reg: 0.2154 (2.3470)  time: 3.7544 (4.1869)  data: 0.1410 (0.5611)  lr: 0.000000  max mem: 1317
2020-12-06 20:44:21,875 maskrcnn_benchmark.trainer INFO: eta: 1:12:14  iter: 460  loss: 1.9320 (8.1853)  loss_classifier: 0.8803 (1.5142)  loss_box_reg: 0.4014 (0.6208)  loss_objectness: 0.5375 (3.6937)  loss_rpn_box_reg: 0.1848 (2.3566)  time: 3.7480 (4.1678)  data: 0.1374 (0.5427)  lr: 0.000000  max mem: 1317
2020-12-06 20:45:36,936 maskrcnn_benchmark.trainer INFO: eta: 1:10:33  iter: 480  loss: 2.0473 (8.0527)  loss_classifier: 0.8255 (1.4935)  loss_box_reg: 0.5684 (0.6188)  loss_objectness: 0.4948 (3.5955)  loss_rpn_box_reg: 0.1225 (2.3450)  time: 3.7510 (4.1506)  data: 0.1415 (0.5260)  lr: 0.000000  max mem: 1317
2020-12-06 20:46:51,958 maskrcnn_benchmark.trainer INFO: eta: 1:08:54  iter: 500  loss: 3.6154 (7.9924)  loss_classifier: 0.8748 (1.4787)  loss_box_reg: 0.4304 (0.6165)  loss_objectness: 0.8147 (3.5090)  loss_rpn_box_reg: 0.3140 (2.3882)  time: 3.7498 (4.1346)  data: 0.1355 (0.5104)  lr: 0.000000  max mem: 1317
2020-12-06 20:46:51,960 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 20:46:52,012 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 20:47:34,495 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.482930 (1.4649286105714996 s / img per device, on 1 devices)
2020-12-06 20:47:34,495 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.769469 (1.4058437429625412 s / img per device, on 1 devices)
2020-12-06 20:47:34,496 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 20:47:36,239 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 20:47:36,239 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.5893e-02, 3.7784e-03, 2.7634e-04, 2.5205e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5743e-01,
        3.8541e-03, 3.4416e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.5956e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.1571e-02, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 9.8877e-03, 8.9308e-03, 3.3184e-03, 1.1923e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.0031e-05, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        2.3761e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        4.7841e-02, 3.7587e-03, 3.2479e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.2010e-02,
        3.9516e-02, 6.5599e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.3640e-01, 6.5903e-03, 3.2609e-03, 1.1292e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0258e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.8728e-02, 3.6216e-03, 5.1912e-04,
        6.8000e-06, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03,
        0.0000e+00, 0.0000e+00, 1.6816e-02, 3.8268e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0777e-01,
        4.9884e-04, 4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.8116e-01, 3.9094e-03,
        2.2786e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 3.4413e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        1.5292e-02, 3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.6662e-01, 1.3748e-02, 2.7456e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        3.0463e-02, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7184e-03, 3.7126e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
         8.,  3.,  3.,  8.,  3.,  6.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,  3.,  8.,  8.,  8.,
         6.,  8.,  3., -1.,  5.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
         8., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  5.,  6.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  3.,  3.,  5.,  5.,
         5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
        -1.,  8., -1., -1.,  3.,  8.,  5.,  6.,  8.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,
         8., -1.,  3.,  8.,  3.,  3.,  5.,  6.,  8.,  8.,  8.,  8., -1., -1.,
         3.,  8.,  8.,  6.,  8.,  8.,  3.,  6.,  8.,  3.,  8.,  8.,  8.,  8.,
         8., -1., -1., -1.,  3.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  3., -1., -1., -1.,  8.,  8.,  3.,  6., -1., -1.,
        -1., -1., -1., -1.,  3.,  6.,  8.,  8.]), 'best match scores': tensor([1.0000, 0.1956, 0.9597, 0.9992, 0.9715, 1.0000, 1.0000, 0.1112, 0.9064,
        0.9633, 0.5851, 0.0000, 0.0000, 0.0000, 0.5951, 1.0000, 0.3245, 0.9934,
        0.0561, 0.9999, 0.7314, 0.9997, 0.9337, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0940, 1.0000, 1.0000,
        0.9995, 1.0000, 1.0000, 0.4203, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.1484, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0975, 0.9999,
        0.9837, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.5212, 0.9974, 0.9999,
        1.0000, 1.0000, 0.9604, 0.9999, 1.0000, 1.0000, 0.0572, 1.0000, 0.9994,
        1.0000, 1.0000, 0.1685, 1.0000, 0.9996, 1.0000, 0.3244, 0.9585, 1.0000,
        0.9983, 1.0000, 0.0000, 0.9117, 0.0000, 0.9956, 1.0000, 1.0000, 0.9998,
        1.0000, 0.9998, 0.9989, 0.9928, 1.0000, 1.0000, 0.4607, 0.9638, 1.0000,
        0.7885, 0.9999, 0.0548, 1.0000, 1.0000, 1.0000, 0.3488, 0.9983, 0.1318,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.1231, 0.5866, 0.7708,
        0.5307, 0.6323, 0.0981, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000, 1.0000,
        0.3778, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1017, 1.0000,
        1.0000, 0.9984, 0.8978, 1.0000, 1.0000, 0.0000, 0.3239, 0.0000, 0.0000,
        0.9869, 0.9984, 0.7618, 1.0000, 1.0000, 1.0000, 1.0000, 0.9991, 1.0000,
        0.7205, 0.1324, 0.4171, 0.1253, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.0667, 1.0000, 0.5145, 0.0000, 0.7313,
        0.6854, 0.9762, 1.0000, 1.0000, 1.0000, 0.9996, 1.0000, 1.0000, 0.8740,
        0.0000, 0.0000, 0.9376, 0.9779, 1.0000, 0.9980, 1.0000, 0.3921, 1.0000,
        0.9999, 1.0000, 0.9939, 1.0000, 0.7730, 0.1045, 0.9977, 0.9973, 0.0000,
        0.0000, 0.0000, 0.1190, 0.9836, 0.1765, 1.0000, 0.9999, 0.9989, 0.9999,
        0.9576, 0.9998, 1.0000, 0.9958, 0.5559, 0.7028, 0.0000, 0.3718, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 0.9908, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.8947, 1.0000, 0.9989, 0.1053]), 'num_pos': 232}
2020-12-06 20:47:36,273 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.452586
2020-12-06 20:48:51,368 maskrcnn_benchmark.trainer INFO: eta: 1:08:41  iter: 520  loss: 3.2188 (7.9018)  loss_classifier: 0.9438 (1.4671)  loss_box_reg: 0.4900 (0.6145)  loss_objectness: 0.4649 (3.4153)  loss_rpn_box_reg: 0.3158 (2.4049)  time: 3.7528 (4.2052)  data: 0.1333 (0.5813)  lr: 0.000000  max mem: 1317
2020-12-06 20:50:06,378 maskrcnn_benchmark.trainer INFO: eta: 1:07:00  iter: 540  loss: 3.1562 (7.8644)  loss_classifier: 0.5877 (1.4494)  loss_box_reg: 0.6244 (0.6137)  loss_objectness: 0.8715 (3.3461)  loss_rpn_box_reg: 0.3065 (2.4552)  time: 3.7476 (4.1883)  data: 0.1364 (0.5648)  lr: 0.000000  max mem: 1317
2020-12-06 20:51:21,193 maskrcnn_benchmark.trainer INFO: eta: 1:05:22  iter: 560  loss: 1.1990 (7.6888)  loss_classifier: 0.4942 (1.4292)  loss_box_reg: 0.2263 (0.6056)  loss_objectness: 0.3872 (3.2563)  loss_rpn_box_reg: 0.0682 (2.3978)  time: 3.7402 (4.1724)  data: 0.1387 (0.5496)  lr: 0.000000  max mem: 1317
2020-12-06 20:52:36,028 maskrcnn_benchmark.trainer INFO: eta: 1:03:44  iter: 580  loss: 1.6968 (7.5359)  loss_classifier: 0.6588 (1.4174)  loss_box_reg: 0.3912 (0.5989)  loss_objectness: 0.4506 (3.1684)  loss_rpn_box_reg: 0.1687 (2.3513)  time: 3.7411 (4.1575)  data: 0.1351 (0.5354)  lr: 0.000000  max mem: 1317
2020-12-06 20:53:50,924 maskrcnn_benchmark.trainer INFO: eta: 1:02:09  iter: 600  loss: 1.8027 (7.4573)  loss_classifier: 0.5711 (1.3964)  loss_box_reg: 0.4851 (0.6020)  loss_objectness: 0.4086 (3.1018)  loss_rpn_box_reg: 0.1171 (2.3573)  time: 3.7437 (4.1438)  data: 0.1384 (0.5222)  lr: 0.000000  max mem: 1317
2020-12-06 20:53:50,926 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 20:53:50,981 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 20:54:33,409 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.427819 (1.463028225405463 s / img per device, on 1 devices)
2020-12-06 20:54:33,409 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.641392 (1.401427301867255 s / img per device, on 1 devices)
2020-12-06 20:54:33,410 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 20:54:35,138 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 20:54:35,138 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.5893e-02, 3.3421e-03, 9.0638e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        1.1031e-02, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.3824e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        1.5397e-01, 2.9286e-02, 2.6365e-02, 3.6216e-03, 4.4820e-04, 6.7899e-05,
        9.3311e-06, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.3120e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0876e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        7.8525e-02, 2.5186e-02, 3.7080e-03, 3.2475e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.8530e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.4677e-01, 7.8694e-02, 3.2482e-03, 1.3342e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.2652e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9829e-02, 1.9359e-02, 3.6292e-03,
        3.1609e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3258e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.8555e-03,
        3.1946e-03, 3.9721e-04, 4.0319e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7987e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.2570e-02,
        3.9699e-03, 3.0101e-03, 3.5525e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0736e-02, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.1478e-02, 0.0000e+00, 0.0000e+00,
        2.1746e-02, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7860e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
         8., -1.,  3.,  3., -1.,  6.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  3.,  3.,  5.,
         5.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1., -1., -1., -1.,  6.,  8.,  5.,  6.,  8.,  8.,
         8.,  8.,  8.,  3.,  8.,  8., -1., -1., -1.,  8.,  3.,  6.,  8.,  8.,
         8., -1., -1.,  8., -1.,  3.,  5.,  6.,  8.,  8.,  8.,  8., -1., -1.,
         3.,  8.,  3.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  8., -1.,
         6., -1., -1., -1., -1.,  3.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1.,  8., -1., -1., -1.,  8., -1.,  6.,  8., -1., -1.,
        -1., -1.,  3.,  5.,  5.,  6.,  8.,  8.]), 'best match scores': tensor([0.9995, 0.2301, 0.9243, 0.9958, 0.9841, 1.0000, 0.8681, 1.0000, 1.0000,
        0.2382, 0.9636, 0.0000, 0.0000, 0.0000, 0.9999, 0.0000, 0.9991, 0.1460,
        0.0000, 0.9856, 0.9971, 1.0000, 0.9825, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9997, 0.0544, 0.1024,
        1.0000, 0.9997, 0.1955, 0.1330, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000,
        1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0613, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9888, 0.9827, 0.9718, 0.0000, 0.0000, 0.0000, 0.0000,
        0.3032, 1.0000, 1.0000, 0.6965, 0.9995, 0.4562, 1.0000, 0.9994, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.1010, 0.8846, 0.9990, 0.3503, 1.0000,
        0.9984, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9969, 1.0000, 0.7451, 1.0000, 1.0000, 0.2866, 0.9998,
        0.0941, 1.0000, 1.0000, 0.9998, 1.0000, 0.2023, 1.0000, 0.3883, 0.0000,
        0.0000, 1.0000, 0.9506, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.8537,
        0.9755, 0.0670, 1.0000, 1.0000, 0.9620, 1.0000, 1.0000, 1.0000, 0.9687,
        0.9124, 0.0965, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9999,
        1.0000, 0.9797, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9981, 1.0000, 1.0000,
        0.9585, 1.0000, 0.8176, 1.0000, 0.9995, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.9997, 1.0000, 1.0000, 0.9968, 1.0000, 1.0000, 0.0000, 0.0000,
        0.1065, 0.0000, 0.1755, 1.0000, 1.0000, 1.0000, 1.0000, 0.3929, 0.8143,
        0.0000, 0.0000, 0.9715, 0.9932, 0.1037, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.8632, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.4051, 0.1891, 0.0907, 1.0000, 0.1676, 0.9994,
        0.1438, 1.0000, 1.0000, 0.1458, 1.0000, 0.1305, 0.0000, 0.9909, 0.0000,
        0.0000, 0.0000, 0.9953, 0.0000, 1.0000, 0.0586, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9996, 0.6972, 0.1122, 1.0000, 1.0000, 0.3022]), 'num_pos': 232}
2020-12-06 20:54:35,168 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.383621
2020-12-06 20:55:50,072 maskrcnn_benchmark.trainer INFO: eta: 1:01:37  iter: 620  loss: 1.2828 (7.2831)  loss_classifier: 0.6008 (1.3845)  loss_box_reg: 0.3722 (0.5968)  loss_objectness: 0.3130 (3.0154)  loss_rpn_box_reg: 0.0440 (2.2865)  time: 3.7432 (4.2023)  data: 0.1368 (0.5812)  lr: 0.000000  max mem: 1317
2020-12-06 20:57:05,016 maskrcnn_benchmark.trainer INFO: eta: 1:00:01  iter: 640  loss: 1.3852 (7.2085)  loss_classifier: 0.3896 (1.3739)  loss_box_reg: 0.4602 (0.5927)  loss_objectness: 0.3354 (2.9540)  loss_rpn_box_reg: 0.0287 (2.2879)  time: 3.7504 (4.1880)  data: 0.1388 (0.5674)  lr: 0.000000  max mem: 1317
2020-12-06 20:58:20,107 maskrcnn_benchmark.trainer INFO: eta: 0:58:26  iter: 660  loss: 3.3257 (7.1547)  loss_classifier: 0.8902 (1.3725)  loss_box_reg: 0.5208 (0.5903)  loss_objectness: 0.6912 (2.8956)  loss_rpn_box_reg: 0.4233 (2.2963)  time: 3.7535 (4.1749)  data: 0.1378 (0.5544)  lr: 0.000000  max mem: 1317
2020-12-06 20:59:35,084 maskrcnn_benchmark.trainer INFO: eta: 0:56:53  iter: 680  loss: 2.2450 (7.0843)  loss_classifier: 0.8749 (1.3688)  loss_box_reg: 0.3481 (0.5862)  loss_objectness: 0.4064 (2.8395)  loss_rpn_box_reg: 0.1352 (2.2899)  time: 3.7473 (4.1624)  data: 0.1382 (0.5421)  lr: 0.000000  max mem: 1317
2020-12-06 21:00:50,113 maskrcnn_benchmark.trainer INFO: eta: 0:55:20  iter: 700  loss: 2.4654 (7.0359)  loss_classifier: 0.6932 (1.3640)  loss_box_reg: 0.3609 (0.5849)  loss_objectness: 0.3735 (2.7890)  loss_rpn_box_reg: 0.2037 (2.2980)  time: 3.7511 (4.1506)  data: 0.1370 (0.5306)  lr: 0.000000  max mem: 1317
2020-12-06 21:00:50,115 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 21:00:50,167 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 21:01:32,487 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.320110 (1.4593141407802188 s / img per device, on 1 devices)
2020-12-06 21:01:32,488 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.645884 (1.401582199951698 s / img per device, on 1 devices)
2020-12-06 21:01:32,488 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 21:01:34,215 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 21:01:34,215 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.5893e-02, 3.9283e-03, 3.3184e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3153e-02,
        9.0999e-03, 3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0022e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 2.1613e-02, 3.6216e-03, 1.8471e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7792e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.5891e-02, 0.0000e+00, 0.0000e+00,
        5.4175e-02, 2.3713e-02, 3.7397e-03, 3.2461e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.2035e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0689e-01, 1.0199e-01, 1.6485e-02, 3.1042e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3425e-02, 3.6216e-03, 3.2461e-03,
        1.2425e-03, 2.0742e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.8126e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.3527e-03,
        7.1631e-04, 9.7260e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.2914e-02, 5.9026e-03,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9798e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.5935e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7184e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
         8.,  3.,  3.,  3.,  6.,  8., -1.,  3.,  8., -1.,  3., -1., -1., -1.,
        -1., -1.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1.,  6.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1., -1., -1.,  5.,  5.,  6.,  6.,
         8.,  8., -1.,  3.,  5.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,  8., -1., -1., -1., -1., -1.,
        -1., -1.,  5.,  5.,  6.,  8., -1.,  3.,  8.,  8.,  8.,  8.,  6.,  8.,
         8.,  8., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1., -1., -1.,  5.,  6.,  8., -1., -1.,  2.,  8.,
         8.,  3.,  5.,  6.,  8.,  8., -1.,  3.,  3.,  8.,  6.,  8.,  8.,  8.,
         8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  6., -1., -1., -1.,
        -1.,  8., -1.,  3.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  6.,  8.,
         8., -1., -1., -1., -1., -1., -1., -1., -1.,  3.,  6.,  3.,  8.,  8.,
         3.,  6.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  6.,  8., -1., -1.,
        -1., -1., -1., -1.,  3.,  3.,  6.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 0.2143, 0.3335, 1.0000, 1.0000, 0.1136, 1.0000, 0.3475,
        1.0000, 0.3776, 0.0000, 0.0000, 0.0000, 1.0000, 0.3346, 0.8104, 0.9995,
        1.0000, 0.5840, 0.0000, 0.9957, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.2096, 0.1081, 1.0000, 0.9905, 1.0000, 0.9997,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.9896, 0.8136, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 0.9800, 0.9999, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.7999, 1.0000, 1.0000, 0.9868, 1.0000, 0.3921,
        0.0000, 0.5432, 1.0000, 1.0000, 1.0000, 0.1063, 1.0000, 1.0000, 0.9947,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 0.0710, 0.9997, 1.0000, 0.9346, 0.9743, 1.0000, 1.0000, 1.0000,
        0.9922, 1.0000, 1.0000, 1.0000, 0.9996, 0.3774, 0.9999, 0.9993, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.0000, 0.0798, 1.0000, 1.0000, 0.9997, 1.0000, 1.0000, 1.0000,
        0.9981, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.4587, 0.9997,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9897, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.7094, 0.9998, 1.0000, 0.0000, 0.0000, 0.9980,
        0.9749, 1.0000, 0.9530, 0.1086, 1.0000, 0.2420, 1.0000, 0.0000, 0.9989,
        1.0000, 0.9988, 0.9997, 1.0000, 0.1156, 1.0000, 0.9862, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9690, 1.0000, 0.9722, 0.4419, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.5673, 0.9588, 1.0000, 0.7500, 1.0000, 0.1269, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9997, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.8922, 1.0000, 1.0000, 0.7930]), 'num_pos': 232}
2020-12-06 21:01:34,247 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.306034
2020-12-06 21:02:49,564 maskrcnn_benchmark.trainer INFO: eta: 0:54:36  iter: 720  loss: 1.3333 (6.9834)  loss_classifier: 0.5534 (1.3484)  loss_box_reg: 0.3395 (0.5797)  loss_objectness: 0.3720 (2.7426)  loss_rpn_box_reg: 0.0896 (2.3127)  time: 3.7472 (4.2012)  data: 0.1333 (0.5810)  lr: 0.000000  max mem: 1317
2020-12-06 21:04:04,402 maskrcnn_benchmark.trainer INFO: eta: 0:53:03  iter: 740  loss: 3.3841 (7.0294)  loss_classifier: 0.8598 (1.3438)  loss_box_reg: 0.4844 (0.5798)  loss_objectness: 0.6891 (2.7148)  loss_rpn_box_reg: 0.3756 (2.3910)  time: 3.7388 (4.1888)  data: 0.1345 (0.5690)  lr: 0.000000  max mem: 1317
2020-12-06 21:05:19,185 maskrcnn_benchmark.trainer INFO: eta: 0:51:30  iter: 760  loss: 1.3440 (6.9697)  loss_classifier: 0.3570 (1.3226)  loss_box_reg: 0.2873 (0.5773)  loss_objectness: 0.4319 (2.6704)  loss_rpn_box_reg: 0.0650 (2.3995)  time: 3.7369 (4.1770)  data: 0.1362 (0.5576)  lr: 0.000000  max mem: 1317
2020-12-06 21:06:34,147 maskrcnn_benchmark.trainer INFO: eta: 0:49:59  iter: 780  loss: 1.6918 (6.9855)  loss_classifier: 0.6634 (1.3278)  loss_box_reg: 0.4638 (0.5776)  loss_objectness: 0.5322 (2.6369)  loss_rpn_box_reg: 0.0544 (2.4432)  time: 3.7474 (4.1660)  data: 0.1329 (0.5468)  lr: 0.000000  max mem: 1317
2020-12-06 21:07:49,029 maskrcnn_benchmark.trainer INFO: eta: 0:48:28  iter: 800  loss: 1.4637 (6.9475)  loss_classifier: 0.5278 (1.3159)  loss_box_reg: 0.3986 (0.5744)  loss_objectness: 0.4235 (2.5978)  loss_rpn_box_reg: 0.1663 (2.4594)  time: 3.7427 (4.1554)  data: 0.1327 (0.5366)  lr: 0.000000  max mem: 1317
2020-12-06 21:07:49,031 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 21:07:49,080 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 21:08:31,343 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.263115 (1.457348790662042 s / img per device, on 1 devices)
2020-12-06 21:08:31,344 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.585300 (1.3994931188122979 s / img per device, on 1 devices)
2020-12-06 21:08:31,344 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 21:08:33,065 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 21:08:33,066 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.1594, 0.0039, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0038, 0.0002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0041, 0.0000, 0.0000,
        0.0490, 0.0099, 0.0036, 0.0003, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0262, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0796, 0.0393, 0.0036, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0201, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1069, 0.0224, 0.0091, 0.0031, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0239, 0.0032, 0.0009, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0145, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0102, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0004, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0569, 0.0123,
        0.0038, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0193,
        0.0040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0538,
        0.0202, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0188, 0.0000, 0.0000, 0.0056, 0.0000, 0.0000, 0.0039, 0.0037, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,
         8., -1., -1.,  3.,  3.,  6., -1.,  3.,  8., -1., -1., -1., -1., -1.,
        -1.,  3.,  3.,  5.,  6.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  3.,  3.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1.,  3.,  5.,  5.,  6.,  8., -1.,
         8.,  8.,  8., -1., -1., -1.,  8.,  8.,  8.,  3.,  5.,  6.,  8., -1.,
        -1., -1., -1., -1.,  8.,  6.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1., -1., -1., -1.,
        -1.,  3.,  5.,  5.,  6.,  3., -1., -1.,  8.,  8., -1., -1., -1.,  6.,
         8.,  8., -1., -1., -1., -1.,  3.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1., -1.,  3.,  5.,  6.,  8., -1., -1., -1., -1.,
        -1., -1.,  6.,  8.,  8.,  8., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         8., -1., -1., -1., -1., -1., -1., -1., -1.,  3.,  6., -1., -1., -1.,
        -1.,  8.,  3.,  8.,  6.,  8., -1.,  8., -1., -1., -1.,  8., -1.,  6.,
         8., -1., -1., -1., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,
        -1.,  3.,  8., -1.,  8., -1., -1., -1., -1.,  8.,  6.,  8., -1., -1.,
        -1., -1., -1., -1., -1.,  3.,  6.,  8.]), 'best match scores': tensor([1.0000, 1.0000, 1.0000, 0.0724, 1.0000, 1.0000, 1.0000, 1.0000, 0.0559,
        0.9997, 0.9995, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.9998,
        0.4833, 1.0000, 0.0000, 0.9961, 0.9653, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1349, 0.2069, 0.9921, 1.0000, 1.0000, 0.9999, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9995, 1.0000, 1.0000, 1.0000, 0.9984,
        1.0000, 1.0000, 0.9992, 0.0000, 0.0000, 0.0000, 0.0000, 0.3555, 0.4809,
        1.0000, 0.1126, 0.8703, 0.1224, 0.9704, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.8374, 1.0000, 0.9923, 0.0000, 0.2735, 1.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.4415, 0.9999,
        1.0000, 0.9084, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.2993, 1.0000,
        1.0000, 0.9998, 0.9858, 1.0000, 0.1555, 0.9934, 1.0000, 0.9940, 0.7897,
        1.0000, 0.9910, 1.0000, 0.9989, 0.9904, 0.0000, 0.0000, 0.9500, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0874, 1.0000, 1.0000, 1.0000,
        0.9996, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.9300, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9997, 1.0000, 0.9994,
        0.0644, 1.0000, 0.3357, 0.8434, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.6749, 0.8345, 0.9997, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.2573, 1.0000, 1.0000, 0.0000, 1.0000,
        1.0000, 0.9987, 1.0000, 0.9560, 0.9923, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0599, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.9999, 0.0000, 0.0000, 0.0000, 0.0880, 0.0000, 1.0000, 0.6410, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9991, 1.0000,
        0.9996, 0.7374, 1.0000, 0.0000, 0.3614, 0.9985, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9976, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.2174, 1.0000, 0.8989]), 'num_pos': 232}
2020-12-06 21:08:33,098 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.288793
2020-12-06 21:09:47,933 maskrcnn_benchmark.trainer INFO: eta: 0:47:35  iter: 820  loss: 2.5299 (6.9015)  loss_classifier: 0.6431 (1.3101)  loss_box_reg: 0.3928 (0.5742)  loss_objectness: 0.4389 (2.5590)  loss_rpn_box_reg: 0.1128 (2.4582)  time: 3.7396 (4.1991)  data: 0.1331 (0.5806)  lr: 0.000000  max mem: 1317
2020-12-06 21:11:02,716 maskrcnn_benchmark.trainer INFO: eta: 0:46:04  iter: 840  loss: 1.3032 (6.8215)  loss_classifier: 0.4774 (1.2995)  loss_box_reg: 0.3028 (0.5707)  loss_objectness: 0.3555 (2.5156)  loss_rpn_box_reg: 0.0389 (2.4357)  time: 3.7373 (4.1881)  data: 0.1349 (0.5699)  lr: 0.000000  max mem: 1317
2020-12-06 21:12:17,541 maskrcnn_benchmark.trainer INFO: eta: 0:44:33  iter: 860  loss: 1.6730 (6.7430)  loss_classifier: 0.6122 (1.2903)  loss_box_reg: 0.3803 (0.5687)  loss_objectness: 0.3699 (2.4745)  loss_rpn_box_reg: 0.0764 (2.4094)  time: 3.7359 (4.1778)  data: 0.1328 (0.5598)  lr: 0.000000  max mem: 1317
2020-12-06 21:13:32,394 maskrcnn_benchmark.trainer INFO: eta: 0:43:04  iter: 880  loss: 1.2588 (6.6525)  loss_classifier: 0.5187 (1.2878)  loss_box_reg: 0.4513 (0.5678)  loss_objectness: 0.2766 (2.4292)  loss_rpn_box_reg: 0.0272 (2.3677)  time: 3.7412 (4.1679)  data: 0.1371 (0.5502)  lr: 0.000000  max mem: 1317
2020-12-06 21:14:47,210 maskrcnn_benchmark.trainer INFO: eta: 0:41:35  iter: 900  loss: 1.3238 (6.5825)  loss_classifier: 0.5233 (1.2783)  loss_box_reg: 0.3393 (0.5657)  loss_objectness: 0.3055 (2.3914)  loss_rpn_box_reg: 0.0709 (2.3470)  time: 3.7390 (4.1584)  data: 0.1384 (0.5411)  lr: 0.000000  max mem: 1317
2020-12-06 21:14:47,212 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 21:14:47,262 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 21:15:29,542 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.280154 (1.4579363280329212 s / img per device, on 1 devices)
2020-12-06 21:15:29,543 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.621892 (1.4007549121462066 s / img per device, on 1 devices)
2020-12-06 21:15:29,543 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 21:15:31,233 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 21:15:31,234 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([3.7900e-03, 7.8586e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.3767e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 9.8877e-03, 3.6216e-03, 3.2090e-03, 5.2519e-04, 3.6542e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.6990e-02,
        2.0006e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7792e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.7375e-01, 2.5186e-02, 3.2431e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        1.6407e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.3377e-01, 2.0330e-01, 1.0689e-01, 3.2455e-03,
        7.7204e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3535e-03, 7.9046e-04, 5.2223e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.6095e-02, 2.5252e-02, 6.6775e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.2512e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.4447e-02,
        7.1136e-03, 3.2553e-03, 2.0601e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.6094e-01, 2.3055e-02,
        3.7950e-03, 4.9949e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.9698e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02, 3.7184e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1., -1.,  3.,  8.,  8.,  6.,  6.,  6.,  8., -1., -1., -1.,
        -1., -1.,  3.,  6.,  8.,  8., -1.,  3.,  8., -1.,  8., -1., -1., -1.,
        -1., -1., -1.,  5.,  6.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1.,  8., -1., -1., -1.,  3.,  6.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1., -1.,  3.,  5.,  6.,  8., -1.,
        -1.,  8.,  8., -1., -1.,  8.,  8.,  3.,  6.,  8.,  8.,  8.,  8., -1.,
         8., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  5.,  6.,  8.,  8.,  3.,
         8.,  8.,  8.,  8.,  8.,  8.,  2.,  3.,  8., -1., -1., -1., -1., -1.,
         3.,  3.,  5.,  5.,  6., -1., -1., -1.,  3.,  8.,  8.,  3.,  3.,  6.,
         8.,  8.,  8.,  8., -1., -1., -1.,  8.,  6.,  8.,  8., -1.,  6.,  8.,
        -1., -1., -1., -1., -1.,  3.,  5.,  6.,  8.,  8., -1.,  5.,  8.,  6.,
         8.,  8.,  8.,  3.,  8.,  8., -1.,  3.,  3.,  8.,  8.,  8.,  3.,  6.,
         8., -1., -1.,  8., -1., -1., -1.,  3.,  3.,  5.,  6., -1., -1., -1.,
         3.,  3.,  8.,  6.,  8.,  8., -1., -1., -1., -1., -1., -1.,  8.,  8.,
         8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  6., -1., -1.,  3.,
         3.,  3.,  6., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8., -1., -1.,
        -1., -1., -1., -1., -1., -1.,  3.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.0000, 0.9995, 1.0000, 1.0000, 1.0000, 0.0737,
        0.1547, 0.9912, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.8846, 1.0000, 0.0000, 0.7580, 0.8273, 0.0000, 0.5519, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9994, 1.0000, 0.3729, 1.0000, 1.0000,
        1.0000, 0.7511, 1.0000, 1.0000, 1.0000, 0.9948, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0552, 0.9997,
        1.0000, 0.6134, 0.3081, 0.4204, 0.9719, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.2803, 0.9988, 1.0000, 1.0000, 0.0000, 0.0000, 0.9954,
        1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.2288, 1.0000, 0.1964, 0.9989,
        1.0000, 0.9963, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9999,
        1.0000, 0.9997, 0.9241, 0.9998, 1.0000, 0.9643, 1.0000, 0.3989, 0.9882,
        1.0000, 0.4379, 1.0000, 0.9953, 0.9983, 0.4202, 0.1892, 0.9996, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.6636, 1.0000, 1.0000, 1.0000, 0.9961, 1.0000,
        1.0000, 1.0000, 0.9767, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9993,
        0.9466, 0.2841, 0.0000, 0.5366, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.1559, 0.5129, 0.2412, 0.9787, 0.6729, 0.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9981, 0.9921, 0.9652, 1.0000, 0.0000, 0.8314,
        1.0000, 0.9795, 0.4384, 0.9412, 0.9179, 1.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.9984, 0.7562, 0.9899, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0980, 0.9834, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.6779, 0.9999, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.9975, 0.9978, 0.7712, 0.0595, 0.0000, 0.0000, 0.0000,
        0.9997, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9729, 1.0000]), 'num_pos': 232}
2020-12-06 21:15:31,263 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.306034
2020-12-06 21:16:46,050 maskrcnn_benchmark.trainer INFO: eta: 0:40:34  iter: 920  loss: 2.4060 (6.5567)  loss_classifier: 0.6864 (1.2736)  loss_box_reg: 0.4926 (0.5651)  loss_objectness: 0.2760 (2.3599)  loss_rpn_box_reg: 0.1998 (2.3581)  time: 3.7423 (4.1971)  data: 0.1355 (0.5802)  lr: 0.000000  max mem: 1317
2020-12-06 21:18:00,858 maskrcnn_benchmark.trainer INFO: eta: 0:39:04  iter: 940  loss: 1.1323 (6.4966)  loss_classifier: 0.5873 (1.2713)  loss_box_reg: 0.3601 (0.5603)  loss_objectness: 0.2630 (2.3243)  loss_rpn_box_reg: 0.0985 (2.3406)  time: 3.7412 (4.1874)  data: 0.1349 (0.5707)  lr: 0.000000  max mem: 1317
2020-12-06 21:19:15,649 maskrcnn_benchmark.trainer INFO: eta: 0:37:36  iter: 960  loss: 2.1968 (6.4829)  loss_classifier: 0.6951 (1.2690)  loss_box_reg: 0.3848 (0.5575)  loss_objectness: 0.3283 (2.2984)  loss_rpn_box_reg: 0.0994 (2.3580)  time: 3.7390 (4.1781)  data: 0.1306 (0.5616)  lr: 0.000000  max mem: 1317
2020-12-06 21:20:30,554 maskrcnn_benchmark.trainer INFO: eta: 0:36:08  iter: 980  loss: 2.9242 (6.4738)  loss_classifier: 0.6665 (1.2737)  loss_box_reg: 0.6979 (0.5606)  loss_objectness: 0.3444 (2.2748)  loss_rpn_box_reg: 0.1354 (2.3647)  time: 3.7447 (4.1693)  data: 0.1327 (0.5529)  lr: 0.000000  max mem: 1317
2020-12-06 21:21:45,446 maskrcnn_benchmark.trainer INFO: eta: 0:34:40  iter: 1000  loss: 2.3843 (6.4327)  loss_classifier: 0.6864 (1.2734)  loss_box_reg: 0.4174 (0.5591)  loss_objectness: 0.3164 (2.2454)  loss_rpn_box_reg: 0.1378 (2.3548)  time: 3.7462 (4.1608)  data: 0.1279 (0.5445)  lr: 0.000000  max mem: 1317
2020-12-06 21:21:45,448 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 21:21:45,497 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 21:22:27,782 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.284395 (1.458082577277874 s / img per device, on 1 devices)
2020-12-06 21:22:27,782 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.629644 (1.40102219581604 s / img per device, on 1 devices)
2020-12-06 21:22:27,782 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 21:22:29,507 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 21:22:29,507 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([2.9285e-03, 4.3487e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 8.6640e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        1.3252e-01, 3.2592e-03, 1.0824e-03, 3.1363e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.8410e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.1571e-01, 9.1020e-02, 8.6251e-02, 2.3713e-02, 3.6216e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.2576e-02,
        8.2684e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.4683e-01, 1.0969e-01, 3.8685e-02, 2.9737e-03,
        2.9389e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.7113e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3927e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.8798e-03,
        3.2608e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.8863e-02, 3.7950e-03,
        4.9949e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.2455e-02,
        8.6281e-05, 8.4025e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8., -1., -1., -1.,  8., -1., -1.,  6.,  8.,  8.,  8., -1., -1., -1.,
         8., -1.,  3., -1., -1.,  6.,  3.,  8.,  8., -1., -1., -1., -1., -1.,
        -1.,  3.,  5.,  5.,  6., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  6.,  8.,  8.,
        -1., -1.,  8., -1., -1., -1., -1., -1., -1.,  3.,  5.,  6.,  8.,  3.,
         3.,  8.,  8., -1., -1.,  8.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1.,  8.,  6.,  8.,  8.,  8., -1.,  5.,  8.,  8.,  8.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,
        -1.,  3.,  5.,  5.,  6., -1., -1., -1., -1.,  8., -1.,  6.,  8.,  8.,
         8.,  8., -1., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  6.,  8.,  8.,
        -1., -1., -1., -1., -1., -1., -1.,  3.,  5., -1., -1., -1.,  8., -1.,
        -1.,  6.,  8.,  8.,  8.,  8., -1., -1.,  3.,  8.,  6.,  8.,  3.,  8.,
         8., -1., -1.,  8., -1., -1., -1., -1., -1., -1.,  6.,  8.,  8., -1.,
        -1., -1.,  8., -1.,  6.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  8.,
         8., -1., -1., -1., -1., -1., -1., -1.,  5.,  6.,  8.,  8.,  8.,  8.,
        -1.,  3.,  3., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1.,  6.]), 'best match scores': tensor([1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.0989, 0.9887, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 1.0000, 0.9917, 0.2218, 0.9182, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0977, 1.0000, 1.0000, 1.0000, 0.0000, 1.0000, 1.0000,
        0.9946, 1.0000, 1.0000, 1.0000, 1.0000, 0.8151, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9971,
        1.0000, 0.9947, 0.0000, 0.0000, 0.9897, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.1758, 1.0000, 1.0000, 1.0000, 0.0505, 0.7279, 0.0883,
        1.0000, 0.0000, 0.0000, 1.0000, 0.2143, 1.0000, 1.0000, 1.0000, 0.9976,
        0.9630, 0.9972, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0600, 1.0000,
        1.0000, 0.9973, 0.9951, 0.0000, 0.0854, 0.8011, 0.1589, 0.6927, 1.0000,
        1.0000, 0.9489, 0.3181, 0.9977, 0.9999, 0.4753, 0.6443, 0.1396, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9904,
        0.8547, 1.0000, 1.0000, 1.0000, 0.7157, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9859, 0.9980, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.9495, 0.9999, 1.0000, 0.6403, 0.8559, 0.9663, 1.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.8642, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0959, 1.0000, 0.9038, 0.9854, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9973, 1.0000, 0.6237,
        1.0000, 0.8558, 1.0000, 0.0000, 0.9962, 0.9007, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.9999, 0.9999, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000]), 'num_pos': 232}
2020-12-06 21:22:29,540 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.293103
2020-12-06 21:23:44,777 maskrcnn_benchmark.trainer INFO: eta: 0:33:34  iter: 1020  loss: 2.3976 (6.3915)  loss_classifier: 0.7146 (1.2711)  loss_box_reg: 0.3868 (0.5566)  loss_objectness: 0.3154 (2.2193)  loss_rpn_box_reg: 0.2273 (2.3445)  time: 3.7463 (4.1962)  data: 0.1392 (0.5799)  lr: 0.000000  max mem: 1317
2020-12-06 21:24:59,991 maskrcnn_benchmark.trainer INFO: eta: 0:32:06  iter: 1040  loss: 1.4479 (6.3710)  loss_classifier: 0.4939 (1.2760)  loss_box_reg: 0.4723 (0.5570)  loss_objectness: 0.4230 (2.1978)  loss_rpn_box_reg: 0.1630 (2.3402)  time: 3.7544 (4.1878)  data: 0.1394 (0.5714)  lr: 0.000000  max mem: 1317
2020-12-06 21:26:15,648 maskrcnn_benchmark.trainer INFO: eta: 0:30:39  iter: 1060  loss: 3.7981 (6.3995)  loss_classifier: 0.9963 (1.2745)  loss_box_reg: 0.7354 (0.5598)  loss_objectness: 0.9363 (2.1851)  loss_rpn_box_reg: 0.5437 (2.3801)  time: 3.7575 (4.1802)  data: 0.1406 (0.5633)  lr: 0.000000  max mem: 1317
2020-12-06 21:27:32,000 maskrcnn_benchmark.trainer INFO: eta: 0:29:12  iter: 1080  loss: 2.6902 (6.3870)  loss_classifier: 0.9915 (1.2737)  loss_box_reg: 0.6215 (0.5627)  loss_objectness: 0.4405 (2.1649)  loss_rpn_box_reg: 0.3429 (2.3857)  time: 3.8033 (4.1735)  data: 0.1399 (0.5555)  lr: 0.000000  max mem: 1317
2020-12-06 21:28:47,874 maskrcnn_benchmark.trainer INFO: eta: 0:27:46  iter: 1100  loss: 1.3036 (6.3411)  loss_classifier: 0.3989 (1.2663)  loss_box_reg: 0.2320 (0.5583)  loss_objectness: 0.3907 (2.1403)  loss_rpn_box_reg: 0.0545 (2.3763)  time: 3.7581 (4.1665)  data: 0.1401 (0.5479)  lr: 0.000000  max mem: 1317
2020-12-06 21:28:47,876 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 21:28:47,927 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 21:29:30,860 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.932663 (1.4804366539264548 s / img per device, on 1 devices)
2020-12-06 21:29:30,860 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.208375 (1.4209784474866143 s / img per device, on 1 devices)
2020-12-06 21:29:30,860 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 21:29:32,618 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 21:29:32,618 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([6.2207e-02, 3.7784e-03, 5.3072e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7950e-03,
        3.7092e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9806e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        9.8877e-03, 3.6314e-03, 1.4613e-03, 5.4555e-04, 2.9184e-04, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.1854e-01, 9.8594e-02, 3.2468e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.6763e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.1703e-01, 1.9763e-01, 1.5763e-01, 9.3083e-02,
        4.2189e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3927e-02, 9.8877e-03, 3.5469e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.4769e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 8.2545e-02,
        4.6253e-03, 3.8555e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.9949e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02,
        8.6281e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.7185e-03, 3.9626e-04, 3.8740e-04, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.6418e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7416e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  8.,  5.,  8.,  8.,  6.,  8.,  8.,  8., -1., -1., -1.,
         8.,  3.,  3.,  6.,  8.,  8., -1., -1.,  3., -1.,  8., -1., -1., -1.,
        -1.,  3.,  5.,  5.,  6.,  3.,  6.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1., -1., -1.,  6.,  8.,
        -1., -1.,  3., -1., -1.,  8., -1., -1., -1., -1.,  3.,  3.,  6.,  5.,
         6.,  8.,  8., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8.,  6.,  8.,  8.,  8., -1.,  3.,  8.,  8.,  5.,
         3.,  6.,  8.,  8.,  8.,  8., -1.,  2.,  3., -1., -1., -1., -1., -1.,
         3.,  5.,  5.,  6.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1., -1.,  8., -1.,  8.,  8., -1.,  2.,  6.,
        -1., -1., -1., -1., -1., -1., -1., -1.,  8.,  8., -1., -1., -1.,  6.,
         8.,  8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1.,  5.,  3.,  6.,
         8., -1., -1.,  8., -1., -1., -1., -1.,  3.,  5.,  6., -1.,  8., -1.,
        -1.,  3.,  8.,  6.,  8.,  8.,  8.,  8., -1., -1., -1., -1.,  8., -1.,
         3., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8., -1.,  6.,  8.,
        -1., -1.,  6., -1.,  8., -1.,  3.,  3.,  3.,  5.,  6.,  8., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 1.0000, 0.0964, 0.9985, 1.0000, 1.0000, 0.5796,
        0.9666, 1.0000, 0.0000, 0.0000, 0.0000, 0.9999, 0.9762, 0.9903, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.9728, 0.0000, 0.9800, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.9586, 1.0000, 1.0000, 0.9997, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.1403,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9999, 1.0000, 0.0000, 0.0000, 0.0597, 0.0000, 0.0000, 0.9998, 0.0000,
        0.0000, 0.0000, 0.0000, 0.1925, 1.0000, 1.0000, 0.9597, 1.0000, 0.9807,
        0.9907, 0.0000, 1.0000, 1.0000, 0.1206, 1.0000, 1.0000, 0.4054, 0.7531,
        0.9999, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9998, 1.0000,
        0.9934, 1.0000, 0.9757, 0.0000, 0.0565, 1.0000, 0.0615, 1.0000, 0.8402,
        1.0000, 1.0000, 1.0000, 0.3871, 1.0000, 0.0000, 0.9009, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.8736, 1.0000, 0.4568, 1.0000, 0.1264,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9963,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1238, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0771, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9909, 0.0000, 0.0000, 0.0000,
        1.0000, 0.2740, 0.9998, 1.0000, 0.0586, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.7491, 0.4613, 1.0000, 1.0000, 0.0000, 0.0000,
        0.9999, 0.0000, 0.0000, 0.0000, 0.0000, 0.9992, 1.0000, 1.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.9906, 1.0000, 1.0000, 0.1040, 0.9996, 1.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.9991, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.4907, 0.9999, 0.2560,
        0.0000, 1.0000, 0.9891, 0.0000, 0.0000, 1.0000, 0.0000, 0.9178, 0.0000,
        1.0000, 1.0000, 0.0746, 0.9347, 0.9318, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000]), 'num_pos': 232}
2020-12-06 21:29:32,652 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.301724
2020-12-06 21:30:49,183 maskrcnn_benchmark.trainer INFO: eta: 0:26:36  iter: 1120  loss: 2.3471 (6.3039)  loss_classifier: 0.9967 (1.2725)  loss_box_reg: 0.4789 (0.5574)  loss_objectness: 0.3221 (2.1127)  loss_rpn_box_reg: 0.3001 (2.3613)  time: 3.8072 (4.2005)  data: 0.1448 (0.5807)  lr: 0.000000  max mem: 1317
2020-12-06 21:32:06,524 maskrcnn_benchmark.trainer INFO: eta: 0:25:10  iter: 1140  loss: 2.0462 (6.2463)  loss_classifier: 0.7664 (1.2706)  loss_box_reg: 0.3841 (0.5573)  loss_objectness: 0.3302 (2.0843)  loss_rpn_box_reg: 0.1884 (2.3340)  time: 3.8510 (4.1946)  data: 0.1421 (0.5730)  lr: 0.000000  max mem: 1317
2020-12-06 21:33:21,326 maskrcnn_benchmark.trainer INFO: eta: 0:23:43  iter: 1160  loss: 0.7832 (6.1782)  loss_classifier: 0.3952 (1.2632)  loss_box_reg: 0.2847 (0.5550)  loss_objectness: 0.2579 (2.0554)  loss_rpn_box_reg: 0.0627 (2.3046)  time: 3.7389 (4.1868)  data: 0.1389 (0.5655)  lr: 0.000000  max mem: 1317
2020-12-06 21:34:36,573 maskrcnn_benchmark.trainer INFO: eta: 0:22:17  iter: 1180  loss: 1.8987 (6.1273)  loss_classifier: 0.9826 (1.2660)  loss_box_reg: 0.3951 (0.5544)  loss_objectness: 0.2870 (2.0288)  loss_rpn_box_reg: 0.1196 (2.2781)  time: 3.7492 (4.1796)  data: 0.1362 (0.5584)  lr: 0.000000  max mem: 1317
2020-12-06 21:35:52,070 maskrcnn_benchmark.trainer INFO: eta: 0:20:51  iter: 1200  loss: 2.3626 (6.0992)  loss_classifier: 0.5653 (1.2686)  loss_box_reg: 0.3421 (0.5531)  loss_objectness: 0.2707 (2.0078)  loss_rpn_box_reg: 0.1241 (2.2698)  time: 3.7532 (4.1728)  data: 0.1410 (0.5515)  lr: 0.000000  max mem: 1317
2020-12-06 21:35:52,072 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 21:35:52,124 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 21:36:34,660 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.536138 (1.4667633895216317 s / img per device, on 1 devices)
2020-12-06 21:36:34,660 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.834545 (1.4080877550717057 s / img per device, on 1 devices)
2020-12-06 21:36:34,660 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 21:36:36,380 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 21:36:36,380 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([3.7784e-03, 6.5281e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0857e-02,
        3.7950e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.7849e-02, 0.0000e+00, 0.0000e+00,
        2.6365e-02, 2.3823e-02, 9.8877e-03, 3.6216e-03, 2.5136e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.5415e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2744e-02, 0.0000e+00, 0.0000e+00,
        1.0741e-01, 3.6216e-03, 7.3514e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.8476e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.3062e-01, 9.2395e-02, 6.8432e-02, 3.0755e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        3.6216e-03, 1.0259e-03, 4.5544e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3579e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0450e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 3.2367e-02, 5.1286e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.9699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.5302e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        9.8650e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        3.7184e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1., -1.,  3.,  8.,  8.,  6.,  8.,  8.,  8., -1., -1., -1.,
         8., -1.,  8., -1.,  3.,  6., -1.,  3.,  3., -1.,  8., -1., -1., -1.,
         3.,  5.,  5.,  6.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,  8.,
         6.,  8.,  8., -1., -1., -1., -1., -1., -1.,  3.,  5.,  6.,  8.,  8.,
         8.,  8.,  8.,  6.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  3., -1., -1.,  8.,  8., -1.,
         5.,  5.,  6.,  8.,  8.,  8., -1., -1., -1., -1., -1., -1.,  3.,  5.,
         6.,  8.,  3.,  5.,  6.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8.,  8.,  8.,  8.,  3.,  6.,  8., -1., -1., -1.,
        -1.,  3.,  3.,  6.,  8.,  8.,  8.,  2.,  5.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8., -1., -1., -1.,  3.,  5.,  8.,  3.,  6.,  8., -1., -1.,
        -1., -1., -1., -1., -1., -1.,  5.,  6., -1., -1., -1., -1.,  8., -1.,
         3.,  6.,  8., -1., -1.,  3.,  3.,  3.,  3.,  6.,  8.,  8., -1., -1.,
         8., -1., -1., -1., -1.,  6.,  8.,  8., -1.,  6.,  8., -1., -1.,  6.,
        -1., -1., -1., -1.,  3.,  3.,  8.,  6.,  8., -1., -1., -1., -1., -1.,
        -1., -1.,  3.,  6.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9628, 0.0000, 1.0000, 0.0000,
        0.9551, 1.0000, 0.0000, 0.7188, 0.9760, 0.0000, 0.9996, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 0.2008, 1.0000, 0.6379, 0.8958, 0.6761, 0.9996,
        1.0000, 0.6269, 1.0000, 1.0000, 0.3501, 0.9998, 1.0000, 0.9960, 0.8266,
        0.3519, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.4697, 0.9999, 0.1565, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.2509, 1.0000, 0.9804, 0.7398, 0.3098, 1.0000, 0.9833,
        0.3483, 1.0000, 1.0000, 0.9962, 1.0000, 1.0000, 1.0000, 0.9994, 0.9999,
        0.9980, 0.9099, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9998,
        1.0000, 1.0000, 0.9574, 0.0000, 0.0000, 0.9992, 1.0000, 0.0000, 1.0000,
        0.9999, 1.0000, 1.0000, 1.0000, 0.9385, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000,
        0.9840, 0.6387, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9727, 1.0000, 1.0000, 1.0000, 0.7173,
        1.0000, 0.2100, 0.0000, 0.0000, 0.0000, 0.0000, 0.4797, 0.9370, 0.9986,
        0.8945, 1.0000, 0.8579, 0.1191, 1.0000, 1.0000, 1.0000, 0.6468, 1.0000,
        1.0000, 0.8356, 1.0000, 0.8166, 0.0000, 0.0000, 0.0000, 0.9999, 0.8269,
        1.0000, 0.2098, 0.9988, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9250, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.0000, 0.3787, 0.9910, 1.0000, 0.0000, 0.0000, 0.3132, 0.0769,
        0.7703, 0.7415, 0.5458, 0.6868, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.2150, 0.0000, 1.0000, 1.0000,
        0.0000, 0.0000, 0.1636, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        0.9999, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 1.0000, 1.0000]), 'num_pos': 229}
2020-12-06 21:36:36,409 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.301310
2020-12-06 21:37:52,749 maskrcnn_benchmark.trainer INFO: eta: 0:19:36  iter: 1220  loss: 2.8159 (6.0917)  loss_classifier: 0.6433 (1.2654)  loss_box_reg: 0.6281 (0.5563)  loss_objectness: 0.4405 (1.9928)  loss_rpn_box_reg: 0.3877 (2.2771)  time: 3.7699 (4.2033)  data: 0.1407 (0.5811)  lr: 0.000000  max mem: 1317
2020-12-06 21:39:08,039 maskrcnn_benchmark.trainer INFO: eta: 0:18:11  iter: 1240  loss: 2.8873 (6.0726)  loss_classifier: 0.6778 (1.2618)  loss_box_reg: 0.3727 (0.5552)  loss_objectness: 0.2887 (1.9756)  loss_rpn_box_reg: 0.3742 (2.2800)  time: 3.7491 (4.1963)  data: 0.1391 (0.5740)  lr: 0.000000  max mem: 1317
2020-12-06 21:40:23,353 maskrcnn_benchmark.trainer INFO: eta: 0:16:45  iter: 1260  loss: 1.1603 (6.0358)  loss_classifier: 0.5723 (1.2547)  loss_box_reg: 0.3853 (0.5546)  loss_objectness: 0.2497 (1.9556)  loss_rpn_box_reg: 0.0797 (2.2709)  time: 3.7473 (4.1894)  data: 0.1395 (0.5671)  lr: 0.000000  max mem: 1317
2020-12-06 21:41:38,360 maskrcnn_benchmark.trainer INFO: eta: 0:15:20  iter: 1280  loss: 3.1185 (6.0234)  loss_classifier: 1.0888 (1.2593)  loss_box_reg: 0.4911 (0.5546)  loss_objectness: 0.4655 (1.9381)  loss_rpn_box_reg: 0.3144 (2.2714)  time: 3.7502 (4.1826)  data: 0.1343 (0.5604)  lr: 0.000000  max mem: 1317
2020-12-06 21:42:54,329 maskrcnn_benchmark.trainer INFO: eta: 0:13:55  iter: 1300  loss: 1.6192 (5.9745)  loss_classifier: 0.8815 (1.2616)  loss_box_reg: 0.4081 (0.5540)  loss_objectness: 0.2562 (1.9144)  loss_rpn_box_reg: 0.0748 (2.2445)  time: 3.7613 (4.1767)  data: 0.1432 (0.5540)  lr: 0.000000  max mem: 1317
2020-12-06 21:42:54,331 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 21:42:54,386 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 21:43:37,191 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.805351 (1.4760465786374848 s / img per device, on 1 devices)
2020-12-06 21:43:37,192 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.082652 (1.4166431591428559 s / img per device, on 1 devices)
2020-12-06 21:43:37,192 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 21:43:38,955 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 21:43:38,955 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([3.3453e-03, 2.0205e-04, 1.2545e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7950e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0129e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.9467e-03, 0.0000e+00, 0.0000e+00,
        4.7848e-02, 2.6365e-02, 9.8877e-03, 3.3365e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.6656e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.2238e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3278e-02, 0.0000e+00, 0.0000e+00,
        1.0795e-01, 8.0328e-02, 2.3713e-02, 3.2530e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.2768e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.1724e-01, 1.0689e-01, 7.6249e-02, 8.8036e-03,
        3.0755e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.6216e-03, 5.4970e-04, 7.8908e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0977e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9960e-02,
        3.8555e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.5781e-02, 3.7950e-03,
        4.9949e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9699e-03,
        8.5236e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8650e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.0606e-02, 3.7184e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1.,  3.,  3.,  8.,  8.,  6.,  8.,  8.,  8., -1., -1., -1.,
         8., -1., -1., -1., -1.,  6., -1.,  8.,  8., -1., -1., -1., -1., -1.,
        -1., -1., -1.,  5.,  6.,  2.,  3.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1.,  6.,  8.,
         6.,  8.,  3., -1., -1., -1., -1., -1.,  3.,  3.,  5.,  6.,  8.,  6.,
         8.,  8.,  8., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8., -1.,  6.,  8.,  8.,  5.,  5.,  8.,  6.,  8.,
         8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1., -1.,  3.,  5.,  6., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8., -1., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  6.,  8.,  8.,
        -1., -1., -1., -1.,  8.,  3.,  6.,  8.,  8.,  8.,  2.,  3.,  5.,  6.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1.,  8., -1.,  8.,  3., -1.,
         6., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  6., -1.,  8., -1.,
        -1.,  8., -1.,  3.,  6.,  8., -1., -1., -1., -1., -1.,  3.,  3.,  8.,
         8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  6.,  5.,  6.,  8.,
        -1., -1.,  6., -1., -1.,  3.,  3.,  6.,  8.,  8.,  8.,  8., -1., -1.,
        -1., -1., -1.,  3.,  3.,  3.,  6.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.9985, 0.9177, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.9997, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.1120, 0.9876, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.9989, 1.0000, 0.9999,
        0.9988, 1.0000, 1.0000, 1.0000, 0.9806, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9981, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.9937, 0.9982, 1.0000, 0.8670, 0.9960, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.1885, 0.0815, 1.0000, 1.0000, 0.8046, 1.0000, 1.0000, 1.0000,
        0.1416, 0.0000, 1.0000, 1.0000, 1.0000, 0.9977, 1.0000, 1.0000, 0.9942,
        0.9969, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 1.0000, 0.9997, 1.0000, 0.6898, 0.9677, 1.0000, 1.0000, 0.6885,
        0.3110, 0.0572, 0.7686, 0.9670, 0.9912, 0.9250, 0.9422, 0.7504, 0.0000,
        0.0000, 0.9984, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9995, 1.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.1752,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1227,
        0.9808, 0.8773, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 0.6612, 0.9845, 0.3388, 1.0000, 0.4027, 0.7988, 1.0000, 1.0000,
        1.0000, 0.9423, 1.0000, 1.0000, 0.9944, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 1.0000, 0.9998, 0.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        1.0000, 0.0000, 0.0000, 0.5293, 0.0000, 0.0541, 0.9999, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.5027, 0.1393, 0.9886, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.9250, 1.0000, 1.0000, 0.0000, 0.0000, 0.0739, 0.0000, 0.0000, 0.9936,
        0.8912, 0.2216, 0.9926, 0.2799, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9377, 0.9904, 0.9744, 1.0000, 0.9983]), 'num_pos': 232}
2020-12-06 21:43:38,988 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.280172
2020-12-06 21:44:56,858 maskrcnn_benchmark.trainer INFO: eta: 0:12:37  iter: 1320  loss: 1.3808 (5.9460)  loss_classifier: 0.6307 (1.2626)  loss_box_reg: 0.3873 (0.5525)  loss_objectness: 0.2629 (1.8953)  loss_rpn_box_reg: 0.0881 (2.2356)  time: 3.8918 (4.2062)  data: 0.1451 (0.5816)  lr: 0.000000  max mem: 1317
2020-12-06 21:46:11,939 maskrcnn_benchmark.trainer INFO: eta: 0:11:11  iter: 1340  loss: 2.3794 (5.9127)  loss_classifier: 0.6197 (1.2614)  loss_box_reg: 0.6348 (0.5544)  loss_objectness: 0.2749 (1.8760)  loss_rpn_box_reg: 0.1136 (2.2210)  time: 3.7520 (4.1995)  data: 0.1385 (0.5751)  lr: 0.000000  max mem: 1317
2020-12-06 21:47:26,939 maskrcnn_benchmark.trainer INFO: eta: 0:09:46  iter: 1360  loss: 2.4231 (5.8987)  loss_classifier: 0.9103 (1.2570)  loss_box_reg: 0.4407 (0.5554)  loss_objectness: 0.2149 (1.8611)  loss_rpn_box_reg: 0.2362 (2.2252)  time: 3.7500 (4.1928)  data: 0.1386 (0.5687)  lr: 0.000000  max mem: 1317
2020-12-06 21:48:42,329 maskrcnn_benchmark.trainer INFO: eta: 0:08:22  iter: 1380  loss: 1.1894 (5.8549)  loss_classifier: 0.5929 (1.2515)  loss_box_reg: 0.3222 (0.5538)  loss_objectness: 0.2320 (1.8409)  loss_rpn_box_reg: 0.0689 (2.2087)  time: 3.7484 (4.1867)  data: 0.1401 (0.5624)  lr: 0.000000  max mem: 1317
2020-12-06 21:49:58,080 maskrcnn_benchmark.trainer INFO: eta: 0:06:58  iter: 1400  loss: 2.3768 (5.8693)  loss_classifier: 0.8252 (1.2482)  loss_box_reg: 0.5629 (0.5535)  loss_objectness: 0.3106 (1.8327)  loss_rpn_box_reg: 0.1121 (2.2350)  time: 3.7818 (4.1810)  data: 0.1408 (0.5565)  lr: 0.000000  max mem: 1317
2020-12-06 21:49:58,082 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 21:49:58,134 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 21:50:40,964 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.829813 (1.4768901035703461 s / img per device, on 1 devices)
2020-12-06 21:50:40,964 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:41.098656 (1.417195048825494 s / img per device, on 1 devices)
2020-12-06 21:50:40,964 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 21:50:42,737 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 21:50:42,738 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([3.2072e-02, 9.6870e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7950e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        4.0926e-02, 9.8877e-03, 3.2395e-03, 1.1774e-03, 2.3675e-04, 2.2449e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.0517e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.8139e-03, 0.0000e+00, 0.0000e+00, 2.2568e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.2783e-03, 0.0000e+00, 0.0000e+00,
        9.0245e-02, 4.2939e-02, 3.6216e-03, 3.2035e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.3848e-01, 1.0689e-01, 1.7264e-02, 3.0947e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.8877e-03, 3.6692e-03, 3.2478e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3258e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.2631e-02,
        6.2157e-03, 2.3670e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.5389e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6481e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1067e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.7455e-03, 3.7126e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([-1., -1., -1., -1.,  3.,  8.,  8.,  6.,  8.,  8.,  8., -1., -1., -1.,
         8., -1., -1., -1., -1.,  6.,  3.,  6.,  8., -1., -1., -1., -1., -1.,
        -1., -1.,  3.,  5.,  6.,  8.,  8.,  8.,  3., -1.,  6.,  3.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1.,  8., -1.,  6.,  8.,
         3.,  6.,  8., -1., -1.,  8., -1., -1., -1., -1., -1.,  3.,  6.,  6.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,
        -1., -1., -1., -1., -1., -1.,  6.,  8.,  8., -1., -1.,  8., -1.,  8.,
        -1.,  3.,  5.,  6.,  8.,  8., -1.,  8.,  8., -1., -1.,  8., -1., -1.,
        -1.,  3.,  3.,  6.,  8., -1.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1., -1.,  8., -1., -1.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  6.,  8.,  8.,  2.,
         8.,  8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,
         5., -1., -1., -1., -1., -1., -1., -1., -1.,  5.,  6., -1., -1., -1.,
        -1., -1., -1., -1.,  6.,  8., -1., -1., -1., -1., -1.,  8.,  8.,  8.,
         8., -1., -1.,  8., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,
        -1.,  3.,  8., -1.,  8., -1., -1., -1.,  3.,  8.,  6.,  8., -1., -1.,
         8., -1., -1., -1.,  3.,  5.,  5.,  6.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9884, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.8867, 1.0000, 0.5456, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.8449, 0.7967,
        0.9976, 0.0000, 1.0000, 1.0000, 1.0000, 0.9594, 0.7362, 1.0000, 0.6519,
        0.8710, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000,
        0.9473, 1.0000, 0.9983, 1.0000, 0.5848, 0.0000, 0.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0724, 1.0000, 1.0000, 0.8347, 1.0000,
        0.6799, 0.7188, 1.0000, 1.0000, 0.0814, 1.0000, 1.0000, 0.9982, 0.9990,
        0.9998, 0.9756, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.9842, 0.0000, 0.0000, 0.9586, 0.0000, 1.0000, 0.0000,
        0.4481, 1.0000, 1.0000, 0.4238, 0.5432, 0.0000, 0.5360, 1.0000, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.6259, 1.0000, 0.3734,
        0.0000, 0.4834, 0.6601, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9778, 0.0000,
        0.0000, 1.0000, 0.6794, 1.0000, 0.9804, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.9572, 0.8108, 1.0000, 0.9824, 1.0000, 1.0000, 0.9416,
        0.4467, 0.9653, 1.0000, 0.4518, 0.9882, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9783, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0567, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9995, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.3835, 0.9622, 0.0000,
        0.0000, 0.5098, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.1095,
        1.0000, 1.0000, 1.0000, 0.0000, 0.9874, 0.1823, 0.0000, 0.9999, 0.0000,
        0.0000, 0.0000, 0.5844, 0.9568, 1.0000, 0.9990, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 1.0000, 0.0683, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 21:50:42,771 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.250000
2020-12-06 21:51:58,447 maskrcnn_benchmark.trainer INFO: eta: 0:05:36  iter: 1420  loss: 1.7409 (5.8350)  loss_classifier: 0.4072 (1.2442)  loss_box_reg: 0.5225 (0.5524)  loss_objectness: 0.2673 (1.8154)  loss_rpn_box_reg: 0.1065 (2.2231)  time: 3.7567 (4.2069)  data: 0.1363 (0.5820)  lr: 0.000000  max mem: 1317
2020-12-06 21:53:13,631 maskrcnn_benchmark.trainer INFO: eta: 0:04:12  iter: 1440  loss: 1.8222 (5.8061)  loss_classifier: 0.6372 (1.2396)  loss_box_reg: 0.3564 (0.5506)  loss_objectness: 0.2498 (1.7997)  loss_rpn_box_reg: 0.1175 (2.2161)  time: 3.7555 (4.2007)  data: 0.1376 (0.5759)  lr: 0.000000  max mem: 1317
2020-12-06 21:54:28,668 maskrcnn_benchmark.trainer INFO: eta: 0:02:47  iter: 1460  loss: 2.6680 (5.8219)  loss_classifier: 0.6133 (1.2353)  loss_box_reg: 0.4894 (0.5506)  loss_objectness: 0.2990 (1.7935)  loss_rpn_box_reg: 0.3637 (2.2425)  time: 3.7517 (4.1945)  data: 0.1381 (0.5699)  lr: 0.000000  max mem: 1317
2020-12-06 21:55:44,078 maskrcnn_benchmark.trainer INFO: eta: 0:01:23  iter: 1480  loss: 3.9498 (5.8300)  loss_classifier: 1.2938 (1.2373)  loss_box_reg: 0.4896 (0.5504)  loss_objectness: 0.3690 (1.7837)  loss_rpn_box_reg: 0.3201 (2.2586)  time: 3.7560 (4.1888)  data: 0.1426 (0.5641)  lr: 0.000000  max mem: 1317
2020-12-06 21:56:59,457 maskrcnn_benchmark.trainer INFO: eta: 0:00:00  iter: 1500  loss: 2.0412 (5.8321)  loss_classifier: 0.4482 (1.2347)  loss_box_reg: 0.4476 (0.5494)  loss_objectness: 0.4840 (1.7753)  loss_rpn_box_reg: 0.1538 (2.2727)  time: 3.7530 (4.1832)  data: 0.1402 (0.5586)  lr: 0.000000  max mem: 1317
2020-12-06 21:56:59,459 maskrcnn_benchmark.trainer INFO: validation circle
2020-12-06 21:56:59,511 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_valid dataset(29 images).
2020-12-06 21:57:41,960 maskrcnn_benchmark.inference INFO: Total run time: 0:00:42.448835 (1.4637529356726284 s / img per device, on 1 devices)
2020-12-06 21:57:41,960 maskrcnn_benchmark.inference INFO: Model inference time: 0:00:40.723915 (1.4042729180434654 s / img per device, on 1 devices)
2020-12-06 21:57:41,960 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 21:57:43,779 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 21:57:43,780 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([3.9408e-03, 3.1915e-03, 6.2369e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7950e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.6068e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        9.5937e-02, 6.6607e-02, 2.3823e-02, 9.8877e-03, 3.6216e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0703e-03, 0.0000e+00, 0.0000e+00,
        6.8844e-02, 1.0059e-02, 3.6301e-03, 6.0592e-05, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.6365e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.0689e-01, 3.2440e-03, 3.7480e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.4292e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3055e-02, 9.8877e-03, 3.6260e-03,
        7.1949e-04, 2.1530e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3258e-03,
        0.0000e+00, 0.0000e+00, 2.0677e-02, 1.9386e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.2739e-03,
        4.3621e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7950e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.2842e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.6418e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7184e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6481e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8,
        8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8]), 'best match labels': tensor([ 8., -1., -1., -1., -1.,  3.,  8., -1.,  3.,  6.,  8., -1., -1., -1.,
         8., -1., -1.,  3.,  3.,  6.,  5.,  6.,  8., -1., -1., -1., -1., -1.,
        -1., -1., -1.,  5.,  6., -1.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  3.,  8.,  8., -1., -1., -1., -1., -1., -1.,  6.,  8.,  8.,
        -1., -1.,  6., -1., -1., -1., -1., -1., -1.,  5.,  6.,  8.,  8., -1.,
         6.,  8.,  5.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,
        -1., -1., -1., -1.,  8., -1.,  6.,  8.,  8., -1., -1.,  8., -1., -1.,
         3.,  6.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1., -1., -1.,  8., -1.,
        -1., -1.,  3.,  6.,  8.,  3.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,  3.,
         8.,  8., -1., -1., -1., -1., -1.,  8.,  6.,  8.,  8.,  6.,  8.,  8.,
         8., -1., -1., -1., -1.,  8.,  3.,  6.,  8., -1., -1.,  2.,  8.,  8.,
         5.,  5.,  6.,  8.,  8.,  8., -1., -1., -1.,  8., -1., -1., -1., -1.,
         6., -1., -1., -1., -1., -1., -1.,  3.,  5.,  5.,  6., -1., -1., -1.,
         3.,  3.,  3.,  6.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  3.,  6.,
         8., -1., -1., -1., -1., -1., -1., -1., -1., -1.,  6.,  6.,  8.,  8.,
        -1.,  2.,  8., -1., -1., -1., -1., -1., -1.,  8.,  6.,  8., -1., -1.,
         3., -1., -1., -1., -1., -1.,  6.,  8.]), 'best match scores': tensor([1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9435, 0.0000, 0.1176,
        1.0000, 0.0515, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.9924,
        0.2725, 1.0000, 0.9635, 1.0000, 0.3684, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.3321, 1.0000, 0.0000, 0.9954, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 0.9981, 0.5627,
        0.9828, 0.0710, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.2792,
        1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.5535, 1.0000, 0.4025, 1.0000, 0.0000, 1.0000, 1.0000,
        0.9168, 1.0000, 1.0000, 0.1503, 1.0000, 1.0000, 1.0000, 1.0000, 0.4806,
        0.9983, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9999, 0.0000,
        0.9772, 1.0000, 1.0000, 0.0000, 0.0000, 0.1193, 0.0000, 0.0000, 0.9994,
        1.0000, 0.3347, 1.0000, 0.9719, 0.5315, 0.4850, 0.4213, 0.9492, 0.0000,
        0.0000, 0.0000, 0.6202, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0817,
        0.2696, 0.9298, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9481,
        1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9993, 0.8121,
        0.9869, 0.9995, 1.0000, 0.2448, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9996, 0.9971, 0.9702, 1.0000, 0.0000, 0.0000, 0.9989, 1.0000,
        0.9999, 0.3120, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.2928, 0.0000, 0.0000, 0.0000, 0.0000, 0.2735, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.9847, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.0000, 0.0923, 0.4126, 0.2256, 1.0000, 0.7744, 0.9979, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.4346, 0.0708, 0.9992, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        1.0000, 1.0000, 0.9991, 0.0000, 1.0000, 0.9972, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9999, 0.9682, 1.0000, 0.0000, 0.0000, 0.8721,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000]), 'num_pos': 232}
2020-12-06 21:57:43,813 maskrcnn_benchmark.trainer INFO: validation accuracy: 0.250000
2020-12-06 21:57:43,818 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to ./final_mode_r1.pth
2020-12-06 21:57:44,378 maskrcnn_benchmark.trainer INFO: final model, saving model to: final_mode_r1
2020-12-06 21:57:44,394 maskrcnn_benchmark.trainer INFO: Total training time: 1:45:19.722467 (4.2131 s / it)
2020-12-06 21:57:46,695 maskrcnn_benchmark.inference INFO: Start evaluation on giro1_test dataset(140 images).
2020-12-06 22:01:15,512 maskrcnn_benchmark.inference INFO: Total run time: 0:03:28.816585 (1.4915470327649798 s / img per device, on 1 devices)
2020-12-06 22:01:15,513 maskrcnn_benchmark.inference INFO: Model inference time: 0:03:18.511267 (1.4179376193455286 s / img per device, on 1 devices)
2020-12-06 22:01:15,529 maskrcnn_benchmark.inference INFO: Evaluating bbox proposals
2020-12-06 22:01:23,743 maskrcnn_benchmark.inference INFO: box sizes: all
2020-12-06 22:01:23,744 maskrcnn_benchmark.inference INFO: {'ar': tensor(0.), 'recalls': tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'thresholds': tensor([0.5000, 0.5500, 0.6000, 0.6500, 0.7000, 0.7500, 0.8000, 0.8500, 0.9000,
        0.9500]), 'gt_overlaps': tensor([0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6550e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.6809e-03,
        0.0000e+00, 0.0000e+00, 2.3272e-02, 3.4381e-03, 1.8315e-05, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.1080e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 8.2945e-03, 0.0000e+00,
        0.0000e+00, 4.9812e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.6837e-02, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        3.5837e-03, 0.0000e+00, 0.0000e+00, 4.4894e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0390e-02,
        0.0000e+00, 0.0000e+00, 3.5697e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.8308e-01, 4.8540e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0342e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        3.6458e-03, 0.0000e+00, 0.0000e+00, 2.4334e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.6493e-02, 0.0000e+00, 0.0000e+00, 3.4320e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.3515e-03,
        1.9574e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3243e-02, 0.0000e+00,
        0.0000e+00, 5.4677e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 6.2528e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.5697e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.2219e-03,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 8.4387e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.8032e-02,
        2.8699e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.3954e-03, 2.8466e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.1080e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.3102e-02,
        0.0000e+00, 0.0000e+00, 2.6297e-03, 0.0000e+00, 0.0000e+00, 1.4229e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.2100e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4286e-03, 0.0000e+00, 0.0000e+00,
        5.3162e-02, 5.4467e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        8.5369e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0759e-01,
        0.0000e+00, 0.0000e+00, 3.5818e-03, 0.0000e+00, 0.0000e+00, 1.0258e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.9038e-03,
        0.0000e+00, 0.0000e+00, 5.4597e-03, 0.0000e+00, 0.0000e+00, 1.7511e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.1173e-02, 3.0950e-03,
        0.0000e+00, 0.0000e+00, 1.9348e-02, 0.0000e+00, 0.0000e+00, 6.4246e-03,
        0.0000e+00, 0.0000e+00, 1.5168e-01, 8.7525e-02, 1.3541e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.8870e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.3459e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 7.7735e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.0818e-02, 2.6779e-02, 3.8189e-03, 3.3301e-03,
        1.6582e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 8.4830e-02, 7.2232e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.6157e-03, 0.0000e+00, 0.0000e+00, 3.5739e-03, 0.0000e+00, 0.0000e+00,
        3.6216e-03, 3.3184e-03, 3.2969e-03, 1.2286e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.9253e-02,
        4.0851e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3370e-01, 1.9273e-01, 3.1837e-03,
        6.9078e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        4.0342e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.2605e-03, 0.0000e+00,
        0.0000e+00, 5.4051e-03, 0.0000e+00, 0.0000e+00, 3.2647e-03, 1.5552e-05,
        1.1804e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.0385e-02, 4.7660e-02, 2.0676e-02,
        3.2062e-03, 3.1974e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.9854e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.4334e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.7267e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.5052e-01, 5.5635e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.5397e-02, 0.0000e+00, 0.0000e+00,
        2.4334e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.1923e-03,
        0.0000e+00, 0.0000e+00, 2.6477e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.3417e-03,
        3.2060e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0303e-03, 6.3546e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 3.4128e-03, 4.0319e-05, 1.4353e-08, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0106e-03,
        3.1935e-03, 5.0822e-04, 4.3736e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.8149e-03, 0.0000e+00,
        0.0000e+00, 3.5234e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.4741e-02,
        4.0106e-03, 3.7642e-03, 6.1683e-05, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1479e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.9273e-01, 5.8710e-02, 3.1663e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        3.2074e-02, 0.0000e+00, 0.0000e+00, 1.2234e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        8.0097e-07, 1.1294e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.4850e-02,
        3.2539e-03, 4.6971e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.8948e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.1080e-01, 3.2887e-05, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.9838e-02, 3.0044e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.6080e-02, 3.3411e-03, 2.0425e-04, 4.0319e-05,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.1479e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.1080e-01, 2.2169e-04, 0.0000e+00, 0.0000e+00, 4.4881e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.0192e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 3.9850e-02, 2.3742e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0677e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 3.6216e-03, 1.0551e-04, 5.4733e-06, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.6732e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00]), 'gt_labels': tensor([7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 8, 7, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 5, 5, 7, 7, 4, 7, 7, 4, 7, 7, 7, 7, 4, 7, 7, 4,
        7, 7, 4, 7, 7, 8, 8, 8, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 8, 8,
        8, 7, 7, 4, 7, 7, 8, 8, 7, 7, 5, 5, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 8, 8, 8, 8, 8,
        8, 5, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 5, 5, 7, 7, 4, 7, 7, 8, 7,
        7, 5, 5, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 7, 7, 7,
        7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 4, 7, 7, 7, 7,
        8, 8, 7, 7, 4, 7, 7, 4, 7, 7, 8, 8, 8, 8, 5, 7, 7, 4, 7, 7, 4, 8, 7, 7,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 4, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8,
        7, 7, 8, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 7, 7, 4,
        7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 7, 7, 8, 8, 7, 7,
        4, 7, 7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8,
        8, 8, 7, 7, 4, 7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 5, 5, 7, 7, 8, 8, 8, 8,
        7, 7, 4, 7, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 4, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8,
        5, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7,
        4, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 5, 7, 7, 4, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 5, 8, 7, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 7, 7, 8, 8, 7, 7, 5, 5, 7, 7, 4, 7, 7, 8, 8, 8, 8, 8, 5, 7,
        7, 4, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 7, 7, 5, 5, 7, 7, 5, 5, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8]), 'best match labels': tensor([-1., -1., -1., -1., -1., -1.,  3.,  3.,  6.,  8., -1., -1., -1., -1.,
        -1., -1., -1.,  3.,  5.,  6., -1., -1., -1., -1., -1., -1., -1.,  6.,
         8.,  8., -1., -1., -1.,  3.,  5.,  5.,  6.,  8., -1., -1., -1., -1.,
        -1.,  3.,  3.,  6.,  8., -1., -1., -1., -1., -1.,  3.,  3.,  6.,  8.,
        -1., -1., -1., -1., -1., -1., -1.,  6.,  8.,  6.,  8.,  8.,  8., -1.,
        -1., -1.,  8.,  8., -1.,  5.,  6.,  8.,  3.,  6.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  6.,  8.,
         8., -1., -1., -1.,  8.,  6.,  6.,  8.,  8.,  2.,  6.,  8.,  5.,  8.,
         8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  5.,  8.,  8., -1., -1.,
         6.,  8., -1., -1.,  6.,  8.,  6.,  8.,  8.,  8., -1., -1.,  3.,  6.,
         8.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8., -1.,
         3.,  6., -1.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  8., -1., -1., -1.,
        -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  3.,  3.,  6., -1.,  3.,  6.,
         8.,  8.,  8.,  8.,  8.,  3.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
        -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8., -1., -1.,  8.,  6.,  8.,
         8.,  8., -1., -1., -1., -1., -1.,  3.,  6.,  8.,  8.,  8.,  8.,  8.,
         3.,  6.,  8.,  8.,  8.,  8.,  3.,  6.,  8., -1.,  3.,  3.,  8.,  3.,
         5.,  5.,  5.,  8., -1., -1.,  3., -1., -1.,  8., -1., -1.,  3.,  3.,
         6.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1.,  6.,  8.,  6.,  8.,  8.,
         8.,  6.,  8.,  8., -1., -1., -1., -1., -1., -1., -1., -1.,  8., -1.,
        -1., -1., -1., -1.,  6.,  8.,  8.,  8., -1., -1.,  6., -1.,  6.,  8.,
         8.,  3.,  3.,  3.,  3.,  3.,  6.,  8.,  8.,  3.,  5.,  6.,  6.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1.,  8.,  3.,  8.,  8.,  5.,  8.,
         8.,  5.,  8.,  8.,  6.,  8.,  8., -1.,  6.,  8.,  8.,  8., -1.,  6.,
         8.,  8.,  5.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,
         8.,  3.,  8.,  8.,  3.,  3.,  6., -1., -1., -1.,  2.,  2.,  8.,  2.,
         2.,  6.,  8.,  8.,  8.,  8.,  8.,  6.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  3.,  8.,  8.,  8., -1., -1., -1., -1., -1., -1.,  6.,
         8.,  8., -1., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8., -1.,  3.,  8., -1.,  3.,  5.,  8.,  6.,  3.,
         8.,  8.,  3.,  8.,  8., -1.,  6.,  8.,  8.,  6.,  8.,  8., -1., -1.,
         6.,  3., -1., -1.,  2.,  3.,  8.,  8.,  3.,  5.,  5.,  8.,  8.,  3.,
         6.,  8., -1.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., -1., -1.,
        -1.,  8.,  8.,  3.,  6.,  8.,  3.,  8.,  8.,  8., -1., -1.,  8., -1.,
         8.,  8.,  8., -1.,  2.,  6.,  6.,  8.,  8.,  8.,  8.,  8., -1.,  3.,
         6.,  8., -1., -1., -1.,  3.,  3.,  3.,  6.,  8., -1., -1., -1., -1.,
         3.,  6.,  8.,  8.,  8., -1., -1., -1., -1., -1.,  8.,  6.,  8.,  8.,
         5.,  6.,  8.,  8.,  6.,  8.,  8.,  8.,  8.,  8., -1.,  3.,  6.,  8.,
         8.,  8.,  8., -1., -1., -1., -1., -1., -1.,  6.,  8.,  8.,  8.,  3.,
         8.,  8., -1.,  8., -1., -1., -1., -1., -1.,  6.,  8.,  8., -1.,  8.,
        -1., -1.,  3.,  6.,  8.,  8., -1., -1., -1.,  8., -1.,  3., -1., -1.,
         3.,  5.,  6.,  3., -1., -1., -1., -1.,  8., -1.,  3., -1.,  6.,  8.,
         8.,  8.,  8.,  8.,  8.,  8.,  8.,  3.,  8.,  8., -1.,  6.,  8., -1.,
        -1., -1., -1.,  8., -1., -1., -1., -1.,  6.,  8.,  6.,  8.,  8.,  8.,
         8.,  8.,  8.,  8.,  8.,  8., -1., -1., -1., -1., -1., -1.,  3., -1.,
         6., -1., -1.,  3.,  8.,  8.,  3.,  3.,  5.,  6.,  8.,  8.,  8.,  8.,
         8., -1., -1., -1., -1., -1.,  3.,  8.,  3.,  6., -1., -1.,  6., -1.,
         3., -1., -1.,  3.,  3.,  5.,  6., -1., -1., -1.,  8.,  5.,  6.,  8.,
         8.,  3.,  8.,  8., -1.,  3.,  8.,  6.,  8.,  8.,  8.,  3.,  3.,  6.,
         8., -1., -1.,  8.,  8., -1.,  3.,  3.,  3., -1.,  6.,  8., -1., -1.,
        -1.,  3., -1.,  8.,  8., -1.,  3.,  6.,  8., -1., -1., -1., -1., -1.,
        -1.,  3.,  6.,  8., -1., -1., -1., -1., -1.,  3.,  5.,  6.,  8.,  8.,
         8.,  8.,  3.,  6.,  8.,  8.,  3., -1., -1., -1.,  3.,  3.,  6.,  8.,
         8.,  8.,  3., -1., -1., -1.,  2.,  2.,  5.,  5.,  5.,  6.,  8.,  8.,
         8.,  8., -1., -1., -1.,  3.,  8.,  3.,  6.,  8., -1., -1., -1., -1.,
        -1.,  8., -1.,  6.,  8., -1., -1., -1.,  3.,  3.,  8.,  8.,  3.,  5.,
         6.,  8., -1., -1., -1., -1.,  3.,  6.,  3.,  8.,  8.]), 'best match scores': tensor([0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.8951, 0.9985, 1.0000,
        0.1992, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1485,
        0.9996, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9936, 1.0000, 0.3918, 0.0000, 0.0000, 0.0000, 0.9795, 1.0000, 0.1776,
        0.8171, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.3130, 0.3605,
        0.9988, 0.9499, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1288, 0.9318,
        0.9812, 0.1820, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9988, 0.1567, 1.0000, 0.7640, 0.6026, 0.9413, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0838, 1.0000, 0.1945, 0.9899, 1.0000, 0.9033,
        1.0000, 0.1301, 1.0000, 0.9325, 0.9262, 0.9999, 1.0000, 1.0000, 0.2980,
        0.8494, 0.0620, 0.9999, 0.9989, 0.3808, 0.9994, 1.0000, 0.5631, 0.9999,
        0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9991, 0.9940, 0.6138,
        0.9361, 1.0000, 0.9651, 0.9997, 1.0000, 1.0000, 0.8269, 1.0000, 0.1312,
        0.9990, 0.9999, 0.8079, 1.0000, 0.9974, 1.0000, 1.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.9926, 1.0000,
        0.9999, 0.0000, 0.0000, 0.9954, 0.9983, 0.1246, 0.8833, 0.9996, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9880, 1.0000, 0.9980, 0.0576,
        0.0000, 0.3718, 1.0000, 0.0000, 0.9816, 0.5246, 1.0000, 0.4166, 0.3695,
        0.0000, 0.2202, 0.9947, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        1.0000, 1.0000, 0.6686, 0.9965, 0.9577, 0.6860, 0.1188, 1.0000, 0.0000,
        0.0527, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9891, 0.9931, 0.0778,
        1.0000, 0.9999, 0.6945, 1.0000, 0.8093, 0.8164, 0.9990, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.6334, 1.0000, 0.6474, 1.0000, 0.0000, 0.0000,
        0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.9976, 0.2741, 1.0000, 1.0000, 0.0514, 0.9937, 0.9994, 0.9784,
        1.0000, 0.1071, 1.0000, 1.0000, 1.0000, 0.2615, 1.0000, 1.0000, 0.0000,
        0.9998, 0.9522, 0.0917, 1.0000, 1.0000, 1.0000, 0.9999, 0.8961, 0.0000,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.9644, 0.9860,
        1.0000, 0.9923, 0.9997, 1.0000, 1.0000, 1.0000, 0.9996, 1.0000, 0.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.3560, 0.9881, 1.0000, 0.2172, 0.9797,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9987, 0.9794, 1.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.1148, 0.3162, 0.4146, 0.9996,
        0.9997, 0.1018, 0.9877, 0.9981, 1.0000, 0.8875, 0.9997, 0.9383, 0.9995,
        1.0000, 1.0000, 0.8365, 0.6115, 0.9963, 1.0000, 1.0000, 1.0000, 0.0000,
        0.0000, 0.6693, 0.9849, 0.3785, 0.1537, 0.8908, 0.9996, 0.9998, 0.8090,
        0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.0000, 1.0000, 0.9550, 1.0000, 0.9979, 0.2267, 0.5494, 0.9633,
        0.3687, 1.0000, 1.0000, 1.0000, 0.9928, 1.0000, 0.9956, 0.9844, 1.0000,
        1.0000, 1.0000, 0.8992, 0.9801, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000,
        0.7477, 1.0000, 1.0000, 0.1339, 1.0000, 1.0000, 0.4934, 0.2523, 1.0000,
        0.4167, 0.9997, 0.9678, 0.2967, 0.9904, 0.9997, 0.2934, 0.9512, 0.4260,
        0.2846, 1.0000, 0.9279, 0.0751, 0.9989, 0.9917, 0.9864, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.6354, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9967,
        0.9999, 0.2068, 0.6035, 1.0000, 0.3979, 1.0000, 0.0000, 0.6864, 0.9963,
        0.0000, 0.9903, 0.3310, 0.2151, 1.0000, 0.1923, 1.0000, 0.5766, 1.0000,
        0.1362, 0.9998, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9941, 0.2211,
        0.0000, 0.0000, 1.0000, 0.4801, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.1382, 1.0000, 0.0979, 0.8373, 1.0000, 0.9836, 0.0794,
        0.0000, 1.0000, 1.0000, 1.0000, 0.1609, 0.0957, 1.0000, 0.3055, 0.9950,
        1.0000, 0.0000, 0.0000, 0.0000, 0.4328, 1.0000, 0.4951, 1.0000, 1.0000,
        1.0000, 1.0000, 0.2120, 1.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.9979,
        0.1156, 1.0000, 0.0000, 0.7153, 1.0000, 1.0000, 0.9999, 0.9988, 1.0000,
        0.8443, 0.4570, 0.0000, 0.8596, 0.9965, 1.0000, 0.0000, 0.0000, 0.0000,
        0.9999, 0.3523, 0.9991, 1.0000, 0.0752, 0.0000, 0.0000, 0.0000, 0.0000,
        0.9999, 1.0000, 0.6703, 1.0000, 0.9973, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.9380, 1.0000, 0.9999, 0.9999, 1.0000, 0.5657, 0.8068,
        0.9674, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.8914, 1.0000,
        1.0000, 0.0547, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.9989, 0.9901, 0.1717, 0.0542, 0.8390, 0.9981, 0.0000,
        0.7860, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9999, 0.7040,
        0.0000, 1.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.2238, 1.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.0000, 0.7851, 0.0000, 0.0000, 1.0000, 0.5450,
        1.0000, 0.0739, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.8777,
        0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 0.9958, 0.9680, 0.0000, 1.0000, 0.3058, 0.0000, 0.0000,
        0.0000, 0.0000, 0.8096, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000,
        1.0000, 0.7831, 1.0000, 1.0000, 0.4796, 0.1823, 1.0000, 0.9952, 1.0000,
        0.9221, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9959, 0.0000,
        0.9997, 0.0000, 0.0000, 0.9546, 0.9971, 0.9999, 0.9999, 1.0000, 0.1137,
        1.0000, 0.9998, 0.9999, 0.0780, 0.7605, 1.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000, 0.8738,
        0.0000, 0.0756, 0.0000, 0.0000, 0.9978, 0.9954, 0.1177, 1.0000, 0.0000,
        0.0000, 0.0000, 1.0000, 0.9095, 0.0903, 0.9995, 0.0996, 0.4503, 0.9988,
        0.5497, 0.0000, 0.2540, 1.0000, 1.0000, 0.9968, 0.9909, 0.9995, 0.0879,
        1.0000, 1.0000, 0.7815, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 1.0000,
        1.0000, 0.7565, 0.0000, 1.0000, 0.9941, 0.0000, 0.0000, 0.0000, 0.9952,
        0.0000, 0.9996, 0.7244, 0.0000, 1.0000, 1.0000, 0.9941, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.9848, 0.0649, 0.9977, 0.9992, 1.0000, 0.1720,
        0.9549, 0.9388, 1.0000, 1.0000, 1.0000, 0.7660, 0.0000, 0.0000, 0.0000,
        1.0000, 0.1693, 0.0514, 1.0000, 1.0000, 1.0000, 1.0000, 0.0000, 0.0000,
        0.0000, 1.0000, 0.1438, 0.9719, 0.9875, 0.3921, 1.0000, 0.8350, 1.0000,
        1.0000, 0.9996, 0.0000, 0.0000, 0.0000, 0.4013, 0.9996, 0.9992, 1.0000,
        1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.9986, 0.0000, 0.9993,
        0.9994, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.6837, 1.0000, 0.9987,
        0.9990, 1.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.7016, 0.6808,
        1.0000, 0.2984, 1.0000]), 'num_pos': 795}
